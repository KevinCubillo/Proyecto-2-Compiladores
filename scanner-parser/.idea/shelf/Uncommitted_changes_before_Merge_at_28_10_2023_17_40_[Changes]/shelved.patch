Index: target/generated-sources/cup/com/compiladores/parser.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\n//----------------------------------------------------\r\n// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)\r\n//----------------------------------------------------\r\n\r\npackage com.compiladores;\r\n\r\nimport java_cup.runtime.*;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\nimport java_cup.runtime.XMLElement;\r\n\r\n/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.\r\n  */\r\n@SuppressWarnings({\"rawtypes\"})\r\npublic class parser extends java_cup.runtime.lr_parser {\r\n\r\n public final Class getSymbolContainer() {\r\n    return sym.class;\r\n}\r\n\r\n  /** Default constructor. */\r\n  @Deprecated\r\n  public parser() {super();}\r\n\r\n  /** Constructor which sets the default scanner. */\r\n  @Deprecated\r\n  public parser(java_cup.runtime.Scanner s) {super(s);}\r\n\r\n  /** Constructor which sets the default scanner. */\r\n  public parser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}\r\n\r\n  /** Production table. */\r\n  protected static final short _production_table[][] = \r\n    unpackFromStrings(new String[] {\r\n    \"\\000\\152\\000\\002\\002\\004\\000\\002\\002\\003\\000\\002\\002\" +\r\n    \"\\003\\000\\002\\002\\003\\000\\002\\002\\003\\000\\002\\002\\003\" +\r\n    \"\\000\\002\\035\\003\\000\\002\\035\\003\\000\\002\\035\\003\\000\" +\r\n    \"\\002\\035\\003\\000\\002\\035\\003\\000\\002\\036\\003\\000\\002\" +\r\n    \"\\036\\003\\000\\002\\036\\003\\000\\002\\036\\003\\000\\002\\036\" +\r\n    \"\\003\\000\\002\\036\\003\\000\\002\\041\\003\\000\\002\\041\\003\" +\r\n    \"\\000\\002\\041\\003\\000\\002\\037\\003\\000\\002\\037\\003\\000\" +\r\n    \"\\002\\037\\003\\000\\002\\037\\003\\000\\002\\037\\003\\000\\002\" +\r\n    \"\\037\\003\\000\\002\\040\\003\\000\\002\\040\\003\\000\\002\\032\" +\r\n    \"\\003\\000\\002\\032\\004\\000\\002\\032\\004\\000\\002\\032\\004\" +\r\n    \"\\000\\002\\032\\005\\000\\002\\032\\005\\000\\002\\033\\005\\000\" +\r\n    \"\\002\\034\\003\\000\\002\\034\\005\\000\\002\\034\\005\\000\\002\" +\r\n    \"\\034\\004\\000\\002\\010\\003\\000\\002\\010\\003\\000\\002\\013\" +\r\n    \"\\011\\000\\002\\014\\007\\000\\002\\015\\011\\000\\002\\016\\007\" +\r\n    \"\\000\\002\\017\\023\\000\\002\\017\\021\\000\\002\\017\\017\\000\" +\r\n    \"\\002\\030\\005\\000\\002\\026\\007\\000\\002\\027\\003\\000\\002\" +\r\n    \"\\027\\004\\000\\002\\031\\011\\000\\002\\031\\012\\000\\002\\031\" +\r\n    \"\\011\\000\\002\\043\\005\\000\\002\\020\\004\\000\\002\\021\\006\" +\r\n    \"\\000\\002\\022\\006\\000\\002\\023\\006\\000\\002\\024\\006\\000\" +\r\n    \"\\002\\053\\003\\000\\002\\053\\005\\000\\002\\025\\006\\000\\002\" +\r\n    \"\\025\\005\\000\\002\\046\\004\\000\\002\\044\\006\\000\\002\\044\" +\r\n    \"\\004\\000\\002\\045\\004\\000\\002\\011\\003\\000\\002\\011\\003\" +\r\n    \"\\000\\002\\011\\003\\000\\002\\011\\003\\000\\002\\011\\003\\000\" +\r\n    \"\\002\\011\\003\\000\\002\\011\\003\\000\\002\\011\\003\\000\\002\" +\r\n    \"\\011\\003\\000\\002\\011\\003\\000\\002\\011\\003\\000\\002\\011\" +\r\n    \"\\003\\000\\002\\011\\003\\000\\002\\011\\003\\000\\002\\012\\003\" +\r\n    \"\\000\\002\\012\\004\\000\\002\\006\\005\\000\\002\\007\\003\\000\" +\r\n    \"\\002\\007\\005\\000\\002\\007\\003\\000\\002\\042\\005\\000\\002\" +\r\n    \"\\003\\011\\000\\002\\003\\010\\000\\002\\004\\003\\000\\002\\004\" +\r\n    \"\\004\\000\\002\\004\\003\\000\\002\\051\\003\\000\\002\\051\\003\" +\r\n    \"\\000\\002\\052\\003\\000\\002\\052\\004\\000\\002\\005\\003\\000\" +\r\n    \"\\002\\005\\003\\000\\002\\005\\004\\000\\002\\047\\003\\000\\002\" +\r\n    \"\\047\\003\\000\\002\\050\\003\\000\\002\\050\\004\" });\r\n\r\n  /** Access to production table. */\r\n  public short[][] production_table() {return _production_table;}\r\n\r\n  /** Parse-action table. */\r\n  protected static final short[][] _action_table = \r\n    unpackFromStrings(new String[] {\r\n    \"\\000\\324\\000\\020\\037\\012\\056\\025\\057\\004\\060\\011\\061\" +\r\n    \"\\007\\062\\015\\070\\024\\001\\002\\000\\004\\034\\uffff\\001\\002\" +\r\n    \"\\000\\022\\002\\uff9e\\037\\012\\056\\025\\057\\004\\060\\011\\061\" +\r\n    \"\\007\\062\\015\\070\\024\\001\\002\\000\\022\\002\\uffa2\\037\\uffa2\" +\r\n    \"\\056\\uffa2\\057\\uffa2\\060\\uffa2\\061\\uffa2\\062\\uffa2\\070\\uffa2\\001\" +\r\n    \"\\002\\000\\004\\034\\ufffd\\001\\002\\000\\004\\034\\323\\001\\002\" +\r\n    \"\\000\\004\\034\\ufffe\\001\\002\\000\\026\\002\\uff9a\\010\\uff9a\\033\" +\r\n    \"\\uff9a\\037\\uff9a\\056\\uff9a\\057\\uff9a\\060\\uff9a\\061\\uff9a\\062\\uff9a\" +\r\n    \"\\070\\uff9a\\001\\002\\000\\016\\002\\uffa5\\056\\uffa5\\057\\uffa5\\060\" +\r\n    \"\\uffa5\\061\\uffa5\\062\\uffa5\\001\\002\\000\\026\\002\\uff99\\010\\uff99\" +\r\n    \"\\033\\uff99\\037\\uff99\\056\\uff99\\057\\uff99\\060\\uff99\\061\\uff99\\062\" +\r\n    \"\\uff99\\070\\uff99\\001\\002\\000\\004\\034\\ufffc\\001\\002\\000\\004\" +\r\n    \"\\007\\126\\001\\002\\000\\004\\002\\125\\001\\002\\000\\022\\002\" +\r\n    \"\\uffa3\\037\\012\\056\\uffa3\\057\\uffa3\\060\\uffa3\\061\\uffa3\\062\\uffa3\" +\r\n    \"\\070\\024\\001\\002\\000\\006\\016\\034\\017\\033\\001\\002\\000\" +\r\n    \"\\016\\002\\uff9d\\056\\025\\057\\004\\060\\011\\061\\007\\062\\015\" +\r\n    \"\\001\\002\\000\\022\\002\\uffa0\\037\\uffa0\\056\\uffa0\\057\\uffa0\\060\" +\r\n    \"\\uffa0\\061\\uffa0\\062\\uffa0\\070\\uffa0\\001\\002\\000\\026\\002\\uff9b\" +\r\n    \"\\010\\uff9b\\033\\uff9b\\037\\uff9b\\056\\uff9b\\057\\uff9b\\060\\uff9b\\061\" +\r\n    \"\\uff9b\\062\\uff9b\\070\\uff9b\\001\\002\\000\\004\\034\\000\\001\\002\" +\r\n    \"\\000\\022\\002\\uffa1\\037\\uffa1\\056\\uffa1\\057\\uffa1\\060\\uffa1\\061\" +\r\n    \"\\uffa1\\062\\uffa1\\070\\uffa1\\001\\002\\000\\016\\002\\uffa4\\056\\uffa4\" +\r\n    \"\\057\\uffa4\\060\\uffa4\\061\\uffa4\\062\\uffa4\\001\\002\\000\\004\\034\" +\r\n    \"\\031\\001\\002\\000\\004\\037\\032\\001\\002\\000\\004\\007\\uffa8\" +\r\n    \"\\001\\002\\000\\050\\002\\uffc9\\032\\uffc9\\035\\uffc9\\037\\uffc9\\040\" +\r\n    \"\\uffc9\\041\\uffc9\\042\\uffc9\\045\\uffc9\\046\\uffc9\\047\\uffc9\\051\\uffc9\" +\r\n    \"\\052\\uffc9\\054\\uffc9\\056\\uffc9\\057\\uffc9\\060\\uffc9\\061\\uffc9\\062\" +\r\n    \"\\uffc9\\070\\uffc9\\001\\002\\000\\024\\005\\035\\007\\051\\030\\050\" +\r\n    \"\\037\\046\\063\\041\\064\\037\\065\\053\\066\\054\\067\\042\\001\" +\r\n    \"\\002\\000\\014\\063\\041\\064\\037\\065\\053\\066\\054\\067\\042\" +\r\n    \"\\001\\002\\000\\014\\010\\uffd9\\017\\uffd9\\026\\104\\027\\105\\033\" +\r\n    \"\\uffd9\\001\\002\\000\\046\\004\\ufffb\\005\\ufffb\\006\\ufffb\\010\\ufffb\" +\r\n    \"\\011\\ufffb\\012\\ufffb\\013\\ufffb\\017\\ufffb\\020\\ufffb\\021\\ufffb\\022\" +\r\n    \"\\ufffb\\023\\ufffb\\024\\ufffb\\025\\ufffb\\026\\ufffb\\027\\ufffb\\033\\ufffb\" +\r\n    \"\\050\\ufffb\\001\\002\\000\\014\\010\\uffde\\017\\uffde\\026\\uffde\\027\" +\r\n    \"\\uffde\\033\\uffde\\001\\002\\000\\046\\004\\ufff7\\005\\ufff7\\006\\ufff7\" +\r\n    \"\\010\\ufff7\\011\\ufff7\\012\\ufff7\\013\\ufff7\\017\\ufff7\\020\\ufff7\\021\" +\r\n    \"\\ufff7\\022\\ufff7\\023\\ufff7\\024\\ufff7\\025\\ufff7\\026\\ufff7\\027\\ufff7\" +\r\n    \"\\033\\ufff7\\050\\ufff7\\001\\002\\000\\046\\004\\ufff8\\005\\ufff8\\006\" +\r\n    \"\\ufff8\\010\\ufff8\\011\\ufff8\\012\\ufff8\\013\\ufff8\\017\\ufff8\\020\\ufff8\" +\r\n    \"\\021\\ufff8\\022\\ufff8\\023\\ufff8\\024\\ufff8\\025\\ufff8\\026\\ufff8\\027\" +\r\n    \"\\ufff8\\033\\ufff8\\050\\ufff8\\001\\002\\000\\044\\004\\uffee\\005\\uffee\" +\r\n    \"\\006\\uffee\\010\\uffee\\011\\uffee\\012\\uffee\\013\\uffee\\017\\uffee\\020\" +\r\n    \"\\uffee\\021\\uffee\\022\\uffee\\023\\uffee\\024\\uffee\\025\\uffee\\026\\uffee\" +\r\n    \"\\027\\uffee\\033\\uffee\\001\\002\\000\\044\\004\\uffe5\\005\\uffe5\\006\" +\r\n    \"\\uffe5\\010\\uffe5\\011\\uffe5\\012\\uffe5\\013\\uffe5\\017\\uffe5\\020\\uffe5\" +\r\n    \"\\021\\uffe5\\022\\uffe5\\023\\uffe5\\024\\uffe5\\025\\uffe5\\026\\uffe5\\027\" +\r\n    \"\\uffe5\\033\\uffe5\\001\\002\\000\\004\\017\\122\\001\\002\\000\\052\" +\r\n    \"\\004\\uffef\\005\\uffef\\006\\uffef\\007\\113\\010\\uffef\\011\\uffef\\012\" +\r\n    \"\\uffef\\013\\uffef\\014\\112\\015\\111\\017\\uffef\\020\\uffef\\021\\uffef\" +\r\n    \"\\022\\uffef\\023\\uffef\\024\\uffef\\025\\uffef\\026\\uffef\\027\\uffef\\033\" +\r\n    \"\\uffef\\001\\002\\000\\044\\004\\ufff0\\005\\ufff0\\006\\ufff0\\010\\ufff0\" +\r\n    \"\\011\\ufff0\\012\\ufff0\\013\\ufff0\\017\\ufff0\\020\\ufff0\\021\\ufff0\\022\" +\r\n    \"\\ufff0\\023\\ufff0\\024\\ufff0\\025\\ufff0\\026\\ufff0\\027\\ufff0\\033\\ufff0\" +\r\n    \"\\001\\002\\000\\024\\005\\035\\007\\051\\030\\050\\037\\046\\063\" +\r\n    \"\\041\\064\\037\\065\\053\\066\\054\\067\\042\\001\\002\\000\\024\" +\r\n    \"\\005\\035\\007\\051\\030\\050\\037\\046\\063\\041\\064\\037\\065\" +\r\n    \"\\053\\066\\054\\067\\042\\001\\002\\000\\040\\004\\064\\005\\055\" +\r\n    \"\\006\\067\\010\\uffda\\011\\057\\012\\056\\013\\070\\017\\uffda\\020\" +\r\n    \"\\072\\021\\063\\022\\062\\023\\065\\024\\066\\025\\061\\033\\uffda\" +\r\n    \"\\001\\002\\000\\046\\004\\ufffa\\005\\ufffa\\006\\ufffa\\010\\ufffa\\011\" +\r\n    \"\\ufffa\\012\\ufffa\\013\\ufffa\\017\\ufffa\\020\\ufffa\\021\\ufffa\\022\\ufffa\" +\r\n    \"\\023\\ufffa\\024\\ufffa\\025\\ufffa\\026\\ufffa\\027\\ufffa\\033\\ufffa\\050\" +\r\n    \"\\ufffa\\001\\002\\000\\046\\004\\ufff9\\005\\ufff9\\006\\ufff9\\010\\ufff9\" +\r\n    \"\\011\\ufff9\\012\\ufff9\\013\\ufff9\\017\\ufff9\\020\\ufff9\\021\\ufff9\\022\" +\r\n    \"\\ufff9\\023\\ufff9\\024\\ufff9\\025\\ufff9\\026\\ufff9\\027\\ufff9\\033\\ufff9\" +\r\n    \"\\050\\ufff9\\001\\002\\000\\022\\005\\ufff5\\007\\ufff5\\037\\ufff5\\063\" +\r\n    \"\\ufff5\\064\\ufff5\\065\\ufff5\\066\\ufff5\\067\\ufff5\\001\\002\\000\\022\" +\r\n    \"\\005\\ufff2\\007\\ufff2\\037\\ufff2\\063\\ufff2\\064\\ufff2\\065\\ufff2\\066\" +\r\n    \"\\ufff2\\067\\ufff2\\001\\002\\000\\022\\005\\ufff3\\007\\ufff3\\037\\ufff3\" +\r\n    \"\\063\\ufff3\\064\\ufff3\\065\\ufff3\\066\\ufff3\\067\\ufff3\\001\\002\\000\" +\r\n    \"\\022\\005\\035\\007\\073\\037\\046\\063\\041\\064\\037\\065\\053\" +\r\n    \"\\066\\054\\067\\042\\001\\002\\000\\022\\005\\uffe8\\007\\uffe8\\037\" +\r\n    \"\\uffe8\\063\\uffe8\\064\\uffe8\\065\\uffe8\\066\\uffe8\\067\\uffe8\\001\\002\" +\r\n    \"\\000\\022\\005\\uffeb\\007\\uffeb\\037\\uffeb\\063\\uffeb\\064\\uffeb\\065\" +\r\n    \"\\uffeb\\066\\uffeb\\067\\uffeb\\001\\002\\000\\022\\005\\uffec\\007\\uffec\" +\r\n    \"\\037\\uffec\\063\\uffec\\064\\uffec\\065\\uffec\\066\\uffec\\067\\uffec\\001\" +\r\n    \"\\002\\000\\022\\005\\ufff6\\007\\ufff6\\037\\ufff6\\063\\ufff6\\064\\ufff6\" +\r\n    \"\\065\\ufff6\\066\\ufff6\\067\\ufff6\\001\\002\\000\\022\\005\\uffea\\007\" +\r\n    \"\\uffea\\037\\uffea\\063\\uffea\\064\\uffea\\065\\uffea\\066\\uffea\\067\\uffea\" +\r\n    \"\\001\\002\\000\\022\\005\\uffe9\\007\\uffe9\\037\\uffe9\\063\\uffe9\\064\" +\r\n    \"\\uffe9\\065\\uffe9\\066\\uffe9\\067\\uffe9\\001\\002\\000\\022\\005\\ufff4\" +\r\n    \"\\007\\ufff4\\037\\ufff4\\063\\ufff4\\064\\ufff4\\065\\ufff4\\066\\ufff4\\067\" +\r\n    \"\\ufff4\\001\\002\\000\\022\\005\\ufff1\\007\\ufff1\\037\\ufff1\\063\\ufff1\" +\r\n    \"\\064\\ufff1\\065\\ufff1\\066\\ufff1\\067\\ufff1\\001\\002\\000\\022\\005\" +\r\n    \"\\035\\007\\073\\037\\046\\063\\041\\064\\037\\065\\053\\066\\054\" +\r\n    \"\\067\\042\\001\\002\\000\\022\\005\\uffed\\007\\uffed\\037\\uffed\\063\" +\r\n    \"\\uffed\\064\\uffed\\065\\uffed\\066\\uffed\\067\\uffed\\001\\002\\000\\022\" +\r\n    \"\\005\\035\\007\\073\\037\\046\\063\\041\\064\\037\\065\\053\\066\" +\r\n    \"\\054\\067\\042\\001\\002\\000\\044\\004\\064\\005\\055\\006\\067\" +\r\n    \"\\010\\uffe1\\011\\057\\012\\056\\013\\070\\017\\uffe1\\020\\uffe1\\021\" +\r\n    \"\\uffe1\\022\\uffe1\\023\\uffe1\\024\\uffe1\\025\\uffe1\\026\\uffe1\\027\\uffe1\" +\r\n    \"\\033\\uffe1\\001\\002\\000\\020\\004\\064\\005\\055\\006\\067\\010\" +\r\n    \"\\076\\011\\057\\012\\056\\013\\070\\001\\002\\000\\044\\004\\uffe0\" +\r\n    \"\\005\\uffe0\\006\\uffe0\\010\\uffe0\\011\\uffe0\\012\\uffe0\\013\\uffe0\\017\" +\r\n    \"\\uffe0\\020\\uffe0\\021\\uffe0\\022\\uffe0\\023\\uffe0\\024\\uffe0\\025\\uffe0\" +\r\n    \"\\026\\uffe0\\027\\uffe0\\033\\uffe0\\001\\002\\000\\030\\004\\064\\005\" +\r\n    \"\\055\\006\\067\\010\\uffdf\\011\\057\\012\\056\\013\\070\\017\\uffdf\" +\r\n    \"\\026\\uffdf\\027\\uffdf\\033\\uffdf\\001\\002\\000\\010\\010\\103\\026\" +\r\n    \"\\104\\027\\105\\001\\002\\000\\034\\004\\064\\005\\055\\006\\067\" +\r\n    \"\\010\\076\\011\\057\\012\\056\\013\\070\\020\\072\\021\\063\\022\" +\r\n    \"\\062\\023\\065\\024\\066\\025\\061\\001\\002\\000\\024\\005\\035\" +\r\n    \"\\007\\051\\030\\050\\037\\046\\063\\041\\064\\037\\065\\053\\066\" +\r\n    \"\\054\\067\\042\\001\\002\\000\\014\\010\\uffdc\\017\\uffdc\\026\\uffdc\" +\r\n    \"\\027\\uffdc\\033\\uffdc\\001\\002\\000\\024\\005\\uffe7\\007\\uffe7\\030\" +\r\n    \"\\uffe7\\037\\uffe7\\063\\uffe7\\064\\uffe7\\065\\uffe7\\066\\uffe7\\067\\uffe7\" +\r\n    \"\\001\\002\\000\\024\\005\\uffe6\\007\\uffe6\\030\\uffe6\\037\\uffe6\\063\" +\r\n    \"\\uffe6\\064\\uffe6\\065\\uffe6\\066\\uffe6\\067\\uffe6\\001\\002\\000\\014\" +\r\n    \"\\010\\uffdd\\017\\uffdd\\026\\104\\027\\105\\033\\uffdd\\001\\002\\000\" +\r\n    \"\\032\\004\\064\\005\\055\\006\\067\\011\\057\\012\\056\\013\\070\" +\r\n    \"\\020\\072\\021\\063\\022\\062\\023\\065\\024\\066\\025\\061\\001\" +\r\n    \"\\002\\000\\014\\010\\uffdb\\017\\uffdb\\026\\uffdb\\027\\uffdb\\033\\uffdb\" +\r\n    \"\\001\\002\\000\\044\\004\\uffe2\\005\\uffe2\\006\\uffe2\\010\\uffe2\\011\" +\r\n    \"\\uffe2\\012\\uffe2\\013\\uffe2\\017\\uffe2\\020\\uffe2\\021\\uffe2\\022\\uffe2\" +\r\n    \"\\023\\uffe2\\024\\uffe2\\025\\uffe2\\026\\uffe2\\027\\uffe2\\033\\uffe2\\001\" +\r\n    \"\\002\\000\\044\\004\\uffe3\\005\\uffe3\\006\\uffe3\\010\\uffe3\\011\\uffe3\" +\r\n    \"\\012\\uffe3\\013\\uffe3\\017\\uffe3\\020\\uffe3\\021\\uffe3\\022\\uffe3\\023\" +\r\n    \"\\uffe3\\024\\uffe3\\025\\uffe3\\026\\uffe3\\027\\uffe3\\033\\uffe3\\001\\002\" +\r\n    \"\\000\\026\\005\\035\\007\\051\\010\\115\\030\\050\\037\\046\\063\" +\r\n    \"\\041\\064\\037\\065\\053\\066\\054\\067\\042\\001\\002\\000\\006\" +\r\n    \"\\010\\120\\033\\117\\001\\002\\000\\044\\004\\uffc1\\005\\uffc1\\006\" +\r\n    \"\\uffc1\\010\\uffc1\\011\\uffc1\\012\\uffc1\\013\\uffc1\\017\\uffc1\\020\\uffc1\" +\r\n    \"\\021\\uffc1\\022\\uffc1\\023\\uffc1\\024\\uffc1\\025\\uffc1\\026\\uffc1\\027\" +\r\n    \"\\uffc1\\033\\uffc1\\001\\002\\000\\006\\010\\uffc4\\033\\uffc4\\001\\002\" +\r\n    \"\\000\\024\\005\\035\\007\\051\\030\\050\\037\\046\\063\\041\\064\" +\r\n    \"\\037\\065\\053\\066\\054\\067\\042\\001\\002\\000\\044\\004\\uffc2\" +\r\n    \"\\005\\uffc2\\006\\uffc2\\010\\uffc2\\011\\uffc2\\012\\uffc2\\013\\uffc2\\017\" +\r\n    \"\\uffc2\\020\\uffc2\\021\\uffc2\\022\\uffc2\\023\\uffc2\\024\\uffc2\\025\\uffc2\" +\r\n    \"\\026\\uffc2\\027\\uffc2\\033\\uffc2\\001\\002\\000\\006\\010\\uffc3\\033\" +\r\n    \"\\uffc3\\001\\002\\000\\050\\002\\uffc7\\032\\uffc7\\035\\uffc7\\037\\uffc7\" +\r\n    \"\\040\\uffc7\\041\\uffc7\\042\\uffc7\\045\\uffc7\\046\\uffc7\\047\\uffc7\\051\" +\r\n    \"\\uffc7\\052\\uffc7\\054\\uffc7\\056\\uffc7\\057\\uffc7\\060\\uffc7\\061\\uffc7\" +\r\n    \"\\062\\uffc7\\070\\uffc7\\001\\002\\000\\044\\004\\uffe4\\005\\uffe4\\006\" +\r\n    \"\\uffe4\\010\\uffe4\\011\\uffe4\\012\\uffe4\\013\\uffe4\\017\\uffe4\\020\\uffe4\" +\r\n    \"\\021\\uffe4\\022\\uffe4\\023\\uffe4\\024\\uffe4\\025\\uffe4\\026\\uffe4\\027\" +\r\n    \"\\uffe4\\033\\uffe4\\001\\002\\000\\026\\002\\uff98\\010\\uff98\\033\\uff98\" +\r\n    \"\\037\\uff98\\056\\uff98\\057\\uff98\\060\\uff98\\061\\uff98\\062\\uff98\\070\" +\r\n    \"\\uff98\\001\\002\\000\\004\\002\\001\\001\\002\\000\\022\\010\\130\" +\r\n    \"\\037\\012\\056\\025\\057\\004\\060\\011\\061\\007\\062\\015\\070\" +\r\n    \"\\024\\001\\002\\000\\004\\034\\321\\001\\002\\000\\004\\031\\316\" +\r\n    \"\\001\\002\\000\\006\\010\\uffab\\033\\uffab\\001\\002\\000\\012\\010\" +\r\n    \"\\uffa9\\033\\uffa9\\037\\012\\070\\024\\001\\002\\000\\006\\010\\135\" +\r\n    \"\\033\\134\\001\\002\\000\\014\\056\\025\\057\\004\\060\\011\\061\" +\r\n    \"\\007\\062\\015\\001\\002\\000\\004\\031\\136\\001\\002\\000\\036\" +\r\n    \"\\035\\153\\037\\147\\040\\146\\041\\162\\042\\167\\045\\143\\046\" +\r\n    \"\\152\\052\\137\\054\\165\\056\\025\\057\\004\\060\\011\\061\\007\" +\r\n    \"\\062\\015\\001\\002\\000\\004\\053\\312\\001\\002\\000\\044\\032\" +\r\n    \"\\uffae\\035\\uffae\\037\\uffae\\040\\uffae\\041\\uffae\\042\\uffae\\045\\uffae\" +\r\n    \"\\046\\uffae\\047\\uffae\\051\\uffae\\052\\uffae\\054\\uffae\\056\\uffae\\057\" +\r\n    \"\\uffae\\060\\uffae\\061\\uffae\\062\\uffae\\001\\002\\000\\044\\032\\uffb9\" +\r\n    \"\\035\\uffb9\\037\\uffb9\\040\\uffb9\\041\\uffb9\\042\\uffb9\\045\\uffb9\\046\" +\r\n    \"\\uffb9\\047\\uffb9\\051\\uffb9\\052\\uffb9\\054\\uffb9\\056\\uffb9\\057\\uffb9\" +\r\n    \"\\060\\uffb9\\061\\uffb9\\062\\uffb9\\001\\002\\000\\044\\032\\uffbc\\035\" +\r\n    \"\\uffbc\\037\\uffbc\\040\\uffbc\\041\\uffbc\\042\\uffbc\\045\\uffbc\\046\\uffbc\" +\r\n    \"\\047\\uffbc\\051\\uffbc\\052\\uffbc\\054\\uffbc\\056\\uffbc\\057\\uffbc\\060\" +\r\n    \"\\uffbc\\061\\uffbc\\062\\uffbc\\001\\002\\000\\004\\007\\304\\001\\002\" +\r\n    \"\\000\\004\\034\\302\\001\\002\\000\\004\\017\\301\\001\\002\\000\" +\r\n    \"\\006\\017\\275\\034\\276\\001\\002\\000\\006\\007\\113\\016\\272\" +\r\n    \"\\001\\002\\000\\044\\032\\uffb8\\035\\uffb8\\037\\uffb8\\040\\uffb8\\041\" +\r\n    \"\\uffb8\\042\\uffb8\\045\\uffb8\\046\\uffb8\\047\\uffb8\\051\\uffb8\\052\\uffb8\" +\r\n    \"\\054\\uffb8\\056\\uffb8\\057\\uffb8\\060\\uffb8\\061\\uffb8\\062\\uffb8\\001\" +\r\n    \"\\002\\000\\044\\032\\uffb1\\035\\uffb1\\037\\uffb1\\040\\uffb1\\041\\uffb1\" +\r\n    \"\\042\\uffb1\\045\\uffb1\\046\\uffb1\\047\\uffb1\\051\\uffb1\\052\\uffb1\\054\" +\r\n    \"\\uffb1\\056\\uffb1\\057\\uffb1\\060\\uffb1\\061\\uffb1\\062\\uffb1\\001\\002\" +\r\n    \"\\000\\004\\007\\246\\001\\002\\000\\004\\007\\240\\001\\002\\000\" +\r\n    \"\\046\\032\\uffb4\\035\\uffb4\\036\\234\\037\\uffb4\\040\\uffb4\\041\\uffb4\" +\r\n    \"\\042\\uffb4\\045\\uffb4\\046\\uffb4\\047\\uffb4\\051\\uffb4\\052\\uffb4\\054\" +\r\n    \"\\uffb4\\056\\uffb4\\057\\uffb4\\060\\uffb4\\061\\uffb4\\062\\uffb4\\001\\002\" +\r\n    \"\\000\\044\\032\\uffb5\\035\\uffb5\\037\\uffb5\\040\\uffb5\\041\\uffb5\\042\" +\r\n    \"\\uffb5\\045\\uffb5\\046\\uffb5\\047\\uffb5\\051\\uffb5\\052\\uffb5\\054\\uffb5\" +\r\n    \"\\056\\uffb5\\057\\uffb5\\060\\uffb5\\061\\uffb5\\062\\uffb5\\001\\002\\000\" +\r\n    \"\\044\\032\\uffb0\\035\\uffb0\\037\\uffb0\\040\\uffb0\\041\\uffb0\\042\\uffb0\" +\r\n    \"\\045\\uffb0\\046\\uffb0\\047\\uffb0\\051\\uffb0\\052\\uffb0\\054\\uffb0\\056\" +\r\n    \"\\uffb0\\057\\uffb0\\060\\uffb0\\061\\uffb0\\062\\uffb0\\001\\002\\000\\044\" +\r\n    \"\\032\\uffaf\\035\\uffaf\\037\\uffaf\\040\\uffaf\\041\\uffaf\\042\\uffaf\\045\" +\r\n    \"\\uffaf\\046\\uffaf\\047\\uffaf\\051\\uffaf\\052\\uffaf\\054\\uffaf\\056\\uffaf\" +\r\n    \"\\057\\uffaf\\060\\uffaf\\061\\uffaf\\062\\uffaf\\001\\002\\000\\044\\032\" +\r\n    \"\\uffb3\\035\\uffb3\\037\\uffb3\\040\\uffb3\\041\\uffb3\\042\\uffb3\\045\\uffb3\" +\r\n    \"\\046\\uffb3\\047\\uffb3\\051\\uffb3\\052\\uffb3\\054\\uffb3\\056\\uffb3\\057\" +\r\n    \"\\uffb3\\060\\uffb3\\061\\uffb3\\062\\uffb3\\001\\002\\000\\044\\032\\uffb6\" +\r\n    \"\\035\\uffb6\\037\\uffb6\\040\\uffb6\\041\\uffb6\\042\\uffb6\\045\\uffb6\\046\" +\r\n    \"\\uffb6\\047\\uffb6\\051\\uffb6\\052\\uffb6\\054\\uffb6\\056\\uffb6\\057\\uffb6\" +\r\n    \"\\060\\uffb6\\061\\uffb6\\062\\uffb6\\001\\002\\000\\004\\017\\233\\001\" +\r\n    \"\\002\\000\\044\\032\\uffbb\\035\\uffbb\\037\\uffbb\\040\\uffbb\\041\\uffbb\" +\r\n    \"\\042\\uffbb\\045\\uffbb\\046\\uffbb\\047\\uffbb\\051\\uffbb\\052\\uffbb\\054\" +\r\n    \"\\uffbb\\056\\uffbb\\057\\uffbb\\060\\uffbb\\061\\uffbb\\062\\uffbb\\001\\002\" +\r\n    \"\\000\\046\\032\\uffb2\\035\\uffb2\\036\\227\\037\\uffb2\\040\\uffb2\\041\" +\r\n    \"\\uffb2\\042\\uffb2\\045\\uffb2\\046\\uffb2\\047\\uffb2\\051\\uffb2\\052\\uffb2\" +\r\n    \"\\054\\uffb2\\056\\uffb2\\057\\uffb2\\060\\uffb2\\061\\uffb2\\062\\uffb2\\001\" +\r\n    \"\\002\\000\\004\\055\\224\\001\\002\\000\\040\\032\\223\\035\\153\" +\r\n    \"\\037\\147\\040\\146\\041\\162\\042\\167\\045\\143\\046\\152\\052\" +\r\n    \"\\137\\054\\165\\056\\025\\057\\004\\060\\011\\061\\007\\062\\015\" +\r\n    \"\\001\\002\\000\\004\\034\\172\\001\\002\\000\\044\\032\\uffb7\\035\" +\r\n    \"\\uffb7\\037\\uffb7\\040\\uffb7\\041\\uffb7\\042\\uffb7\\045\\uffb7\\046\\uffb7\" +\r\n    \"\\047\\uffb7\\051\\uffb7\\052\\uffb7\\054\\uffb7\\056\\uffb7\\057\\uffb7\\060\" +\r\n    \"\\uffb7\\061\\uffb7\\062\\uffb7\\001\\002\\000\\044\\032\\uffba\\035\\uffba\" +\r\n    \"\\037\\uffba\\040\\uffba\\041\\uffba\\042\\uffba\\045\\uffba\\046\\uffba\\047\" +\r\n    \"\\uffba\\051\\uffba\\052\\uffba\\054\\uffba\\056\\uffba\\057\\uffba\\060\\uffba\" +\r\n    \"\\061\\uffba\\062\\uffba\\001\\002\\000\\004\\037\\173\\001\\002\\000\" +\r\n    \"\\004\\034\\174\\001\\002\\000\\004\\043\\175\\001\\002\\000\\004\" +\r\n    \"\\034\\176\\001\\002\\000\\004\\044\\177\\001\\002\\000\\004\\007\" +\r\n    \"\\200\\001\\002\\000\\022\\005\\035\\007\\073\\037\\046\\063\\041\" +\r\n    \"\\064\\037\\065\\053\\066\\054\\067\\042\\001\\002\\000\\022\\004\" +\r\n    \"\\064\\005\\055\\006\\067\\010\\203\\011\\057\\012\\056\\013\\070\" +\r\n    \"\\033\\202\\001\\002\\000\\022\\005\\035\\007\\073\\037\\046\\063\" +\r\n    \"\\041\\064\\037\\065\\053\\066\\054\\067\\042\\001\\002\\000\\004\" +\r\n    \"\\031\\204\\001\\002\\000\\036\\035\\153\\037\\147\\040\\146\\041\" +\r\n    \"\\162\\042\\167\\045\\143\\046\\152\\052\\137\\054\\165\\056\\025\" +\r\n    \"\\057\\004\\060\\011\\061\\007\\062\\015\\001\\002\\000\\040\\032\" +\r\n    \"\\207\\035\\153\\037\\147\\040\\146\\041\\162\\042\\167\\045\\143\" +\r\n    \"\\046\\152\\052\\137\\054\\165\\056\\025\\057\\004\\060\\011\\061\" +\r\n    \"\\007\\062\\015\\001\\002\\000\\044\\032\\uffad\\035\\uffad\\037\\uffad\" +\r\n    \"\\040\\uffad\\041\\uffad\\042\\uffad\\045\\uffad\\046\\uffad\\047\\uffad\\051\" +\r\n    \"\\uffad\\052\\uffad\\054\\uffad\\056\\uffad\\057\\uffad\\060\\uffad\\061\\uffad\" +\r\n    \"\\062\\uffad\\001\\002\\000\\044\\032\\uffd2\\035\\uffd2\\037\\uffd2\\040\" +\r\n    \"\\uffd2\\041\\uffd2\\042\\uffd2\\045\\uffd2\\046\\uffd2\\047\\uffd2\\051\\uffd2\" +\r\n    \"\\052\\uffd2\\054\\uffd2\\056\\uffd2\\057\\uffd2\\060\\uffd2\\061\\uffd2\\062\" +\r\n    \"\\uffd2\\001\\002\\000\\022\\004\\064\\005\\055\\006\\067\\010\\212\" +\r\n    \"\\011\\057\\012\\056\\013\\070\\033\\211\\001\\002\\000\\022\\005\" +\r\n    \"\\035\\007\\073\\037\\046\\063\\041\\064\\037\\065\\053\\066\\054\" +\r\n    \"\\067\\042\\001\\002\\000\\004\\031\\213\\001\\002\\000\\036\\035\" +\r\n    \"\\153\\037\\147\\040\\146\\041\\162\\042\\167\\045\\143\\046\\152\" +\r\n    \"\\052\\137\\054\\165\\056\\025\\057\\004\\060\\011\\061\\007\\062\" +\r\n    \"\\015\\001\\002\\000\\040\\032\\215\\035\\153\\037\\147\\040\\146\" +\r\n    \"\\041\\162\\042\\167\\045\\143\\046\\152\\052\\137\\054\\165\\056\" +\r\n    \"\\025\\057\\004\\060\\011\\061\\007\\062\\015\\001\\002\\000\\044\" +\r\n    \"\\032\\uffd3\\035\\uffd3\\037\\uffd3\\040\\uffd3\\041\\uffd3\\042\\uffd3\\045\" +\r\n    \"\\uffd3\\046\\uffd3\\047\\uffd3\\051\\uffd3\\052\\uffd3\\054\\uffd3\\056\\uffd3\" +\r\n    \"\\057\\uffd3\\060\\uffd3\\061\\uffd3\\062\\uffd3\\001\\002\\000\\020\\004\" +\r\n    \"\\064\\005\\055\\006\\067\\010\\217\\011\\057\\012\\056\\013\\070\" +\r\n    \"\\001\\002\\000\\004\\031\\220\\001\\002\\000\\036\\035\\153\\037\" +\r\n    \"\\147\\040\\146\\041\\162\\042\\167\\045\\143\\046\\152\\052\\137\" +\r\n    \"\\054\\165\\056\\025\\057\\004\\060\\011\\061\\007\\062\\015\\001\" +\r\n    \"\\002\\000\\040\\032\\222\\035\\153\\037\\147\\040\\146\\041\\162\" +\r\n    \"\\042\\167\\045\\143\\046\\152\\052\\137\\054\\165\\056\\025\\057\" +\r\n    \"\\004\\060\\011\\061\\007\\062\\015\\001\\002\\000\\044\\032\\uffd4\" +\r\n    \"\\035\\uffd4\\037\\uffd4\\040\\uffd4\\041\\uffd4\\042\\uffd4\\045\\uffd4\\046\" +\r\n    \"\\uffd4\\047\\uffd4\\051\\uffd4\\052\\uffd4\\054\\uffd4\\056\\uffd4\\057\\uffd4\" +\r\n    \"\\060\\uffd4\\061\\uffd4\\062\\uffd4\\001\\002\\000\\016\\002\\uffa7\\056\" +\r\n    \"\\uffa7\\057\\uffa7\\060\\uffa7\\061\\uffa7\\062\\uffa7\\001\\002\\000\\024\" +\r\n    \"\\005\\035\\007\\051\\030\\050\\037\\046\\063\\041\\064\\037\\065\" +\r\n    \"\\053\\066\\054\\067\\042\\001\\002\\000\\004\\017\\226\\001\\002\" +\r\n    \"\\000\\044\\032\\uffc5\\035\\uffc5\\037\\uffc5\\040\\uffc5\\041\\uffc5\\042\" +\r\n    \"\\uffc5\\045\\uffc5\\046\\uffc5\\047\\uffc5\\051\\uffc5\\052\\uffc5\\054\\uffc5\" +\r\n    \"\\056\\uffc5\\057\\uffc5\\060\\uffc5\\061\\uffc5\\062\\uffc5\\001\\002\\000\" +\r\n    \"\\004\\031\\230\\001\\002\\000\\036\\035\\153\\037\\147\\040\\146\" +\r\n    \"\\041\\162\\042\\167\\045\\143\\046\\152\\052\\137\\054\\165\\056\" +\r\n    \"\\025\\057\\004\\060\\011\\061\\007\\062\\015\\001\\002\\000\\040\" +\r\n    \"\\032\\232\\035\\153\\037\\147\\040\\146\\041\\162\\042\\167\\045\" +\r\n    \"\\143\\046\\152\\052\\137\\054\\165\\056\\025\\057\\004\\060\\011\" +\r\n    \"\\061\\007\\062\\015\\001\\002\\000\\044\\032\\uffd5\\035\\uffd5\\037\" +\r\n    \"\\uffd5\\040\\uffd5\\041\\uffd5\\042\\uffd5\\045\\uffd5\\046\\uffd5\\047\\uffd5\" +\r\n    \"\\051\\uffd5\\052\\uffd5\\054\\uffd5\\056\\uffd5\\057\\uffd5\\060\\uffd5\\061\" +\r\n    \"\\uffd5\\062\\uffd5\\001\\002\\000\\044\\032\\uffbd\\035\\uffbd\\037\\uffbd\" +\r\n    \"\\040\\uffbd\\041\\uffbd\\042\\uffbd\\045\\uffbd\\046\\uffbd\\047\\uffbd\\051\" +\r\n    \"\\uffbd\\052\\uffbd\\054\\uffbd\\056\\uffbd\\057\\uffbd\\060\\uffbd\\061\\uffbd\" +\r\n    \"\\062\\uffbd\\001\\002\\000\\004\\031\\235\\001\\002\\000\\036\\035\" +\r\n    \"\\153\\037\\147\\040\\146\\041\\162\\042\\167\\045\\143\\046\\152\" +\r\n    \"\\052\\137\\054\\165\\056\\025\\057\\004\\060\\011\\061\\007\\062\" +\r\n    \"\\015\\001\\002\\000\\040\\032\\237\\035\\153\\037\\147\\040\\146\" +\r\n    \"\\041\\162\\042\\167\\045\\143\\046\\152\\052\\137\\054\\165\\056\" +\r\n    \"\\025\\057\\004\\060\\011\\061\\007\\062\\015\\001\\002\\000\\044\" +\r\n    \"\\032\\uffd7\\035\\uffd7\\037\\uffd7\\040\\uffd7\\041\\uffd7\\042\\uffd7\\045\" +\r\n    \"\\uffd7\\046\\uffd7\\047\\uffd7\\051\\uffd7\\052\\uffd7\\054\\uffd7\\056\\uffd7\" +\r\n    \"\\057\\uffd7\\060\\uffd7\\061\\uffd7\\062\\uffd7\\001\\002\\000\\024\\005\" +\r\n    \"\\035\\007\\051\\030\\050\\037\\046\\063\\041\\064\\037\\065\\053\" +\r\n    \"\\066\\054\\067\\042\\001\\002\\000\\004\\010\\242\\001\\002\\000\" +\r\n    \"\\004\\031\\243\\001\\002\\000\\036\\035\\153\\037\\147\\040\\146\" +\r\n    \"\\041\\162\\042\\167\\045\\143\\046\\152\\052\\137\\054\\165\\056\" +\r\n    \"\\025\\057\\004\\060\\011\\061\\007\\062\\015\\001\\002\\000\\040\" +\r\n    \"\\032\\245\\035\\153\\037\\147\\040\\146\\041\\162\\042\\167\\045\" +\r\n    \"\\143\\046\\152\\052\\137\\054\\165\\056\\025\\057\\004\\060\\011\" +\r\n    \"\\061\\007\\062\\015\\001\\002\\000\\046\\032\\uffd8\\035\\uffd8\\036\" +\r\n    \"\\uffd8\\037\\uffd8\\040\\uffd8\\041\\uffd8\\042\\uffd8\\045\\uffd8\\046\\uffd8\" +\r\n    \"\\047\\uffd8\\051\\uffd8\\052\\uffd8\\054\\uffd8\\056\\uffd8\\057\\uffd8\\060\" +\r\n    \"\\uffd8\\061\\uffd8\\062\\uffd8\\001\\002\\000\\024\\005\\035\\007\\051\" +\r\n    \"\\030\\050\\037\\046\\063\\041\\064\\037\\065\\053\\066\\054\\067\" +\r\n    \"\\042\\001\\002\\000\\004\\010\\250\\001\\002\\000\\004\\031\\251\" +\r\n    \"\\001\\002\\000\\006\\047\\256\\051\\252\\001\\002\\000\\004\\050\" +\r\n    \"\\270\\001\\002\\000\\010\\032\\uffcf\\047\\uffcf\\051\\uffcf\\001\\002\" +\r\n    \"\\000\\010\\032\\264\\047\\256\\051\\252\\001\\002\\000\\004\\032\" +\r\n    \"\\263\\001\\002\\000\\004\\034\\257\\001\\002\\000\\014\\063\\041\" +\r\n    \"\\064\\037\\065\\053\\066\\054\\067\\042\\001\\002\\000\\004\\050\" +\r\n    \"\\261\\001\\002\\000\\036\\035\\153\\037\\147\\040\\146\\041\\162\" +\r\n    \"\\042\\167\\045\\143\\046\\152\\052\\137\\054\\165\\056\\025\\057\" +\r\n    \"\\004\\060\\011\\061\\007\\062\\015\\001\\002\\000\\044\\032\\uffd0\" +\r\n    \"\\035\\153\\037\\147\\040\\146\\041\\162\\042\\167\\045\\143\\046\" +\r\n    \"\\152\\047\\uffd0\\051\\uffd0\\052\\137\\054\\165\\056\\025\\057\\004\" +\r\n    \"\\060\\011\\061\\007\\062\\015\\001\\002\\000\\044\\032\\uffcb\\035\" +\r\n    \"\\uffcb\\037\\uffcb\\040\\uffcb\\041\\uffcb\\042\\uffcb\\045\\uffcb\\046\\uffcb\" +\r\n    \"\\047\\uffcb\\051\\uffcb\\052\\uffcb\\054\\uffcb\\056\\uffcb\\057\\uffcb\\060\" +\r\n    \"\\uffcb\\061\\uffcb\\062\\uffcb\\001\\002\\000\\044\\032\\uffcd\\035\\uffcd\" +\r\n    \"\\037\\uffcd\\040\\uffcd\\041\\uffcd\\042\\uffcd\\045\\uffcd\\046\\uffcd\\047\" +\r\n    \"\\uffcd\\051\\uffcd\\052\\uffcd\\054\\uffcd\\056\\uffcd\\057\\uffcd\\060\\uffcd\" +\r\n    \"\\061\\uffcd\\062\\uffcd\\001\\002\\000\\010\\032\\uffce\\047\\uffce\\051\" +\r\n    \"\\uffce\\001\\002\\000\\004\\032\\267\\001\\002\\000\\044\\032\\uffcc\" +\r\n    \"\\035\\uffcc\\037\\uffcc\\040\\uffcc\\041\\uffcc\\042\\uffcc\\045\\uffcc\\046\" +\r\n    \"\\uffcc\\047\\uffcc\\051\\uffcc\\052\\uffcc\\054\\uffcc\\056\\uffcc\\057\\uffcc\" +\r\n    \"\\060\\uffcc\\061\\uffcc\\062\\uffcc\\001\\002\\000\\036\\035\\153\\037\" +\r\n    \"\\147\\040\\146\\041\\162\\042\\167\\045\\143\\046\\152\\052\\137\" +\r\n    \"\\054\\165\\056\\025\\057\\004\\060\\011\\061\\007\\062\\015\\001\" +\r\n    \"\\002\\000\\040\\032\\uffd1\\035\\153\\037\\147\\040\\146\\041\\162\" +\r\n    \"\\042\\167\\045\\143\\046\\152\\052\\137\\054\\165\\056\\025\\057\" +\r\n    \"\\004\\060\\011\\061\\007\\062\\015\\001\\002\\000\\024\\005\\035\" +\r\n    \"\\007\\051\\030\\050\\037\\046\\063\\041\\064\\037\\065\\053\\066\" +\r\n    \"\\054\\067\\042\\001\\002\\000\\004\\017\\274\\001\\002\\000\\044\" +\r\n    \"\\032\\uffc8\\035\\uffc8\\037\\uffc8\\040\\uffc8\\041\\uffc8\\042\\uffc8\\045\" +\r\n    \"\\uffc8\\046\\uffc8\\047\\uffc8\\051\\uffc8\\052\\uffc8\\054\\uffc8\\056\\uffc8\" +\r\n    \"\\057\\uffc8\\060\\uffc8\\061\\uffc8\\062\\uffc8\\001\\002\\000\\044\\032\" +\r\n    \"\\uffbe\\035\\uffbe\\037\\uffbe\\040\\uffbe\\041\\uffbe\\042\\uffbe\\045\\uffbe\" +\r\n    \"\\046\\uffbe\\047\\uffbe\\051\\uffbe\\052\\uffbe\\054\\uffbe\\056\\uffbe\\057\" +\r\n    \"\\uffbe\\060\\uffbe\\061\\uffbe\\062\\uffbe\\001\\002\\000\\024\\005\\035\" +\r\n    \"\\007\\051\\030\\050\\037\\046\\063\\041\\064\\037\\065\\053\\066\" +\r\n    \"\\054\\067\\042\\001\\002\\000\\004\\017\\300\\001\\002\\000\\044\" +\r\n    \"\\032\\uffbf\\035\\uffbf\\037\\uffbf\\040\\uffbf\\041\\uffbf\\042\\uffbf\\045\" +\r\n    \"\\uffbf\\046\\uffbf\\047\\uffbf\\051\\uffbf\\052\\uffbf\\054\\uffbf\\056\\uffbf\" +\r\n    \"\\057\\uffbf\\060\\uffbf\\061\\uffbf\\062\\uffbf\\001\\002\\000\\044\\032\" +\r\n    \"\\uffc0\\035\\uffc0\\037\\uffc0\\040\\uffc0\\041\\uffc0\\042\\uffc0\\045\\uffc0\" +\r\n    \"\\046\\uffc0\\047\\uffc0\\051\\uffc0\\052\\uffc0\\054\\uffc0\\056\\uffc0\\057\" +\r\n    \"\\uffc0\\060\\uffc0\\061\\uffc0\\062\\uffc0\\001\\002\\000\\004\\037\\303\" +\r\n    \"\\001\\002\\000\\006\\016\\uffca\\017\\uffca\\001\\002\\000\\024\\005\" +\r\n    \"\\035\\007\\051\\030\\050\\037\\046\\063\\041\\064\\037\\065\\053\" +\r\n    \"\\066\\054\\067\\042\\001\\002\\000\\010\\010\\306\\026\\104\\027\" +\r\n    \"\\105\\001\\002\\000\\004\\031\\307\\001\\002\\000\\036\\035\\153\" +\r\n    \"\\037\\147\\040\\146\\041\\162\\042\\167\\045\\143\\046\\152\\052\" +\r\n    \"\\137\\054\\165\\056\\025\\057\\004\\060\\011\\061\\007\\062\\015\" +\r\n    \"\\001\\002\\000\\040\\032\\311\\035\\153\\037\\147\\040\\146\\041\" +\r\n    \"\\162\\042\\167\\045\\143\\046\\152\\052\\137\\054\\165\\056\\025\" +\r\n    \"\\057\\004\\060\\011\\061\\007\\062\\015\\001\\002\\000\\046\\032\" +\r\n    \"\\uffd6\\035\\uffd6\\036\\uffd6\\037\\uffd6\\040\\uffd6\\041\\uffd6\\042\\uffd6\" +\r\n    \"\\045\\uffd6\\046\\uffd6\\047\\uffd6\\051\\uffd6\\052\\uffd6\\054\\uffd6\\056\" +\r\n    \"\\uffd6\\057\\uffd6\\060\\uffd6\\061\\uffd6\\062\\uffd6\\001\\002\\000\\004\" +\r\n    \"\\037\\313\\001\\002\\000\\004\\017\\314\\001\\002\\000\\044\\032\" +\r\n    \"\\uffc6\\035\\uffc6\\037\\uffc6\\040\\uffc6\\041\\uffc6\\042\\uffc6\\045\\uffc6\" +\r\n    \"\\046\\uffc6\\047\\uffc6\\051\\uffc6\\052\\uffc6\\054\\uffc6\\056\\uffc6\\057\" +\r\n    \"\\uffc6\\060\\uffc6\\061\\uffc6\\062\\uffc6\\001\\002\\000\\006\\010\\uffaa\" +\r\n    \"\\033\\uffaa\\001\\002\\000\\036\\035\\153\\037\\147\\040\\146\\041\" +\r\n    \"\\162\\042\\167\\045\\143\\046\\152\\052\\137\\054\\165\\056\\025\" +\r\n    \"\\057\\004\\060\\011\\061\\007\\062\\015\\001\\002\\000\\040\\032\" +\r\n    \"\\320\\035\\153\\037\\147\\040\\146\\041\\162\\042\\167\\045\\143\" +\r\n    \"\\046\\152\\052\\137\\054\\165\\056\\025\\057\\004\\060\\011\\061\" +\r\n    \"\\007\\062\\015\\001\\002\\000\\016\\002\\uffa6\\056\\uffa6\\057\\uffa6\" +\r\n    \"\\060\\uffa6\\061\\uffa6\\062\\uffa6\\001\\002\\000\\004\\037\\322\\001\" +\r\n    \"\\002\\000\\006\\010\\uffac\\033\\uffac\\001\\002\\000\\004\\037\\324\" +\r\n    \"\\001\\002\\000\\010\\007\\uffa8\\016\\uffca\\017\\uffca\\001\\002\\000\" +\r\n    \"\\022\\002\\uff9f\\037\\uff9f\\056\\uff9f\\057\\uff9f\\060\\uff9f\\061\\uff9f\" +\r\n    \"\\062\\uff9f\\070\\uff9f\\001\\002\\000\\016\\002\\uff9c\\056\\025\\057\" +\r\n    \"\\004\\060\\011\\061\\007\\062\\015\\001\\002\" });\r\n\r\n  /** Access to parse-action table. */\r\n  public short[][] action_table() {return _action_table;}\r\n\r\n  /** <code>reduce_goto</code> table. */\r\n  protected static final short[][] _reduce_table = \r\n    unpackFromStrings(new String[] {\r\n    \"\\000\\324\\000\\032\\002\\007\\003\\012\\004\\021\\005\\016\\020\" +\r\n    \"\\005\\022\\025\\042\\015\\043\\020\\047\\013\\050\\017\\051\\022\" +\r\n    \"\\052\\004\\001\\001\\000\\002\\001\\001\\000\\026\\002\\007\\003\" +\r\n    \"\\012\\004\\325\\020\\005\\022\\025\\042\\015\\043\\020\\047\\013\" +\r\n    \"\\050\\017\\051\\324\\001\\001\\000\\002\\001\\001\\000\\002\\001\" +\r\n    \"\\001\\000\\002\\001\\001\\000\\002\\001\\001\\000\\002\\001\\001\" +\r\n    \"\\000\\002\\001\\001\\000\\002\\001\\001\\000\\002\\001\\001\\000\" +\r\n    \"\\002\\001\\001\\000\\002\\001\\001\\000\\004\\047\\123\\001\\001\" +\r\n    \"\\000\\002\\001\\001\\000\\010\\002\\027\\003\\026\\042\\015\\001\" +\r\n    \"\\001\\000\\002\\001\\001\\000\\002\\001\\001\\000\\002\\001\\001\" +\r\n    \"\\000\\002\\001\\001\\000\\002\\001\\001\\000\\002\\001\\001\\000\" +\r\n    \"\\002\\001\\001\\000\\002\\001\\001\\000\\002\\001\\001\\000\\020\" +\r\n    \"\\010\\044\\025\\042\\032\\051\\033\\037\\034\\035\\035\\046\\041\" +\r\n    \"\\043\\001\\001\\000\\004\\035\\122\\001\\001\\000\\004\\040\\101\" +\r\n    \"\\001\\001\\000\\002\\001\\001\\000\\002\\001\\001\\000\\002\\001\" +\r\n    \"\\001\\000\\002\\001\\001\\000\\002\\001\\001\\000\\002\\001\\001\" +\r\n    \"\\000\\002\\001\\001\\000\\002\\001\\001\\000\\002\\001\\001\\000\" +\r\n    \"\\016\\025\\042\\032\\106\\033\\037\\034\\107\\035\\046\\041\\043\" +\r\n    \"\\001\\001\\000\\016\\025\\042\\032\\100\\033\\037\\034\\077\\035\" +\r\n    \"\\046\\041\\043\\001\\001\\000\\006\\036\\070\\037\\057\\001\\001\" +\r\n    \"\\000\\002\\001\\001\\000\\002\\001\\001\\000\\002\\001\\001\\000\" +\r\n    \"\\002\\001\\001\\000\\002\\001\\001\\000\\012\\025\\042\\032\\076\" +\r\n    \"\\035\\046\\041\\043\\001\\001\\000\\002\\001\\001\\000\\002\\001\" +\r\n    \"\\001\\000\\002\\001\\001\\000\\002\\001\\001\\000\\002\\001\\001\" +\r\n    \"\\000\\002\\001\\001\\000\\002\\001\\001\\000\\002\\001\\001\\000\" +\r\n    \"\\012\\025\\042\\032\\073\\035\\046\\041\\043\\001\\001\\000\\002\" +\r\n    \"\\001\\001\\000\\012\\025\\042\\032\\074\\035\\046\\041\\043\\001\" +\r\n    \"\\001\\000\\004\\036\\070\\001\\001\\000\\004\\036\\070\\001\\001\" +\r\n    \"\\000\\002\\001\\001\\000\\004\\036\\070\\001\\001\\000\\004\\040\" +\r\n    \"\\101\\001\\001\\000\\006\\036\\070\\037\\057\\001\\001\\000\\016\" +\r\n    \"\\025\\042\\032\\106\\033\\037\\034\\105\\035\\046\\041\\043\\001\" +\r\n    \"\\001\\000\\002\\001\\001\\000\\002\\001\\001\\000\\002\\001\\001\" +\r\n    \"\\000\\004\\040\\101\\001\\001\\000\\006\\036\\070\\037\\057\\001\" +\r\n    \"\\001\\000\\004\\040\\101\\001\\001\\000\\002\\001\\001\\000\\002\" +\r\n    \"\\001\\001\\000\\022\\010\\115\\025\\042\\032\\051\\033\\037\\034\" +\r\n    \"\\035\\035\\046\\041\\043\\053\\113\\001\\001\\000\\002\\001\\001\" +\r\n    \"\\000\\002\\001\\001\\000\\002\\001\\001\\000\\020\\010\\120\\025\" +\r\n    \"\\042\\032\\051\\033\\037\\034\\035\\035\\046\\041\\043\\001\\001\" +\r\n    \"\\000\\002\\001\\001\\000\\002\\001\\001\\000\\002\\001\\001\\000\" +\r\n    \"\\002\\001\\001\\000\\002\\001\\001\\000\\002\\001\\001\\000\\014\" +\r\n    \"\\002\\126\\006\\130\\007\\132\\047\\013\\050\\131\\001\\001\\000\" +\r\n    \"\\002\\001\\001\\000\\002\\001\\001\\000\\002\\001\\001\\000\\004\" +\r\n    \"\\047\\123\\001\\001\\000\\002\\001\\001\\000\\006\\002\\126\\006\" +\r\n    \"\\314\\001\\001\\000\\002\\001\\001\\000\\050\\002\\143\\011\\137\" +\r\n    \"\\012\\165\\013\\153\\014\\157\\015\\163\\016\\150\\017\\155\\020\" +\r\n    \"\\141\\021\\162\\022\\170\\023\\140\\024\\147\\025\\144\\031\\156\" +\r\n    \"\\043\\020\\044\\167\\045\\160\\046\\154\\001\\001\\000\\002\\001\" +\r\n    \"\\001\\000\\002\\001\\001\\000\\002\\001\\001\\000\\002\\001\\001\" +\r\n    \"\\000\\002\\001\\001\\000\\002\\001\\001\\000\\002\\001\\001\\000\" +\r\n    \"\\002\\001\\001\\000\\002\\001\\001\\000\\002\\001\\001\\000\\002\" +\r\n    \"\\001\\001\\000\\002\\001\\001\\000\\002\\001\\001\\000\\002\\001\" +\r\n    \"\\001\\000\\002\\001\\001\\000\\002\\001\\001\\000\\002\\001\\001\" +\r\n    \"\\000\\002\\001\\001\\000\\002\\001\\001\\000\\002\\001\\001\\000\" +\r\n    \"\\002\\001\\001\\000\\002\\001\\001\\000\\002\\001\\001\\000\\046\" +\r\n    \"\\002\\143\\011\\205\\013\\153\\014\\157\\015\\163\\016\\150\\017\" +\r\n    \"\\155\\020\\141\\021\\162\\022\\170\\023\\140\\024\\147\\025\\144\" +\r\n    \"\\031\\156\\043\\020\\044\\167\\045\\160\\046\\154\\001\\001\\000\" +\r\n    \"\\002\\001\\001\\000\\002\\001\\001\\000\\002\\001\\001\\000\\002\" +\r\n    \"\\001\\001\\000\\002\\001\\001\\000\\002\\001\\001\\000\\002\\001\" +\r\n    \"\\001\\000\\002\\001\\001\\000\\002\\001\\001\\000\\012\\025\\042\" +\r\n    \"\\032\\200\\035\\046\\041\\043\\001\\001\\000\\004\\036\\070\\001\" +\r\n    \"\\001\\000\\012\\025\\042\\032\\207\\035\\046\\041\\043\\001\\001\" +\r\n    \"\\000\\002\\001\\001\\000\\050\\002\\143\\011\\137\\012\\204\\013\" +\r\n    \"\\153\\014\\157\\015\\163\\016\\150\\017\\155\\020\\141\\021\\162\" +\r\n    \"\\022\\170\\023\\140\\024\\147\\025\\144\\031\\156\\043\\020\\044\" +\r\n    \"\\167\\045\\160\\046\\154\\001\\001\\000\\046\\002\\143\\011\\205\" +\r\n    \"\\013\\153\\014\\157\\015\\163\\016\\150\\017\\155\\020\\141\\021\" +\r\n    \"\\162\\022\\170\\023\\140\\024\\147\\025\\144\\031\\156\\043\\020\" +\r\n    \"\\044\\167\\045\\160\\046\\154\\001\\001\\000\\002\\001\\001\\000\" +\r\n    \"\\002\\001\\001\\000\\004\\036\\070\\001\\001\\000\\012\\025\\042\" +\r\n    \"\\032\\215\\035\\046\\041\\043\\001\\001\\000\\002\\001\\001\\000\" +\r\n    \"\\050\\002\\143\\011\\137\\012\\213\\013\\153\\014\\157\\015\\163\" +\r\n    \"\\016\\150\\017\\155\\020\\141\\021\\162\\022\\170\\023\\140\\024\" +\r\n    \"\\147\\025\\144\\031\\156\\043\\020\\044\\167\\045\\160\\046\\154\" +\r\n    \"\\001\\001\\000\\046\\002\\143\\011\\205\\013\\153\\014\\157\\015\" +\r\n    \"\\163\\016\\150\\017\\155\\020\\141\\021\\162\\022\\170\\023\\140\" +\r\n    \"\\024\\147\\025\\144\\031\\156\\043\\020\\044\\167\\045\\160\\046\" +\r\n    \"\\154\\001\\001\\000\\002\\001\\001\\000\\004\\036\\070\\001\\001\" +\r\n    \"\\000\\002\\001\\001\\000\\050\\002\\143\\011\\137\\012\\220\\013\" +\r\n    \"\\153\\014\\157\\015\\163\\016\\150\\017\\155\\020\\141\\021\\162\" +\r\n    \"\\022\\170\\023\\140\\024\\147\\025\\144\\031\\156\\043\\020\\044\" +\r\n    \"\\167\\045\\160\\046\\154\\001\\001\\000\\046\\002\\143\\011\\205\" +\r\n    \"\\013\\153\\014\\157\\015\\163\\016\\150\\017\\155\\020\\141\\021\" +\r\n    \"\\162\\022\\170\\023\\140\\024\\147\\025\\144\\031\\156\\043\\020\" +\r\n    \"\\044\\167\\045\\160\\046\\154\\001\\001\\000\\002\\001\\001\\000\" +\r\n    \"\\002\\001\\001\\000\\020\\010\\224\\025\\042\\032\\051\\033\\037\" +\r\n    \"\\034\\035\\035\\046\\041\\043\\001\\001\\000\\002\\001\\001\\000\" +\r\n    \"\\002\\001\\001\\000\\002\\001\\001\\000\\050\\002\\143\\011\\137\" +\r\n    \"\\012\\230\\013\\153\\014\\157\\015\\163\\016\\150\\017\\155\\020\" +\r\n    \"\\141\\021\\162\\022\\170\\023\\140\\024\\147\\025\\144\\031\\156\" +\r\n    \"\\043\\020\\044\\167\\045\\160\\046\\154\\001\\001\\000\\046\\002\" +\r\n    \"\\143\\011\\205\\013\\153\\014\\157\\015\\163\\016\\150\\017\\155\" +\r\n    \"\\020\\141\\021\\162\\022\\170\\023\\140\\024\\147\\025\\144\\031\" +\r\n    \"\\156\\043\\020\\044\\167\\045\\160\\046\\154\\001\\001\\000\\002\" +\r\n    \"\\001\\001\\000\\002\\001\\001\\000\\002\\001\\001\\000\\050\\002\" +\r\n    \"\\143\\011\\137\\012\\235\\013\\153\\014\\157\\015\\163\\016\\150\" +\r\n    \"\\017\\155\\020\\141\\021\\162\\022\\170\\023\\140\\024\\147\\025\" +\r\n    \"\\144\\031\\156\\043\\020\\044\\167\\045\\160\\046\\154\\001\\001\" +\r\n    \"\\000\\046\\002\\143\\011\\205\\013\\153\\014\\157\\015\\163\\016\" +\r\n    \"\\150\\017\\155\\020\\141\\021\\162\\022\\170\\023\\140\\024\\147\" +\r\n    \"\\025\\144\\031\\156\\043\\020\\044\\167\\045\\160\\046\\154\\001\" +\r\n    \"\\001\\000\\002\\001\\001\\000\\020\\010\\240\\025\\042\\032\\051\" +\r\n    \"\\033\\037\\034\\035\\035\\046\\041\\043\\001\\001\\000\\002\\001\" +\r\n    \"\\001\\000\\002\\001\\001\\000\\050\\002\\143\\011\\137\\012\\243\" +\r\n    \"\\013\\153\\014\\157\\015\\163\\016\\150\\017\\155\\020\\141\\021\" +\r\n    \"\\162\\022\\170\\023\\140\\024\\147\\025\\144\\031\\156\\043\\020\" +\r\n    \"\\044\\167\\045\\160\\046\\154\\001\\001\\000\\046\\002\\143\\011\" +\r\n    \"\\205\\013\\153\\014\\157\\015\\163\\016\\150\\017\\155\\020\\141\" +\r\n    \"\\021\\162\\022\\170\\023\\140\\024\\147\\025\\144\\031\\156\\043\" +\r\n    \"\\020\\044\\167\\045\\160\\046\\154\\001\\001\\000\\002\\001\\001\" +\r\n    \"\\000\\020\\010\\246\\025\\042\\032\\051\\033\\037\\034\\035\\035\" +\r\n    \"\\046\\041\\043\\001\\001\\000\\002\\001\\001\\000\\002\\001\\001\" +\r\n    \"\\000\\010\\026\\252\\027\\253\\030\\254\\001\\001\\000\\002\\001\" +\r\n    \"\\001\\000\\002\\001\\001\\000\\006\\026\\264\\030\\265\\001\\001\" +\r\n    \"\\000\\002\\001\\001\\000\\002\\001\\001\\000\\004\\035\\257\\001\" +\r\n    \"\\001\\000\\002\\001\\001\\000\\050\\002\\143\\011\\137\\012\\261\" +\r\n    \"\\013\\153\\014\\157\\015\\163\\016\\150\\017\\155\\020\\141\\021\" +\r\n    \"\\162\\022\\170\\023\\140\\024\\147\\025\\144\\031\\156\\043\\020\" +\r\n    \"\\044\\167\\045\\160\\046\\154\\001\\001\\000\\046\\002\\143\\011\" +\r\n    \"\\205\\013\\153\\014\\157\\015\\163\\016\\150\\017\\155\\020\\141\" +\r\n    \"\\021\\162\\022\\170\\023\\140\\024\\147\\025\\144\\031\\156\\043\" +\r\n    \"\\020\\044\\167\\045\\160\\046\\154\\001\\001\\000\\002\\001\\001\" +\r\n    \"\\000\\002\\001\\001\\000\\002\\001\\001\\000\\002\\001\\001\\000\" +\r\n    \"\\002\\001\\001\\000\\050\\002\\143\\011\\137\\012\\270\\013\\153\" +\r\n    \"\\014\\157\\015\\163\\016\\150\\017\\155\\020\\141\\021\\162\\022\" +\r\n    \"\\170\\023\\140\\024\\147\\025\\144\\031\\156\\043\\020\\044\\167\" +\r\n    \"\\045\\160\\046\\154\\001\\001\\000\\046\\002\\143\\011\\205\\013\" +\r\n    \"\\153\\014\\157\\015\\163\\016\\150\\017\\155\\020\\141\\021\\162\" +\r\n    \"\\022\\170\\023\\140\\024\\147\\025\\144\\031\\156\\043\\020\\044\" +\r\n    \"\\167\\045\\160\\046\\154\\001\\001\\000\\020\\010\\272\\025\\042\" +\r\n    \"\\032\\051\\033\\037\\034\\035\\035\\046\\041\\043\\001\\001\\000\" +\r\n    \"\\002\\001\\001\\000\\002\\001\\001\\000\\002\\001\\001\\000\\020\" +\r\n    \"\\010\\276\\025\\042\\032\\051\\033\\037\\034\\035\\035\\046\\041\" +\r\n    \"\\043\\001\\001\\000\\002\\001\\001\\000\\002\\001\\001\\000\\002\" +\r\n    \"\\001\\001\\000\\002\\001\\001\\000\\002\\001\\001\\000\\016\\025\" +\r\n    \"\\042\\032\\106\\033\\037\\034\\304\\035\\046\\041\\043\\001\\001\" +\r\n    \"\\000\\004\\040\\101\\001\\001\\000\\002\\001\\001\\000\\050\\002\" +\r\n    \"\\143\\011\\137\\012\\307\\013\\153\\014\\157\\015\\163\\016\\150\" +\r\n    \"\\017\\155\\020\\141\\021\\162\\022\\170\\023\\140\\024\\147\\025\" +\r\n    \"\\144\\031\\156\\043\\020\\044\\167\\045\\160\\046\\154\\001\\001\" +\r\n    \"\\000\\046\\002\\143\\011\\205\\013\\153\\014\\157\\015\\163\\016\" +\r\n    \"\\150\\017\\155\\020\\141\\021\\162\\022\\170\\023\\140\\024\\147\" +\r\n    \"\\025\\144\\031\\156\\043\\020\\044\\167\\045\\160\\046\\154\\001\" +\r\n    \"\\001\\000\\002\\001\\001\\000\\002\\001\\001\\000\\002\\001\\001\" +\r\n    \"\\000\\002\\001\\001\\000\\002\\001\\001\\000\\050\\002\\143\\011\" +\r\n    \"\\137\\012\\316\\013\\153\\014\\157\\015\\163\\016\\150\\017\\155\" +\r\n    \"\\020\\141\\021\\162\\022\\170\\023\\140\\024\\147\\025\\144\\031\" +\r\n    \"\\156\\043\\020\\044\\167\\045\\160\\046\\154\\001\\001\\000\\046\" +\r\n    \"\\002\\143\\011\\205\\013\\153\\014\\157\\015\\163\\016\\150\\017\" +\r\n    \"\\155\\020\\141\\021\\162\\022\\170\\023\\140\\024\\147\\025\\144\" +\r\n    \"\\031\\156\\043\\020\\044\\167\\045\\160\\046\\154\\001\\001\\000\" +\r\n    \"\\002\\001\\001\\000\\002\\001\\001\\000\\002\\001\\001\\000\\002\" +\r\n    \"\\001\\001\\000\\002\\001\\001\\000\\002\\001\\001\\000\\010\\002\" +\r\n    \"\\027\\003\\026\\042\\015\\001\\001\" });\r\n\r\n  /** Access to <code>reduce_goto</code> table. */\r\n  public short[][] reduce_table() {return _reduce_table;}\r\n\r\n  /** Instance of action encapsulation class. */\r\n  protected CUP$parser$actions action_obj;\r\n\r\n  /** Action encapsulation object initializer. */\r\n  protected void init_actions()\r\n    {\r\n      action_obj = new CUP$parser$actions(this);\r\n    }\r\n\r\n  /** Invoke a user supplied parse action. */\r\n  public java_cup.runtime.Symbol do_action(\r\n    int                        act_num,\r\n    java_cup.runtime.lr_parser parser,\r\n    java.util.Stack            stack,\r\n    int                        top)\r\n    throws java.lang.Exception\r\n  {\r\n    /* call code in generated class */\r\n    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);\r\n  }\r\n\r\n  /** Indicates start state. */\r\n  public int start_state() {return 0;}\r\n  /** Indicates start production. */\r\n  public int start_production() {return 0;}\r\n\r\n  /** <code>EOF</code> Symbol index. */\r\n  public int EOF_sym() {return 0;}\r\n\r\n  /** <code>error</code> Symbol index. */\r\n  public int error_sym() {return 1;}\r\n\r\n\r\n  /** User initialization code. */\r\n  public void user_init() throws java.lang.Exception\r\n    {\r\n \r\n    }\r\n\r\n  /** Scan to get the next Symbol. */\r\n  public java_cup.runtime.Symbol scan()\r\n    throws java.lang.Exception\r\n    {\r\n return lexer.next_token(); \r\n    }\r\n\r\n\r\n\r\n    //Connect to the lexer\r\n    Lexer lexer;\r\n    public Boolean errorDisplayed = false;\r\n    Map<String, ArrayList<String[]>> tablasDeSimbolos = new HashMap<>();\r\n    String currentHash = \"\";\r\n\r\n    @SuppressWarnings(\"deprecation\")\r\n    public parser(Lexer lexer) {\r\n        this.lexer = lexer;\r\n        this.symbolFactory = new DefaultSymbolFactory();\r\n\r\n        //Inicializar tabla de simbolos Global\r\n        currentHash = \"Global\";\r\n        ArrayList<String[]> tabla = new ArrayList<>();\r\n        String[] titulo = new String[1];\r\n        titulo[0] = \"Variables Globales\";\r\n        tabla.add(titulo);\r\n        tablasDeSimbolos.put(currentHash, tabla);\r\n    }\r\n\r\n//Metodo para imprimir la tabla de simbolos\r\npublic void imprimirTablaSimbolos() {\r\n    System.out.println(\"\\n##### TABLAS DE SIMBOLOS #####\");\r\n    for (Map.Entry<String, ArrayList<String[]>> entry : tablasDeSimbolos.entrySet()) {\r\n        System.out.println(\"\\n##### \" + entry.getKey() + \" #####\");\r\n        for (String[] symbol : entry.getValue()) {\r\n            System.out.println(\"Tipo: \" + symbol[0] + \" ID: \" + symbol[1] + \" Tipo de dato: \" + symbol[2]); \r\n        }\r\n    }\r\n}\r\n\r\n\r\n//Metodo para obtener un symbolo\r\npublic String[] getSymbol(List<String[]> tabla, String id) {\r\n    for (int i = 1; i < tabla.size(); i++) {\r\n        String[] symbol = tabla.get(i);\r\n        if (symbol[1].equals(id)) {\r\n            return symbol; // Devuelve el símbolo que coincide con el ID.\r\n        }\r\n    }\r\n    return null; // Si no se encuentra el símbolo, devuelve null o maneja el caso según tus necesidades.\r\n}\r\n\r\n//Metodo para obtener los parametros de una funcion\r\n\r\n     \r\n\r\n\r\n\r\n/** Cup generated class to encapsulate user supplied action code.*/\r\n@SuppressWarnings({\"rawtypes\", \"unchecked\", \"unused\"})\r\nclass CUP$parser$actions {\r\n  private final parser parser;\r\n\r\n  /** Constructor */\r\n  CUP$parser$actions(parser parser) {\r\n    this.parser = parser;\r\n  }\r\n\r\n  /** Method 0 with the actual generated action code for actions 0 to 300. */\r\n  public final java_cup.runtime.Symbol CUP$parser$do_action_part00000000(\r\n    int                        CUP$parser$act_num,\r\n    java_cup.runtime.lr_parser CUP$parser$parser,\r\n    java.util.Stack            CUP$parser$stack,\r\n    int                        CUP$parser$top)\r\n    throws java.lang.Exception\r\n    {\r\n      /* Symbol object for return from actions */\r\n      java_cup.runtime.Symbol CUP$parser$result;\r\n\r\n      /* select the action based on the action number */\r\n      switch (CUP$parser$act_num)\r\n        {\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 0: // $START ::= program EOF \r\n            {\r\n              Object RESULT =null;\r\n\t\tint start_valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;\r\n\t\tint start_valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;\r\n\t\tObject start_val = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;\r\n\t\tRESULT = start_val;\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"$START\",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          /* ACCEPT */\r\n          CUP$parser$parser.done_parsing();\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 1: // type ::= INTEGERTYPE \r\n            {\r\n              Object RESULT =null;\r\n\t\tRESULT = \"int\"; \r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"type\",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 2: // type ::= FLOATTYPE \r\n            {\r\n              Object RESULT =null;\r\n\t\tRESULT = \"float\"; \r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"type\",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 3: // type ::= BOOLEANTYPE \r\n            {\r\n              Object RESULT =null;\r\n\t\tRESULT = \"bool\"; \r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"type\",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 4: // type ::= CHARTYPE \r\n            {\r\n              Object RESULT =null;\r\n\t\tRESULT = \"char\"; \r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"type\",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 5: // type ::= STRINGTYPE \r\n            {\r\n              Object RESULT =null;\r\n\t\tRESULT = \"string\"; \r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"type\",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 6: // literal ::= INTEGER \r\n            {\r\n              Object RESULT =null;\r\n\t\tint nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;\r\n\t\tint nright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;\r\n\t\tObject n = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;\r\n\t\t RESULT = n+\":int\"; \r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"literal\",27, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 7: // literal ::= FLOAT \r\n            {\r\n              Object RESULT =null;\r\n\t\tint nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;\r\n\t\tint nright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;\r\n\t\tObject n = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;\r\n\t\t RESULT = n+\":float\"; \r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"literal\",27, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 8: // literal ::= CHAR \r\n            {\r\n              Object RESULT =null;\r\n\t\tint nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;\r\n\t\tint nright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;\r\n\t\tObject n = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;\r\n\t\t RESULT = n+\":char\"; \r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"literal\",27, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 9: // literal ::= STRING \r\n            {\r\n              Object RESULT =null;\r\n\t\tint nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;\r\n\t\tint nright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;\r\n\t\tObject n = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;\r\n\t\t RESULT = n+\":string\"; \r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"literal\",27, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 10: // literal ::= BOOLEAN \r\n            {\r\n              Object RESULT =null;\r\n\t\tint nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;\r\n\t\tint nright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;\r\n\t\tObject n = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;\r\n\t\t RESULT = n+\":bool\"; \r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"literal\",27, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 11: // aritmeticOp ::= PLUS \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"aritmeticOp\",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 12: // aritmeticOp ::= MINUS \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"aritmeticOp\",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 13: // aritmeticOp ::= TIMES \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"aritmeticOp\",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 14: // aritmeticOp ::= DIVIDE \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"aritmeticOp\",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 15: // aritmeticOp ::= MODULE \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"aritmeticOp\",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 16: // aritmeticOp ::= POWER \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"aritmeticOp\",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 17: // operand ::= literal \r\n            {\r\n              Object RESULT =null;\r\n\t\tint nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;\r\n\t\tint nright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;\r\n\t\tObject n = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;\r\n\t\t\r\n                            RESULT = n;    \r\n                        \r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"operand\",31, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 18: // operand ::= IDENTIFIER \r\n            {\r\n              Object RESULT =null;\r\n\t\tint idleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;\r\n\t\tint idright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;\r\n\t\tObject id = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;\r\n\t\t\r\n                            ArrayList<String[]> tabla = tablasDeSimbolos.get(currentHash);\r\n                            String[] symbol = getSymbol(tabla, id.toString());\r\n                            String tipoId = symbol[2];\r\n                            System.out.println(\"tipo encontado para id: \"+id+\" es: \"+tipoId);            \r\n                            RESULT = id+\":\"+tipoId;\r\n                        \r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"operand\",31, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 19: // operand ::= callFunction \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"operand\",31, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 20: // relationalOp ::= EQUALS \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"relationalOp\",29, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 21: // relationalOp ::= DIFFERENT \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"relationalOp\",29, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 22: // relationalOp ::= GREATER \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"relationalOp\",29, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 23: // relationalOp ::= LESS \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"relationalOp\",29, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 24: // relationalOp ::= GREATEREQUAL \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"relationalOp\",29, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 25: // relationalOp ::= LESSEQUAL \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"relationalOp\",29, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 26: // logicalOp ::= AND \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"logicalOp\",30, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 27: // logicalOp ::= OR \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"logicalOp\",30, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 28: // aritmeticExpression ::= operand \r\n            {\r\n              Object RESULT =null;\r\n\t\tint nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;\r\n\t\tint nright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;\r\n\t\tObject n = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;\r\n\t\t\r\n\r\n    RESULT = n; \r\n\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"aritmeticExpression\",24, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 29: // aritmeticExpression ::= MINUS literal \r\n            {\r\n              Object RESULT =null;\r\n\t\tint nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;\r\n\t\tint nright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;\r\n\t\tObject n = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;\r\n\t\t \r\n\r\n    if (!String.valueOf(n).endsWith(\"int\") && !String.valueOf(n).endsWith(\"float\")) {\r\n        System.out.println(\"Error semantico en la linea x: Operacion aritmetica no valida\");\r\n    }\r\n    RESULT = \"-\"+n; \r\n\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"aritmeticExpression\",24, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 30: // aritmeticExpression ::= IDENTIFIER INCREMENT \r\n            {\r\n              Object RESULT =null;\r\n\t\tint idleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;\r\n\t\tint idright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;\r\n\t\tObject id = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;\r\n\t\t\r\n    ArrayList<String[]> tabla = tablasDeSimbolos.get(currentHash);\r\n    String[] symbol = getSymbol(tabla, id.toString());\r\n    String tipoId = symbol[2];\r\n\r\n    System.out.println(\"tipo encontado para id: \"+id+\" es: \"+tipoId);\r\n    if (!tipoId.equals(\"int\"))\r\n    System.out.println(\"Error semantico en la linea x: No se permite el uso de incremento en variables de tipo: \"+tipoId);  \r\n    RESULT = id+\":\"+tipoId;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"aritmeticExpression\",24, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 31: // aritmeticExpression ::= IDENTIFIER DECREMENT \r\n            {\r\n              Object RESULT =null;\r\n\t\tint idleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;\r\n\t\tint idright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;\r\n\t\tObject id = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;\r\n\t\t\r\n\r\n    ArrayList<String[]> tabla = tablasDeSimbolos.get(currentHash);\r\n    String[] symbol = getSymbol(tabla, id.toString());\r\n    String tipoId = symbol[2];\r\n\r\n    System.out.println(\"tipo encontado para id: \"+id+\" es: \"+tipoId);\r\n    if (!tipoId.equals(\"int\")){\r\n        System.out.println(\"Error semantico en la linea x: No se permite el uso de decremento en variables de tipo: \"+tipoId);  \r\n    }\r\n    RESULT = id+\":\"+tipoId;\r\n\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"aritmeticExpression\",24, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 32: // aritmeticExpression ::= aritmeticExpression aritmeticOp aritmeticExpression \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"aritmeticExpression\",24, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 33: // aritmeticExpression ::= LPAREN aritmeticExpression RPAREN \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"aritmeticExpression\",24, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 34: // relationalExpression ::= aritmeticExpression relationalOp aritmeticExpression \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"relationalExpression\",25, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 35: // logicalExpression ::= relationalExpression \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"logicalExpression\",26, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 36: // logicalExpression ::= logicalExpression logicalOp logicalExpression \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"logicalExpression\",26, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 37: // logicalExpression ::= LPAREN logicalExpression RPAREN \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"logicalExpression\",26, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 38: // logicalExpression ::= NOT logicalExpression \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"logicalExpression\",26, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 39: // expression ::= aritmeticExpression \r\n            {\r\n              Object RESULT =null;\r\n\t\tint eleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;\r\n\t\tint eright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;\r\n\t\tObject e = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;\r\n\t\t\r\n    RESULT = e; //Enviar solo el tipo de dato\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"expression\",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 40: // expression ::= logicalExpression \r\n            {\r\n              Object RESULT =null;\r\n\t\tint eleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;\r\n\t\tint eright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;\r\n\t\tObject e = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;\r\n\t\t\r\n    RESULT = e; //Enviar solo el tipo de dato\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"expression\",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 41: // if_struct ::= IF LPAREN expression RPAREN BLOCKSTART statements BLOCKEND \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"if_struct\",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 42: // if_else_struct ::= if_struct ELSE BLOCKSTART statements BLOCKEND \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"if_else_struct\",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 43: // while_struct ::= WHILE LPAREN logicalExpression RPAREN BLOCKSTART statements BLOCKEND \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"while_struct\",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 44: // while_else_struct ::= while_struct ELSE BLOCKSTART statements BLOCKEND \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"while_else_struct\",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 45: // for_range_struct ::= FOR SEPARATOR IDENTIFIER SEPARATOR IN SEPARATOR RANGE LPAREN aritmeticExpression COMMA aritmeticExpression COMMA aritmeticExpression RPAREN BLOCKSTART statements BLOCKEND \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"for_range_struct\",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-16)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 46: // for_range_struct ::= FOR SEPARATOR IDENTIFIER SEPARATOR IN SEPARATOR RANGE LPAREN aritmeticExpression COMMA aritmeticExpression RPAREN BLOCKSTART statements BLOCKEND \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"for_range_struct\",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-14)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 47: // for_range_struct ::= FOR SEPARATOR IDENTIFIER SEPARATOR IN SEPARATOR RANGE LPAREN aritmeticExpression RPAREN BLOCKSTART statements BLOCKEND \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"for_range_struct\",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 48: // default_statement ::= DEFAULT DOTS statements \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"default_statement\",22, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 49: // case_statement ::= CASE SEPARATOR literal DOTS statements \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"case_statement\",20, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 50: // case_statements ::= case_statement \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"case_statements\",21, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 51: // case_statements ::= case_statements case_statement \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"case_statements\",21, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 52: // switch_struct ::= SWITCH LPAREN expression RPAREN BLOCKSTART case_statements BLOCKEND \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"switch_struct\",23, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 53: // switch_struct ::= SWITCH LPAREN expression RPAREN BLOCKSTART case_statements default_statement BLOCKEND \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"switch_struct\",23, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 54: // switch_struct ::= SWITCH LPAREN expression RPAREN BLOCKSTART default_statement BLOCKEND \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"switch_struct\",23, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 55: // varIdentifier ::= type SEPARATOR IDENTIFIER \r\n            {\r\n              Object RESULT =null;\r\n\t\tint tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;\r\n\t\tint tright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;\r\n\t\tObject t = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;\r\n\t\tint idVarleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;\r\n\t\tint idVarright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;\r\n\t\tObject idVar = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;\r\n\t\t\r\n    //Agregar id a la tabla de simbolos\r\n    String[] symbol = new String[3];\r\n    symbol[0] = \"Variable\";\r\n    symbol[1] = idVar.toString();\r\n    symbol[2] = t.toString();\r\n\r\n    tablasDeSimbolos.get(currentHash).add(symbol);\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"varIdentifier\",33, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 56: // decl ::= varIdentifier ENDLINE \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"decl\",14, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 57: // assignment ::= IDENTIFIER ASSIGN expression ENDLINE \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"assignment\",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 58: // decl_and_assignment ::= varIdentifier ASSIGN expression ENDLINE \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"decl_and_assignment\",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 59: // readData ::= READ READSYMBOL IDENTIFIER ENDLINE \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"readData\",17, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 60: // printData ::= PRINT PRINTSYMBOL expression ENDLINE \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"printData\",18, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 61: // sendParameters ::= expression \r\n            {\r\n              Object RESULT =null;\r\n\t\tint eleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;\r\n\t\tint eright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;\r\n\t\tObject e = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;\r\n\t\t\r\n   \r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"sendParameters\",41, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 62: // sendParameters ::= sendParameters COMMA expression \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"sendParameters\",41, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 63: // callFunction ::= IDENTIFIER LPAREN sendParameters RPAREN \r\n            {\r\n              Object RESULT =null;\r\n\t\tint idleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;\r\n\t\tint idright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;\r\n\t\tObject id = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;\r\n\t\tint actualParamsleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;\r\n\t\tint actualParamsright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;\r\n\t\tObject actualParams = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;\r\n\t\t \r\n/*\r\n    if (tablasDeSimbolos.containsKey(id.toString())) { //Verificar si la funcion existe\r\n        ArrayList<String[]> tabla = tablasDeSimbolos.get(id.toString()); //Obtener la tabla de simbolos de la funcion\r\n        String[] titulo = tabla.get(0); //Obtener el titulo de la tabla de simbolos de la funcion\r\n\r\n        if (titulo[0].equals(\"main\")) { //Verificar si la funcion es main\r\n            System.out.println(\"Error semantico en la linea x: La función main no recibe parametros\");\r\n        }\r\n\r\n        // Verificar si los parametros enviados coinciden con los parametros de la funcion\r\n        for ()\r\n\r\n      \r\n    }else{\r\n        System.out.println(\"Error semantico en la linea x: La funcion \"+id.toString()+\" no existe\");\r\n    }\r\n   */       \r\n\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"callFunction\",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 64: // callFunction ::= IDENTIFIER LPAREN RPAREN \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"callFunction\",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 65: // callFunction_statement ::= callFunction ENDLINE \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"callFunction_statement\",36, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 66: // return_statement ::= RETURN SEPARATOR expression ENDLINE \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"return_statement\",34, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 67: // return_statement ::= RETURN ENDLINE \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"return_statement\",34, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 68: // break_statement ::= BREAK ENDLINE \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"break_statement\",35, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 69: // statement ::= decl \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"statement\",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 70: // statement ::= assignment \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"statement\",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 71: // statement ::= decl_and_assignment \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"statement\",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 72: // statement ::= readData \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"statement\",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 73: // statement ::= printData \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"statement\",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 74: // statement ::= return_statement \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"statement\",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 75: // statement ::= break_statement \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"statement\",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 76: // statement ::= callFunction_statement \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"statement\",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 77: // statement ::= if_struct \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"statement\",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 78: // statement ::= if_else_struct \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"statement\",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 79: // statement ::= while_struct \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"statement\",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 80: // statement ::= while_else_struct \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"statement\",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 81: // statement ::= for_range_struct \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"statement\",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 82: // statement ::= switch_struct \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"statement\",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 83: // statements ::= statement \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"statements\",8, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 84: // statements ::= statements statement \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"statements\",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 85: // parameter ::= type SEPARATOR IDENTIFIER \r\n            {\r\n              Object RESULT =null;\r\n\t\tint tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;\r\n\t\tint tright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;\r\n\t\tObject t = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;\r\n\t\tint idParamleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;\r\n\t\tint idParamright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;\r\n\t\tObject idParam = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;\r\n\t\t\r\n\r\n    ArrayList<String[]> tabla = tablasDeSimbolos.get(currentHash);\r\n\r\n     // Verificar si el parámetro ya existe en la tabla\r\n    boolean exists = false;\r\n    /*\r\n    for (String[] symbol : tabla) {\r\n        if (symbol[0].equals(\"Parametro\") && symbol[1].equals(idParamString)) {\r\n            System.out.println(\"Error semantico en la linea x: El parametro \"+idParamString+\" ya existe\");\r\n            exists = true;\r\n            break;\r\n        }\r\n    }*/\r\n\r\n    if (!exists) {\r\n        // Agregar el parámetro solo si no existe en la tabla\r\n        String[] symbol = new String[3];\r\n        symbol[0] = \"Parametro\";\r\n        symbol[1] = idParam.toString();\r\n        symbol[2] = t.toString();\r\n        tabla.add(symbol);\r\n\r\n        tablasDeSimbolos.put(currentHash, tabla);\r\n    }\r\n\r\n    //Agregar id a la tabla de simbolos\r\n    String[] symbol = new String[3];\r\n    symbol[0] = \"Parametro\";\r\n    symbol[1] = idParam.toString();\r\n    symbol[2] = t.toString();\r\n\r\n    tablasDeSimbolos.get(currentHash).add(symbol);\r\n   \r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"parameter\",4, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 86: // parameters ::= parameter \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"parameters\",5, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 87: // parameters ::= parameters COMMA parameter \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"parameters\",5, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 88: // parameters ::= errors \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"parameters\",5, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 89: // functionIdentifier ::= type SEPARATOR IDENTIFIER \r\n            {\r\n              Object RESULT =null;\r\n\t\tint tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;\r\n\t\tint tright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;\r\n\t\tObject t = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;\r\n\t\tint idFuncleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;\r\n\t\tint idFuncright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;\r\n\t\tObject idFunc = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;\r\n\t\t\r\n\r\n// Crear tabla de simbolos para la funcion\r\n\r\n    String tipoTabla = \"main\";\r\n    if (idFunc.toString().equals(\"main\")){\r\n    tipoTabla = \"Tipo: main: \"+t.toString();\r\n    }\r\n    else{\r\n    tipoTabla = \"Tipo: funcion: \"+t.toString();\r\n    }\r\n\r\n    ArrayList<String[]> tabla = new ArrayList<>();\r\n    String[] titulo = new String[1];\r\n    titulo[0] = tipoTabla;\r\n    tabla.add(titulo);\r\n    tablasDeSimbolos.put(currentHash, tabla);\r\n   \r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"functionIdentifier\",32, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 90: // function ::= functionIdentifier LPAREN parameters RPAREN BLOCKSTART statements BLOCKEND \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"function\",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 91: // function ::= functionIdentifier LPAREN RPAREN BLOCKSTART statements BLOCKEND \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"function\",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 92: // functions ::= function \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"functions\",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 93: // functions ::= functions function \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"functions\",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 94: // functions ::= errors \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"functions\",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 95: // globalVariable ::= decl \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"globalVariable\",39, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 96: // globalVariable ::= decl_and_assignment \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"globalVariable\",39, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 97: // globalVariables ::= globalVariable \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"globalVariables\",40, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 98: // globalVariables ::= globalVariables globalVariable \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"globalVariables\",40, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 99: // program ::= globalVariables \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"program\",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 100: // program ::= functions \r\n            {\r\n              Object RESULT =null;\r\n\t\t\r\n   // imprimirTablaSimbolos();\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"program\",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 101: // program ::= globalVariables functions \r\n            {\r\n              Object RESULT =null;\r\n\t\t\r\n   // imprimirTablaSimbolos();\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"program\",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 102: // error_recovery ::= ERROR_RECOVERY \r\n            {\r\n              Object RESULT =null;\r\n\t\tint errleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;\r\n\t\tint errright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;\r\n\t\tObject err = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;\r\n\t\t\r\n    if (!errorDisplayed){\r\n        System.out.println(\"EL ARCHIVO FUENTE NO PUEDE SER GENERADO POR LA GRAMÁTICA \\n\\nERRORS:\\n \");\r\n        errorDisplayed = true;\r\n    } \r\n    System.out.println(\"[ERROR] Caracter Invalido: \"+err);\r\n                                        \r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"error_recovery\",37, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 103: // error_recovery ::= IDENTIFIER \r\n            {\r\n              Object RESULT =null;\r\n\t\tint errleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;\r\n\t\tint errright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;\r\n\t\tObject err = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;\r\n\t\t \r\n\r\n    //MANEJO DE ERRORES\r\n    if (!errorDisplayed){\r\n        System.out.println(\"EL ARCHIVO FUENTE NO PUEDE SER GENERADO POR LA GRAMÁTICA \\n\\nERRORS:\\n \");\r\n        errorDisplayed = true;\r\n    }   \r\n    System.out.println(\"[ERROR] Statement Out of Place: \"+err); \r\n                    \r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"error_recovery\",37, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 104: // errors ::= error_recovery \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"errors\",38, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /*. . . . . . . . . . . . . . . . . . . .*/\r\n          case 105: // errors ::= errors error_recovery \r\n            {\r\n              Object RESULT =null;\r\n\r\n              CUP$parser$result = parser.getSymbolFactory().newSymbol(\"errors\",38, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);\r\n            }\r\n          return CUP$parser$result;\r\n\r\n          /* . . . . . .*/\r\n          default:\r\n            throw new Exception(\r\n               \"Invalid action number \"+CUP$parser$act_num+\"found in internal parse table\");\r\n\r\n        }\r\n    } /* end of method */\r\n\r\n  /** Method splitting the generated action code into several parts. */\r\n  public final java_cup.runtime.Symbol CUP$parser$do_action(\r\n    int                        CUP$parser$act_num,\r\n    java_cup.runtime.lr_parser CUP$parser$parser,\r\n    java.util.Stack            CUP$parser$stack,\r\n    int                        CUP$parser$top)\r\n    throws java.lang.Exception\r\n    {\r\n              return CUP$parser$do_action_part00000000(\r\n                               CUP$parser$act_num,\r\n                               CUP$parser$parser,\r\n                               CUP$parser$stack,\r\n                               CUP$parser$top);\r\n    }\r\n}\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/generated-sources/cup/com/compiladores/parser.java b/target/generated-sources/cup/com/compiladores/parser.java
--- a/target/generated-sources/cup/com/compiladores/parser.java	(revision 5d8f528cfec518665bb61578ae69ea155a5fe7c0)
+++ b/target/generated-sources/cup/com/compiladores/parser.java	(date 1698536428874)
@@ -641,6 +641,9 @@
     public Boolean errorDisplayed = false;
     Map<String, ArrayList<String[]>> tablasDeSimbolos = new HashMap<>();
     String currentHash = "";
+    List<String> intermediateCode = new ArrayList<>();
+    int currentTemp = 1;
+
 
     @SuppressWarnings("deprecation")
     public parser(Lexer lexer) {
@@ -654,6 +657,7 @@
         titulo[0] = "Variables Globales";
         tabla.add(titulo);
         tablasDeSimbolos.put(currentHash, tabla);
+
     }
 
 //Metodo para imprimir la tabla de simbolos
@@ -667,6 +671,14 @@
     }
 }
 
+//Metodo para imprimir el codigo intermedio
+public void imprimirCodigoIntermedio() {
+    System.out.println("\n##### CODIGO INTERMEDIO #####");
+    for (String code : intermediateCode) {
+        System.out.println(code);
+    }
+}
+
 
 //Metodo para obtener un symbolo
 public String[] getSymbol(List<String[]> tabla, String id) {
@@ -1024,6 +1036,9 @@
         System.out.println("Error semantico en la linea x: Operacion aritmetica no valida");
     }
     RESULT = "-"+n; 
+    //cod 3d
+    intermediateCode.add("\nt"+currentTemp++ +" =- "+n);
+ 
 
 
               CUP$parser$result = parser.getSymbolFactory().newSymbol("aritmeticExpression",24, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
@@ -1046,6 +1061,8 @@
     if (!tipoId.equals("int"))
     System.out.println("Error semantico en la linea x: No se permite el uso de incremento en variables de tipo: "+tipoId);  
     RESULT = id+":"+tipoId;
+    //cod 3d
+    intermediateCode.add("\nt"+currentTemp++ +" =+ "+id);
 
               CUP$parser$result = parser.getSymbolFactory().newSymbol("aritmeticExpression",24, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
             }
@@ -1069,6 +1086,8 @@
         System.out.println("Error semantico en la linea x: No se permite el uso de decremento en variables de tipo: "+tipoId);  
     }
     RESULT = id+":"+tipoId;
+    //cod 3d
+    intermediateCode.add("\nt"+currentTemp++ +" =- "+id);
 
 
               CUP$parser$result = parser.getSymbolFactory().newSymbol("aritmeticExpression",24, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
@@ -1709,8 +1728,12 @@
     titulo[0] = tipoTabla;
     tabla.add(titulo);
     tablasDeSimbolos.put(currentHash, tabla);
-   
+
+   //cod 3d
+   currentTemp = 1;
+    intermediateCode.add("\n\nbegin_func_ "+idFunc.toString()+":");
 
+
               CUP$parser$result = parser.getSymbolFactory().newSymbol("functionIdentifier",32, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
             }
           return CUP$parser$result;
Index: target/maven-archiver/pom.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#Generated by Maven\r\n#Sat Oct 28 13:51:29 CST 2023\r\ngroupId=com.compiladores\r\nartifactId=scanner-parser\r\nversion=1.0-SNAPSHOT\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/target/maven-archiver/pom.properties b/target/maven-archiver/pom.properties
--- a/target/maven-archiver/pom.properties	(revision 5d8f528cfec518665bb61578ae69ea155a5fe7c0)
+++ b/target/maven-archiver/pom.properties	(date 1698536428894)
@@ -1,5 +1,3 @@
-#Generated by Maven
-#Sat Oct 28 13:51:29 CST 2023
-groupId=com.compiladores
 artifactId=scanner-parser
+groupId=com.compiladores
 version=1.0-SNAPSHOT
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"d7af08d1-e724-4b2a-92b5-4c63bf52ddc3\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/cup/parser.cup\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/cup/parser.cup\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/compiladores/fuente.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/compiladores/fuente.txt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/compiladores/tokens.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/compiladores/tokens.txt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/com/compiladores/App.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/com/compiladores/App.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/com/compiladores/parser$CUP$parser$actions.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/com/compiladores/parser$CUP$parser$actions.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/com/compiladores/parser.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/com/compiladores/parser.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/generated-sources/cup/com/compiladores/parser.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/generated-sources/cup/com/compiladores/parser.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/maven-archiver/pom.properties\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/maven-archiver/pom.properties\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/createdFiles.lst\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/createdFiles.lst\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/scanner-parser-1.0-SNAPSHOT.jar\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/scanner-parser-1.0-SNAPSHOT.jar\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/surefire-reports/TEST-com.compiladores.AppTest.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/surefire-reports/TEST-com.compiladores.AppTest.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/surefire-reports/com.compiladores.AppTest.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/surefire-reports/com.compiladores.AppTest.txt\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/..\" />\r\n  </component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"file://$PROJECT_DIR$/src/main/cup/parser.cup\" root0=\"SKIP_HIGHLIGHTING\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"useMavenConfig\" value=\"true\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2VipFqU9W8HAT4VFSzZx4RqzzIV\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"WebServerToolWindowFactoryState\": \"false\",\r\n    \"last_opened_file_path\": \"C:/Users/kevin/Desktop/Proyecto 2-Compiladores/Proyecto-2-Compiladores/scanner-parser\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\Projects\\Working\\Proyecto-1-Compiladores\\scanner-parser\\src\\main\\java\\com\\compiladores\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.App\">\r\n    <configuration name=\"App\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.compiladores.App\" />\r\n      <module name=\"scanner-parser\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.compiladores.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"AppTest.shouldAnswerWithTrue\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"scanner-parser\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.compiladores.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"com.compiladores\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.compiladores.AppTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"shouldAnswerWithTrue\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ParserTest.TestLexer\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"scanner-parser\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.compiladores.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"com.compiladores\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.compiladores.ParserTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"TestLexer\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ParserTest.TestLexerParser\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"scanner-parser\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.compiladores.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"com.compiladores\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.compiladores.ParserTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"TestLexerParser\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ParserTest.TestParser\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"scanner-parser\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.compiladores.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"com.compiladores\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.compiladores.ParserTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"TestParser\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.App\" />\r\n        <item itemvalue=\"JUnit.AppTest.shouldAnswerWithTrue\" />\r\n        <item itemvalue=\"JUnit.ParserTest.TestLexerParser\" />\r\n        <item itemvalue=\"JUnit.ParserTest.TestParser\" />\r\n        <item itemvalue=\"JUnit.ParserTest.TestLexer\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"d7af08d1-e724-4b2a-92b5-4c63bf52ddc3\" name=\"Changes\" comment=\"\" />\r\n      <created>1695328656125</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1695328656125</updated>\r\n      <workItem from=\"1695328656716\" duration=\"179000\" />\r\n      <workItem from=\"1695329233012\" duration=\"33000\" />\r\n      <workItem from=\"1695329279928\" duration=\"4806000\" />\r\n      <workItem from=\"1695534500449\" duration=\"14525000\" />\r\n      <workItem from=\"1695601219545\" duration=\"49056000\" />\r\n      <workItem from=\"1695770518673\" duration=\"6846000\" />\r\n      <workItem from=\"1695778019361\" duration=\"6539000\" />\r\n      <workItem from=\"1697205067709\" duration=\"5626000\" />\r\n      <workItem from=\"1697853376690\" duration=\"1805000\" />\r\n      <workItem from=\"1698281455525\" duration=\"20896000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"CUSTOM_BOOLEAN_PROPERTIES\">\r\n                <map>\r\n                  <entry key=\"Show.Git.Branches\" value=\"false\" />\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 5d8f528cfec518665bb61578ae69ea155a5fe7c0)
+++ b/.idea/workspace.xml	(date 1698536428794)
@@ -5,18 +5,19 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="d7af08d1-e724-4b2a-92b5-4c63bf52ddc3" name="Changes" comment="">
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/cup/parser.cup" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/cup/parser.cup" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/compiladores/fuente.txt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/compiladores/fuente.txt" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/compiladores/tokens.txt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/compiladores/tokens.txt" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/classes/com/compiladores/App.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/compiladores/App.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/com/compiladores/Lexer.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/compiladores/Lexer.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/classes/com/compiladores/parser$CUP$parser$actions.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/compiladores/parser$CUP$parser$actions.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/classes/com/compiladores/parser.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/compiladores/parser.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/com/compiladores/tokens.txt" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/compiladores/tokens.txt" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/generated-sources/cup/com/compiladores/parser.java" beforeDir="false" afterPath="$PROJECT_DIR$/target/generated-sources/cup/com/compiladores/parser.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/generated-sources/jflex/com/compiladores/Lexer.java" beforeDir="false" afterPath="$PROJECT_DIR$/target/generated-sources/jflex/com/compiladores/Lexer.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/maven-archiver/pom.properties" beforeDir="false" afterPath="$PROJECT_DIR$/target/maven-archiver/pom.properties" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst" beforeDir="false" afterPath="$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst" beforeDir="false" afterPath="$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/createdFiles.lst" beforeDir="false" afterPath="$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/createdFiles.lst" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst" beforeDir="false" afterPath="$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/scanner-parser-1.0-SNAPSHOT.jar" beforeDir="false" afterPath="$PROJECT_DIR$/target/scanner-parser-1.0-SNAPSHOT.jar" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/surefire-reports/TEST-com.compiladores.AppTest.xml" beforeDir="false" afterPath="$PROJECT_DIR$/target/surefire-reports/TEST-com.compiladores.AppTest.xml" afterDir="false" />
@@ -28,21 +29,22 @@
     <option name="LAST_RESOLUTION" value="IGNORE" />
   </component>
   <component name="Git.Settings">
+    <option name="RECENT_BRANCH_BY_REPOSITORY">
+      <map>
+        <entry key="$PROJECT_DIR$/.." value="main" />
+      </map>
+    </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
   </component>
   <component name="HighlightingSettingsPerFile">
     <setting file="file://$PROJECT_DIR$/src/main/cup/parser.cup" root0="SKIP_HIGHLIGHTING" />
-  </component>
-  <component name="MavenImportPreferences">
-    <option name="generalSettings">
-      <MavenGeneralSettings>
-        <option name="useMavenConfig" value="true" />
-      </MavenGeneralSettings>
-    </option>
   </component>
   <component name="ProblemsViewState">
     <option name="selectedTabId" value="CurrentFile" />
   </component>
+  <component name="ProjectColorInfo"><![CDATA[{
+  "associatedIndex": 0
+}]]></component>
   <component name="ProjectId" id="2VipFqU9W8HAT4VFSzZx4RqzzIV" />
   <component name="ProjectViewState">
     <option name="hideEmptyMiddlePackages" value="true" />
@@ -52,12 +54,14 @@
   "keyToString": {
     "RunOnceActivity.ShowReadmeOnStart": "true",
     "WebServerToolWindowFactoryState": "false",
-    "last_opened_file_path": "C:/Users/kevin/Desktop/Proyecto 2-Compiladores/Proyecto-2-Compiladores/scanner-parser",
+    "git-widget-placeholder": "facu",
+    "last_opened_file_path": "E:/Casa/Fabricio/TEC/Compi/Proyecto 2/Proyecto-2-Compiladores/scanner-parser",
     "node.js.detected.package.eslint": "true",
     "node.js.detected.package.tslint": "true",
     "node.js.selected.package.eslint": "(autodetect)",
     "node.js.selected.package.tslint": "(autodetect)",
     "nodejs_package_manager_path": "npm",
+    "settings.editor.selected.configurable": "preferences.pluginManager",
     "vue.rearranger.settings.migration": "true"
   }
 }]]></component>
@@ -144,6 +148,74 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
+    <configuration name="compi" type="MavenRunConfiguration" factoryName="Maven">
+      <MavenSettings>
+        <option name="myGeneralSettings" />
+        <option name="myRunnerSettings" />
+        <option name="myRunnerParameters">
+          <MavenRunnerParameters>
+            <option name="cmdOptions" />
+            <option name="profiles">
+              <set />
+            </option>
+            <option name="goals">
+              <list>
+                <option value="clean" />
+                <option value="verify" />
+              </list>
+            </option>
+            <option name="pomFileName" />
+            <option name="profilesMap">
+              <map />
+            </option>
+            <option name="projectsCmdOptionValues">
+              <list />
+            </option>
+            <option name="resolveToWorkspace" value="false" />
+            <option name="workingDirPath" value="$PROJECT_DIR$" />
+          </MavenRunnerParameters>
+        </option>
+      </MavenSettings>
+      <method v="2" />
+    </configuration>
+    <configuration name="cup" type="MavenRunConfiguration" factoryName="Maven">
+      <MavenSettings>
+        <option name="myGeneralSettings" />
+        <option name="myRunnerSettings" />
+        <option name="myRunnerParameters">
+          <MavenRunnerParameters>
+            <option name="cmdOptions" />
+            <option name="profiles">
+              <set />
+            </option>
+            <option name="goals">
+              <list>
+                <option value="cup:generate" />
+              </list>
+            </option>
+            <option name="pomFileName" />
+            <option name="profilesMap">
+              <map />
+            </option>
+            <option name="projectsCmdOptionValues">
+              <list />
+            </option>
+            <option name="resolveToWorkspace" value="false" />
+            <option name="workingDirPath" value="$PROJECT_DIR$" />
+          </MavenRunnerParameters>
+        </option>
+      </MavenSettings>
+      <method v="2" />
+    </configuration>
+    <list>
+      <item itemvalue="Application.App" />
+      <item itemvalue="JUnit.AppTest.shouldAnswerWithTrue" />
+      <item itemvalue="JUnit.ParserTest.TestLexer" />
+      <item itemvalue="JUnit.ParserTest.TestLexerParser" />
+      <item itemvalue="JUnit.ParserTest.TestParser" />
+      <item itemvalue="Maven.compi" />
+      <item itemvalue="Maven.cup" />
+    </list>
     <recent_temporary>
       <list>
         <item itemvalue="Application.App" />
@@ -172,6 +244,7 @@
       <workItem from="1697205067709" duration="5626000" />
       <workItem from="1697853376690" duration="1805000" />
       <workItem from="1698281455525" duration="20896000" />
+      <workItem from="1698523115057" duration="4510000" />
     </task>
     <servers />
   </component>
Index: target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/mnt/c/Users/kevin/Desktop/Proyecto 2-Compiladores/Proyecto-2-Compiladores/scanner-parser/target/generated-sources/jflex/com/compiladores/Lexer.java\r\n/mnt/c/Users/kevin/Desktop/Proyecto 2-Compiladores/Proyecto-2-Compiladores/scanner-parser/src/main/java/com/compiladores/App.java\r\n/mnt/c/Users/kevin/Desktop/Proyecto 2-Compiladores/Proyecto-2-Compiladores/scanner-parser/target/generated-sources/cup/com/compiladores/parser.java\r\n/mnt/c/Users/kevin/Desktop/Proyecto 2-Compiladores/Proyecto-2-Compiladores/scanner-parser/target/generated-sources/cup/com/compiladores/sym.java\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst b/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst
--- a/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst	(revision 5d8f528cfec518665bb61578ae69ea155a5fe7c0)
+++ b/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst	(date 1698536428917)
@@ -1,4 +1,4 @@
-/mnt/c/Users/kevin/Desktop/Proyecto 2-Compiladores/Proyecto-2-Compiladores/scanner-parser/target/generated-sources/jflex/com/compiladores/Lexer.java
-/mnt/c/Users/kevin/Desktop/Proyecto 2-Compiladores/Proyecto-2-Compiladores/scanner-parser/src/main/java/com/compiladores/App.java
-/mnt/c/Users/kevin/Desktop/Proyecto 2-Compiladores/Proyecto-2-Compiladores/scanner-parser/target/generated-sources/cup/com/compiladores/parser.java
-/mnt/c/Users/kevin/Desktop/Proyecto 2-Compiladores/Proyecto-2-Compiladores/scanner-parser/target/generated-sources/cup/com/compiladores/sym.java
+E:\Casa\Fabricio\TEC\Compi\Proyecto 2\Proyecto-2-Compiladores\scanner-parser\src\main\java\com\compiladores\App.java
+E:\Casa\Fabricio\TEC\Compi\Proyecto 2\Proyecto-2-Compiladores\scanner-parser\target\generated-sources\cup\com\compiladores\sym.java
+E:\Casa\Fabricio\TEC\Compi\Proyecto 2\Proyecto-2-Compiladores\scanner-parser\target\generated-sources\cup\com\compiladores\parser.java
+E:\Casa\Fabricio\TEC\Compi\Proyecto 2\Proyecto-2-Compiladores\scanner-parser\target\generated-sources\jflex\com\compiladores\Lexer.java
Index: target/surefire-reports/TEST-com.compiladores.AppTest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<testsuite xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd\" version=\"3.0\" name=\"com.compiladores.AppTest\" time=\"0.426\" tests=\"1\" errors=\"0\" skipped=\"0\" failures=\"0\">\r\n  <properties>\r\n    <property name=\"java.specification.version\" value=\"17\"/>\r\n    <property name=\"sun.jnu.encoding\" value=\"UTF-8\"/>\r\n    <property name=\"java.class.path\" value=\"/mnt/c/Users/kevin/Desktop/Proyecto 2-Compiladores/Proyecto-2-Compiladores/scanner-parser/target/test-classes:/mnt/c/Users/kevin/Desktop/Proyecto 2-Compiladores/Proyecto-2-Compiladores/scanner-parser/target/classes:/home/kevinc/.m2/repository/com/github/vbmacher/java-cup-runtime/11b-20160615-1/java-cup-runtime-11b-20160615-1.jar:/home/kevinc/.m2/repository/org/junit/jupiter/junit-jupiter/5.9.2/junit-jupiter-5.9.2.jar:/home/kevinc/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.9.2/junit-jupiter-api-5.9.2.jar:/home/kevinc/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/home/kevinc/.m2/repository/org/junit/platform/junit-platform-commons/1.9.2/junit-platform-commons-1.9.2.jar:/home/kevinc/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/home/kevinc/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.9.2/junit-jupiter-params-5.9.2.jar:/home/kevinc/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.9.2/junit-jupiter-engine-5.9.2.jar:/home/kevinc/.m2/repository/org/junit/platform/junit-platform-engine/1.9.2/junit-platform-engine-1.9.2.jar:\"/>\r\n    <property name=\"java.vm.vendor\" value=\"Private Build\"/>\r\n    <property name=\"sun.arch.data.model\" value=\"64\"/>\r\n    <property name=\"java.vendor.url\" value=\"Unknown\"/>\r\n    <property name=\"os.name\" value=\"Linux\"/>\r\n    <property name=\"java.vm.specification.version\" value=\"17\"/>\r\n    <property name=\"sun.java.launcher\" value=\"SUN_STANDARD\"/>\r\n    <property name=\"sun.boot.library.path\" value=\"/usr/lib/jvm/java-17-openjdk-amd64/lib\"/>\r\n    <property name=\"sun.java.command\" value=\"/mnt/c/Users/kevin/Desktop/Proyecto 2-Compiladores/Proyecto-2-Compiladores/scanner-parser/target/surefire/surefirebooter-20231028135124575_3.jar /mnt/c/Users/kevin/Desktop/Proyecto 2-Compiladores/Proyecto-2-Compiladores/scanner-parser/target/surefire 2023-10-28T13-51-24_170-jvmRun1 surefire-20231028135124575_1tmp surefire_0-20231028135124575_2tmp\"/>\r\n    <property name=\"jdk.debug\" value=\"release\"/>\r\n    <property name=\"surefire.test.class.path\" value=\"/mnt/c/Users/kevin/Desktop/Proyecto 2-Compiladores/Proyecto-2-Compiladores/scanner-parser/target/test-classes:/mnt/c/Users/kevin/Desktop/Proyecto 2-Compiladores/Proyecto-2-Compiladores/scanner-parser/target/classes:/home/kevinc/.m2/repository/com/github/vbmacher/java-cup-runtime/11b-20160615-1/java-cup-runtime-11b-20160615-1.jar:/home/kevinc/.m2/repository/org/junit/jupiter/junit-jupiter/5.9.2/junit-jupiter-5.9.2.jar:/home/kevinc/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.9.2/junit-jupiter-api-5.9.2.jar:/home/kevinc/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/home/kevinc/.m2/repository/org/junit/platform/junit-platform-commons/1.9.2/junit-platform-commons-1.9.2.jar:/home/kevinc/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/home/kevinc/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.9.2/junit-jupiter-params-5.9.2.jar:/home/kevinc/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.9.2/junit-jupiter-engine-5.9.2.jar:/home/kevinc/.m2/repository/org/junit/platform/junit-platform-engine/1.9.2/junit-platform-engine-1.9.2.jar:\"/>\r\n    <property name=\"sun.cpu.endian\" value=\"little\"/>\r\n    <property name=\"user.home\" value=\"/home/kevinc\"/>\r\n    <property name=\"user.language\" value=\"en\"/>\r\n    <property name=\"java.specification.vendor\" value=\"Oracle Corporation\"/>\r\n    <property name=\"java.version.date\" value=\"2023-01-17\"/>\r\n    <property name=\"java.home\" value=\"/usr/lib/jvm/java-17-openjdk-amd64\"/>\r\n    <property name=\"file.separator\" value=\"/\"/>\r\n    <property name=\"basedir\" value=\"/mnt/c/Users/kevin/Desktop/Proyecto 2-Compiladores/Proyecto-2-Compiladores/scanner-parser\"/>\r\n    <property name=\"java.vm.compressedOopsMode\" value=\"32-bit\"/>\r\n    <property name=\"line.separator\" value=\"&#10;\"/>\r\n    <property name=\"java.vm.specification.vendor\" value=\"Oracle Corporation\"/>\r\n    <property name=\"java.specification.name\" value=\"Java Platform API Specification\"/>\r\n    <property name=\"surefire.real.class.path\" value=\"/mnt/c/Users/kevin/Desktop/Proyecto 2-Compiladores/Proyecto-2-Compiladores/scanner-parser/target/surefire/surefirebooter-20231028135124575_3.jar\"/>\r\n    <property name=\"sun.management.compiler\" value=\"HotSpot 64-Bit Tiered Compilers\"/>\r\n    <property name=\"java.runtime.version\" value=\"17.0.6+10-Ubuntu-0ubuntu122.04\"/>\r\n    <property name=\"user.name\" value=\"kevinc\"/>\r\n    <property name=\"path.separator\" value=\":\"/>\r\n    <property name=\"os.version\" value=\"5.15.90.1-microsoft-standard-WSL2\"/>\r\n    <property name=\"java.runtime.name\" value=\"OpenJDK Runtime Environment\"/>\r\n    <property name=\"file.encoding\" value=\"UTF-8\"/>\r\n    <property name=\"java.vm.name\" value=\"OpenJDK 64-Bit Server VM\"/>\r\n    <property name=\"localRepository\" value=\"/home/kevinc/.m2/repository\"/>\r\n    <property name=\"java.vendor.url.bug\" value=\"Unknown\"/>\r\n    <property name=\"java.io.tmpdir\" value=\"/tmp\"/>\r\n    <property name=\"java.version\" value=\"17.0.6\"/>\r\n    <property name=\"user.dir\" value=\"/mnt/c/Users/kevin/Desktop/Proyecto 2-Compiladores/Proyecto-2-Compiladores/scanner-parser\"/>\r\n    <property name=\"os.arch\" value=\"amd64\"/>\r\n    <property name=\"java.vm.specification.name\" value=\"Java Virtual Machine Specification\"/>\r\n    <property name=\"native.encoding\" value=\"UTF-8\"/>\r\n    <property name=\"java.library.path\" value=\"/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib\"/>\r\n    <property name=\"java.vm.info\" value=\"mixed mode, sharing\"/>\r\n    <property name=\"java.vendor\" value=\"Private Build\"/>\r\n    <property name=\"java.vm.version\" value=\"17.0.6+10-Ubuntu-0ubuntu122.04\"/>\r\n    <property name=\"sun.io.unicode.encoding\" value=\"UnicodeLittle\"/>\r\n    <property name=\"java.class.version\" value=\"61.0\"/>\r\n  </properties>\r\n  <testcase name=\"shouldAnswerWithTrue\" classname=\"com.compiladores.AppTest\" time=\"0.274\"/>\r\n</testsuite>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/surefire-reports/TEST-com.compiladores.AppTest.xml b/target/surefire-reports/TEST-com.compiladores.AppTest.xml
--- a/target/surefire-reports/TEST-com.compiladores.AppTest.xml	(revision 5d8f528cfec518665bb61578ae69ea155a5fe7c0)
+++ b/target/surefire-reports/TEST-com.compiladores.AppTest.xml	(date 1698536428947)
@@ -1,54 +1,62 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="com.compiladores.AppTest" time="0.426" tests="1" errors="0" skipped="0" failures="0">
+<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="com.compiladores.AppTest" time="0.059" tests="1" errors="0" skipped="0" failures="0">
   <properties>
-    <property name="java.specification.version" value="17"/>
-    <property name="sun.jnu.encoding" value="UTF-8"/>
-    <property name="java.class.path" value="/mnt/c/Users/kevin/Desktop/Proyecto 2-Compiladores/Proyecto-2-Compiladores/scanner-parser/target/test-classes:/mnt/c/Users/kevin/Desktop/Proyecto 2-Compiladores/Proyecto-2-Compiladores/scanner-parser/target/classes:/home/kevinc/.m2/repository/com/github/vbmacher/java-cup-runtime/11b-20160615-1/java-cup-runtime-11b-20160615-1.jar:/home/kevinc/.m2/repository/org/junit/jupiter/junit-jupiter/5.9.2/junit-jupiter-5.9.2.jar:/home/kevinc/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.9.2/junit-jupiter-api-5.9.2.jar:/home/kevinc/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/home/kevinc/.m2/repository/org/junit/platform/junit-platform-commons/1.9.2/junit-platform-commons-1.9.2.jar:/home/kevinc/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/home/kevinc/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.9.2/junit-jupiter-params-5.9.2.jar:/home/kevinc/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.9.2/junit-jupiter-engine-5.9.2.jar:/home/kevinc/.m2/repository/org/junit/platform/junit-platform-engine/1.9.2/junit-platform-engine-1.9.2.jar:"/>
-    <property name="java.vm.vendor" value="Private Build"/>
+    <property name="java.specification.version" value="19"/>
+    <property name="sun.cpu.isalist" value="amd64"/>
+    <property name="sun.jnu.encoding" value="Cp1252"/>
+    <property name="java.class.path" value="E:\Casa\Fabricio\TEC\Compi\Proyecto 2\Proyecto-2-Compiladores\scanner-parser\target\test-classes;E:\Casa\Fabricio\TEC\Compi\Proyecto 2\Proyecto-2-Compiladores\scanner-parser\target\classes;C:\Users\FamiliaRM\.m2\repository\com\github\vbmacher\java-cup-runtime\11b-20160615-1\java-cup-runtime-11b-20160615-1.jar;C:\Users\FamiliaRM\.m2\repository\org\junit\jupiter\junit-jupiter\5.9.2\junit-jupiter-5.9.2.jar;C:\Users\FamiliaRM\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.2\junit-jupiter-api-5.9.2.jar;C:\Users\FamiliaRM\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\FamiliaRM\.m2\repository\org\junit\platform\junit-platform-commons\1.9.2\junit-platform-commons-1.9.2.jar;C:\Users\FamiliaRM\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\FamiliaRM\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.9.2\junit-jupiter-params-5.9.2.jar;C:\Users\FamiliaRM\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.2\junit-jupiter-engine-5.9.2.jar;C:\Users\FamiliaRM\.m2\repository\org\junit\platform\junit-platform-engine\1.9.2\junit-platform-engine-1.9.2.jar;"/>
+    <property name="java.vm.vendor" value="Oracle Corporation"/>
     <property name="sun.arch.data.model" value="64"/>
-    <property name="java.vendor.url" value="Unknown"/>
-    <property name="os.name" value="Linux"/>
-    <property name="java.vm.specification.version" value="17"/>
+    <property name="user.variant" value=""/>
+    <property name="java.vendor.url" value="https://java.oracle.com/"/>
+    <property name="user.timezone" value="America/Guatemala"/>
+    <property name="os.name" value="Windows 10"/>
+    <property name="java.vm.specification.version" value="19"/>
     <property name="sun.java.launcher" value="SUN_STANDARD"/>
-    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-17-openjdk-amd64/lib"/>
-    <property name="sun.java.command" value="/mnt/c/Users/kevin/Desktop/Proyecto 2-Compiladores/Proyecto-2-Compiladores/scanner-parser/target/surefire/surefirebooter-20231028135124575_3.jar /mnt/c/Users/kevin/Desktop/Proyecto 2-Compiladores/Proyecto-2-Compiladores/scanner-parser/target/surefire 2023-10-28T13-51-24_170-jvmRun1 surefire-20231028135124575_1tmp surefire_0-20231028135124575_2tmp"/>
+    <property name="user.country" value="ES"/>
+    <property name="sun.boot.library.path" value="C:\Users\FamiliaRM\.jdks\openjdk-19.0.2\bin"/>
+    <property name="sun.java.command" value="C:\Users\FamiliaRM\AppData\Local\Temp\surefire6017231555107790367\surefirebooter-20231028173414633_3.jar C:\Users\FamiliaRM\AppData\Local\Temp\surefire6017231555107790367 2023-10-28T17-34-14_103-jvmRun1 surefire-20231028173414633_1tmp surefire_0-20231028173414633_2tmp"/>
     <property name="jdk.debug" value="release"/>
-    <property name="surefire.test.class.path" value="/mnt/c/Users/kevin/Desktop/Proyecto 2-Compiladores/Proyecto-2-Compiladores/scanner-parser/target/test-classes:/mnt/c/Users/kevin/Desktop/Proyecto 2-Compiladores/Proyecto-2-Compiladores/scanner-parser/target/classes:/home/kevinc/.m2/repository/com/github/vbmacher/java-cup-runtime/11b-20160615-1/java-cup-runtime-11b-20160615-1.jar:/home/kevinc/.m2/repository/org/junit/jupiter/junit-jupiter/5.9.2/junit-jupiter-5.9.2.jar:/home/kevinc/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.9.2/junit-jupiter-api-5.9.2.jar:/home/kevinc/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/home/kevinc/.m2/repository/org/junit/platform/junit-platform-commons/1.9.2/junit-platform-commons-1.9.2.jar:/home/kevinc/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/home/kevinc/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.9.2/junit-jupiter-params-5.9.2.jar:/home/kevinc/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.9.2/junit-jupiter-engine-5.9.2.jar:/home/kevinc/.m2/repository/org/junit/platform/junit-platform-engine/1.9.2/junit-platform-engine-1.9.2.jar:"/>
+    <property name="surefire.test.class.path" value="E:\Casa\Fabricio\TEC\Compi\Proyecto 2\Proyecto-2-Compiladores\scanner-parser\target\test-classes;E:\Casa\Fabricio\TEC\Compi\Proyecto 2\Proyecto-2-Compiladores\scanner-parser\target\classes;C:\Users\FamiliaRM\.m2\repository\com\github\vbmacher\java-cup-runtime\11b-20160615-1\java-cup-runtime-11b-20160615-1.jar;C:\Users\FamiliaRM\.m2\repository\org\junit\jupiter\junit-jupiter\5.9.2\junit-jupiter-5.9.2.jar;C:\Users\FamiliaRM\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.2\junit-jupiter-api-5.9.2.jar;C:\Users\FamiliaRM\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\FamiliaRM\.m2\repository\org\junit\platform\junit-platform-commons\1.9.2\junit-platform-commons-1.9.2.jar;C:\Users\FamiliaRM\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\FamiliaRM\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.9.2\junit-jupiter-params-5.9.2.jar;C:\Users\FamiliaRM\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.2\junit-jupiter-engine-5.9.2.jar;C:\Users\FamiliaRM\.m2\repository\org\junit\platform\junit-platform-engine\1.9.2\junit-platform-engine-1.9.2.jar;"/>
     <property name="sun.cpu.endian" value="little"/>
-    <property name="user.home" value="/home/kevinc"/>
-    <property name="user.language" value="en"/>
+    <property name="user.home" value="C:\Users\FamiliaRM"/>
+    <property name="user.language" value="es"/>
     <property name="java.specification.vendor" value="Oracle Corporation"/>
     <property name="java.version.date" value="2023-01-17"/>
-    <property name="java.home" value="/usr/lib/jvm/java-17-openjdk-amd64"/>
-    <property name="file.separator" value="/"/>
-    <property name="basedir" value="/mnt/c/Users/kevin/Desktop/Proyecto 2-Compiladores/Proyecto-2-Compiladores/scanner-parser"/>
-    <property name="java.vm.compressedOopsMode" value="32-bit"/>
+    <property name="java.home" value="C:\Users\FamiliaRM\.jdks\openjdk-19.0.2"/>
+    <property name="file.separator" value="\"/>
+    <property name="basedir" value="E:\Casa\Fabricio\TEC\Compi\Proyecto 2\Proyecto-2-Compiladores\scanner-parser"/>
+    <property name="java.vm.compressedOopsMode" value="Zero based"/>
     <property name="line.separator" value="&#10;"/>
     <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
     <property name="java.specification.name" value="Java Platform API Specification"/>
-    <property name="surefire.real.class.path" value="/mnt/c/Users/kevin/Desktop/Proyecto 2-Compiladores/Proyecto-2-Compiladores/scanner-parser/target/surefire/surefirebooter-20231028135124575_3.jar"/>
+    <property name="surefire.real.class.path" value="C:\Users\FamiliaRM\AppData\Local\Temp\surefire6017231555107790367\surefirebooter-20231028173414633_3.jar"/>
+    <property name="user.script" value=""/>
     <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
-    <property name="java.runtime.version" value="17.0.6+10-Ubuntu-0ubuntu122.04"/>
-    <property name="user.name" value="kevinc"/>
-    <property name="path.separator" value=":"/>
-    <property name="os.version" value="5.15.90.1-microsoft-standard-WSL2"/>
+    <property name="java.runtime.version" value="19.0.2+7-44"/>
+    <property name="user.name" value="FamiliaRM"/>
+    <property name="stdout.encoding" value="Cp1252"/>
+    <property name="path.separator" value=";"/>
+    <property name="os.version" value="10.0"/>
     <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
     <property name="file.encoding" value="UTF-8"/>
     <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
-    <property name="localRepository" value="/home/kevinc/.m2/repository"/>
-    <property name="java.vendor.url.bug" value="Unknown"/>
-    <property name="java.io.tmpdir" value="/tmp"/>
-    <property name="java.version" value="17.0.6"/>
-    <property name="user.dir" value="/mnt/c/Users/kevin/Desktop/Proyecto 2-Compiladores/Proyecto-2-Compiladores/scanner-parser"/>
+    <property name="localRepository" value="C:\Users\FamiliaRM\.m2\repository"/>
+    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
+    <property name="java.io.tmpdir" value="C:\Users\FAMILI~1\AppData\Local\Temp\"/>
+    <property name="idea.version" value="2023.2.2"/>
+    <property name="java.version" value="19.0.2"/>
+    <property name="user.dir" value="E:\Casa\Fabricio\TEC\Compi\Proyecto 2\Proyecto-2-Compiladores\scanner-parser"/>
     <property name="os.arch" value="amd64"/>
     <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
-    <property name="native.encoding" value="UTF-8"/>
-    <property name="java.library.path" value="/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/>
+    <property name="sun.os.patch.level" value=""/>
+    <property name="native.encoding" value="Cp1252"/>
+    <property name="java.library.path" value="C:\Users\FamiliaRM\.jdks\openjdk-19.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Docker\Docker\resources\bin;D:\Git\cmd;C:\Program Files (x86)\dotnet\;C:\Program Files\dotnet\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs;C:\Program Files\swipl\bin;C:\Program Files\Java\jdk-18.0.2.1\bin;C:\Python311;;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Python311\Scripts\;C:\Python311\;C:\Users\FamiliaRM\.cargo\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\FamiliaRM\AppData\Local\Programs\Python\Python311\Scripts\;C:\Users\FamiliaRM\AppData\Local\Programs\Python\Python311\;C:\Users\FamiliaRM\AppData\Local\Microsoft\WindowsApps;D:\Microsoft VS Code\bin;C:\Users\FamiliaRM\AppData\Local\gitkraken\bin;C:\Program Files\Racket;C:\Program Files\JetBrains\IntelliJ IDEA 2022.3.2\bin;;C:\Users\FamiliaRM\.dotnet\tools;C:\Program Files\JetBrains\WebStorm 2023.1\bin;;E:\03 Fabri\DataGrip 2023.1\bin;;C:\Users\FamiliaRM\AppData\Roaming\npm;C:\Program Files\JetBrains\CLion 2023.1.3\bin;;E:\03 Fabri\Fuentes\jflex-1.9.1\bin;C:\Users\FamiliaRM\AppData\Local\Google\Cloud SDK\google-cloud-sdk\bin;."/>
     <property name="java.vm.info" value="mixed mode, sharing"/>
-    <property name="java.vendor" value="Private Build"/>
-    <property name="java.vm.version" value="17.0.6+10-Ubuntu-0ubuntu122.04"/>
+    <property name="stderr.encoding" value="Cp1252"/>
+    <property name="java.vendor" value="Oracle Corporation"/>
+    <property name="java.vm.version" value="19.0.2+7-44"/>
     <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
-    <property name="java.class.version" value="61.0"/>
+    <property name="java.class.version" value="63.0"/>
   </properties>
-  <testcase name="shouldAnswerWithTrue" classname="com.compiladores.AppTest" time="0.274"/>
-</testsuite>
\ No newline at end of file
+  <testcase name="shouldAnswerWithTrue" cla
\ No newline at end of file
Index: target/surefire-reports/com.compiladores.AppTest.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>-------------------------------------------------------------------------------\r\nTest set: com.compiladores.AppTest\r\n-------------------------------------------------------------------------------\r\nTests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.426 s - in com.compiladores.AppTest\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/surefire-reports/com.compiladores.AppTest.txt b/target/surefire-reports/com.compiladores.AppTest.txt
--- a/target/surefire-reports/com.compiladores.AppTest.txt	(revision 5d8f528cfec518665bb61578ae69ea155a5fe7c0)
+++ b/target/surefire-reports/com.compiladores.AppTest.txt	(date 1698536428956)
@@ -1,4 +1,4 @@
 -------------------------------------------------------------------------------
 Test set: com.compiladores.AppTest
 -------------------------------------------------------------------------------
-Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.426 s - in com.compiladores.AppTest
+Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.059 s - in com.compiladores.AppTest
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"MavenProjectsManager\">\r\n    <option name=\"originalFiles\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/pom.xml\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_19\" default=\"true\" project-jdk-name=\"19\" project-jdk-type=\"JavaSDK\" />\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 5d8f528cfec518665bb61578ae69ea155a5fe7c0)
+++ b/.idea/misc.xml	(date 1698536428781)
@@ -1,4 +1,3 @@
-<?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ExternalStorageConfigurationManager" enabled="true" />
   <component name="MavenProjectsManager">
Index: target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/mnt/c/Users/kevin/Desktop/Proyecto 2-Compiladores/Proyecto-2-Compiladores/scanner-parser/src/test/java/com/compiladores/AppTest.java\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst b/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst
--- a/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst	(revision 5d8f528cfec518665bb61578ae69ea155a5fe7c0)
+++ b/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst	(date 1698536428926)
@@ -1,1 +1,1 @@
-/mnt/c/Users/kevin/Desktop/Proyecto 2-Compiladores/Proyecto-2-Compiladores/scanner-parser/src/test/java/com/compiladores/AppTest.java
+E:\Casa\Fabricio\TEC\Compi\Proyecto 2\Proyecto-2-Compiladores\scanner-parser\src\test\java\com\compiladores\AppTest.java
Index: target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>com/compiladores/parser$CUP$parser$actions.class\r\ncom/compiladores/sym.class\r\ncom/compiladores/parser.class\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst b/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst
--- a/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst	(revision 5d8f528cfec518665bb61578ae69ea155a5fe7c0)
+++ b/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst	(date 1698536428906)
@@ -1,3 +1,3 @@
-com/compiladores/parser$CUP$parser$actions.class
-com/compiladores/sym.class
-com/compiladores/parser.class
+com\compiladores\parser.class
+com\compiladores\sym.class
+com\compiladores\parser$CUP$parser$actions.class
Index: target/generated-sources/jflex/com/compiladores/Lexer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// DO NOT EDIT\r\n// Generated by JFlex 1.9.1 http://jflex.de/\r\n// source: src/main/jflex/scanner.flex\r\n\r\npackage com.compiladores;\r\n\r\nimport java_cup.runtime.*;\r\n\r\n\r\n@SuppressWarnings(\"fallthrough\")\r\npublic class Lexer implements java_cup.runtime.Scanner {\r\n\r\n  /** This character denotes the end of file. */\r\n  public static final int YYEOF = -1;\r\n\r\n  /** Initial size of the lookahead buffer. */\r\n  private static final int ZZ_BUFFERSIZE = 16384;\r\n\r\n  // Lexical states.\r\n  public static final int YYINITIAL = 0;\r\n\r\n  /**\r\n   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l\r\n   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l\r\n   *                  at the beginning of a line\r\n   * l is of the form l = 2*k, k a non negative integer\r\n   */\r\n  private static final int ZZ_LEXSTATE[] = {\r\n     0, 0\r\n  };\r\n\r\n  /**\r\n   * Top-level table for translating characters to character classes\r\n   */\r\n  private static final int [] ZZ_CMAP_TOP = zzUnpackcmap_top();\r\n\r\n  private static final String ZZ_CMAP_TOP_PACKED_0 =\r\n    \"\\1\\0\\1\\u0100\\1\\u0200\\1\\u0300\\1\\u0400\\1\\u0500\\1\\u0600\\1\\u0700\"+\r\n    \"\\1\\u0800\\1\\u0900\\1\\u0a00\\1\\u0b00\\1\\u0c00\\1\\u0d00\\1\\u0e00\\1\\u0f00\"+\r\n    \"\\1\\u1000\\1\\u0100\\1\\u1100\\1\\u1200\\1\\u1300\\1\\u0100\\1\\u1400\\1\\u1500\"+\r\n    \"\\1\\u1600\\1\\u1700\\1\\u1800\\1\\u1900\\1\\u1a00\\1\\u1b00\\1\\u0100\\1\\u1c00\"+\r\n    \"\\1\\u1d00\\1\\u1e00\\12\\u1f00\\1\\u2000\\1\\u2100\\1\\u2200\\1\\u1f00\\1\\u2300\"+\r\n    \"\\1\\u2400\\2\\u1f00\\31\\u0100\\1\\u2500\\121\\u0100\\1\\u2600\\4\\u0100\\1\\u2700\"+\r\n    \"\\1\\u0100\\1\\u2800\\1\\u2900\\1\\u2a00\\1\\u2b00\\1\\u2c00\\1\\u2d00\\53\\u0100\"+\r\n    \"\\1\\u2e00\\10\\u2f00\\31\\u1f00\\1\\u0100\\1\\u3000\\1\\u3100\\1\\u0100\\1\\u3200\"+\r\n    \"\\1\\u3300\\1\\u3400\\1\\u3500\\1\\u3600\\1\\u3700\\1\\u3800\\1\\u3900\\1\\u3a00\"+\r\n    \"\\1\\u0100\\1\\u3b00\\1\\u3c00\\1\\u3d00\\1\\u3e00\\1\\u3f00\\1\\u4000\\1\\u4100\"+\r\n    \"\\1\\u4200\\1\\u4300\\1\\u4400\\1\\u4500\\1\\u4600\\1\\u4700\\1\\u4800\\1\\u4900\"+\r\n    \"\\1\\u4a00\\1\\u4b00\\1\\u4c00\\1\\u4d00\\1\\u4e00\\1\\u1f00\\1\\u4f00\\1\\u5000\"+\r\n    \"\\1\\u5100\\1\\u5200\\3\\u0100\\1\\u5300\\1\\u5400\\1\\u5500\\12\\u1f00\\4\\u0100\"+\r\n    \"\\1\\u5600\\17\\u1f00\\2\\u0100\\1\\u5700\\41\\u1f00\\2\\u0100\\1\\u5800\\1\\u5900\"+\r\n    \"\\2\\u1f00\\1\\u5a00\\1\\u5b00\\27\\u0100\\1\\u5c00\\4\\u0100\\1\\u5d00\\1\\u5e00\"+\r\n    \"\\42\\u1f00\\1\\u0100\\1\\u5f00\\1\\u6000\\11\\u1f00\\1\\u6100\\24\\u1f00\\1\\u6200\"+\r\n    \"\\1\\u6300\\1\\u1f00\\1\\u6400\\1\\u6500\\1\\u6600\\1\\u6700\\2\\u1f00\\1\\u6800\"+\r\n    \"\\5\\u1f00\\1\\u6900\\1\\u6a00\\1\\u6b00\\5\\u1f00\\1\\u6c00\\1\\u6d00\\2\\u1f00\"+\r\n    \"\\1\\u6e00\\1\\u1f00\\1\\u6f00\\14\\u1f00\\1\\u7000\\4\\u1f00\\246\\u0100\\1\\u7100\"+\r\n    \"\\20\\u0100\\1\\u7200\\1\\u7300\\25\\u0100\\1\\u7400\\34\\u0100\\1\\u7500\\14\\u1f00\"+\r\n    \"\\2\\u0100\\1\\u7600\\5\\u1f00\\23\\u0100\\1\\u7700\\u0aec\\u1f00\\1\\u7800\\1\\u7900\"+\r\n    \"\\u02fe\\u1f00\";\r\n\r\n  private static int [] zzUnpackcmap_top() {\r\n    int [] result = new int[4352];\r\n    int offset = 0;\r\n    offset = zzUnpackcmap_top(ZZ_CMAP_TOP_PACKED_0, offset, result);\r\n    return result;\r\n  }\r\n\r\n  private static int zzUnpackcmap_top(String packed, int offset, int [] result) {\r\n    int i = 0;       /* index in packed string  */\r\n    int j = offset;  /* index in unpacked array */\r\n    int l = packed.length();\r\n    while (i < l) {\r\n      int count = packed.charAt(i++);\r\n      int value = packed.charAt(i++);\r\n      do result[j++] = value; while (--count > 0);\r\n    }\r\n    return j;\r\n  }\r\n\r\n\r\n  /**\r\n   * Second-level tables for translating characters to character classes\r\n   */\r\n  private static final int [] ZZ_CMAP_BLOCKS = zzUnpackcmap_blocks();\r\n\r\n  private static final String ZZ_CMAP_BLOCKS_PACKED_0 =\r\n    \"\\11\\0\\1\\1\\1\\2\\1\\3\\1\\1\\1\\4\\16\\0\\4\\3\"+\r\n    \"\\1\\1\\1\\5\\1\\6\\1\\7\\1\\10\\1\\11\\1\\12\\1\\13\"+\r\n    \"\\1\\14\\1\\15\\1\\16\\1\\17\\1\\20\\1\\21\\1\\22\\1\\23\"+\r\n    \"\\12\\24\\1\\25\\1\\26\\1\\27\\1\\30\\1\\31\\2\\3\\32\\10\"+\r\n    \"\\1\\3\\1\\32\\1\\3\\1\\33\\1\\10\\1\\3\\1\\34\\1\\35\"+\r\n    \"\\1\\36\\1\\37\\1\\40\\1\\41\\1\\42\\1\\43\\1\\44\\1\\10\"+\r\n    \"\\1\\45\\1\\46\\1\\10\\1\\47\\1\\50\\1\\51\\1\\10\\1\\52\"+\r\n    \"\\1\\53\\1\\54\\1\\55\\1\\10\\1\\56\\3\\10\\1\\57\\1\\60\"+\r\n    \"\\1\\61\\1\\3\\41\\0\\2\\3\\4\\10\\4\\3\\1\\10\\2\\3\"+\r\n    \"\\1\\0\\7\\3\\1\\10\\4\\3\\1\\10\\5\\3\\27\\10\\1\\3\"+\r\n    \"\\37\\10\\1\\3\\u01ca\\10\\4\\3\\14\\10\\16\\3\\5\\10\\7\\3\"+\r\n    \"\\1\\10\\1\\3\\1\\10\\21\\3\\160\\0\\5\\10\\1\\3\\2\\10\"+\r\n    \"\\2\\3\\4\\10\\1\\3\\1\\10\\6\\3\\1\\10\\1\\3\\3\\10\"+\r\n    \"\\1\\3\\1\\10\\1\\3\\24\\10\\1\\3\\123\\10\\1\\3\\213\\10\"+\r\n    \"\\1\\3\\5\\0\\2\\3\\246\\10\\1\\3\\46\\10\\2\\3\\1\\10\"+\r\n    \"\\6\\3\\51\\10\\6\\3\\1\\10\\1\\3\\55\\0\\1\\3\\1\\0\"+\r\n    \"\\1\\3\\2\\0\\1\\3\\2\\0\\1\\3\\1\\0\\10\\3\\33\\10\"+\r\n    \"\\4\\3\\4\\10\\15\\3\\6\\0\\5\\3\\1\\10\\4\\3\\13\\0\"+\r\n    \"\\1\\3\\1\\0\\3\\3\\53\\10\\37\\0\\4\\3\\2\\10\\1\\0\"+\r\n    \"\\143\\10\\1\\3\\1\\10\\10\\0\\1\\3\\6\\0\\2\\10\\2\\0\"+\r\n    \"\\1\\3\\4\\0\\2\\10\\12\\0\\3\\10\\2\\3\\1\\10\\17\\3\"+\r\n    \"\\1\\0\\1\\10\\1\\0\\36\\10\\33\\0\\2\\3\\131\\10\\13\\0\"+\r\n    \"\\1\\10\\16\\3\\12\\0\\41\\10\\11\\0\\2\\10\\4\\3\\1\\10\"+\r\n    \"\\2\\3\\1\\0\\30\\10\\4\\0\\1\\10\\11\\0\\1\\10\\3\\0\"+\r\n    \"\\1\\10\\5\\0\\22\\3\\31\\10\\3\\0\\4\\3\\13\\10\\65\\3\"+\r\n    \"\\25\\10\\1\\3\\22\\10\\13\\3\\61\\0\\66\\10\\3\\0\\1\\10\"+\r\n    \"\\22\\0\\1\\10\\7\\0\\12\\10\\2\\0\\2\\3\\12\\0\\1\\3\"+\r\n    \"\\20\\10\\3\\0\\1\\3\\10\\10\\2\\3\\2\\10\\2\\3\\26\\10\"+\r\n    \"\\1\\3\\7\\10\\1\\3\\1\\10\\3\\3\\4\\10\\2\\3\\1\\0\"+\r\n    \"\\1\\10\\7\\0\\2\\3\\2\\0\\2\\3\\3\\0\\1\\10\\10\\3\"+\r\n    \"\\1\\0\\4\\3\\2\\10\\1\\3\\3\\10\\2\\0\\2\\3\\12\\0\"+\r\n    \"\\4\\10\\7\\3\\2\\10\\1\\3\\1\\0\\2\\3\\3\\0\\1\\3\"+\r\n    \"\\6\\10\\4\\3\\2\\10\\2\\3\\26\\10\\1\\3\\7\\10\\1\\3\"+\r\n    \"\\2\\10\\1\\3\\2\\10\\1\\3\\2\\10\\2\\3\\1\\0\\1\\3\"+\r\n    \"\\5\\0\\4\\3\\2\\0\\2\\3\\3\\0\\3\\3\\1\\0\\7\\3\"+\r\n    \"\\4\\10\\1\\3\\1\\10\\7\\3\\14\\0\\3\\10\\1\\0\\13\\3\"+\r\n    \"\\3\\0\\1\\3\\11\\10\\1\\3\\3\\10\\1\\3\\26\\10\\1\\3\"+\r\n    \"\\7\\10\\1\\3\\2\\10\\1\\3\\5\\10\\2\\3\\1\\0\\1\\10\"+\r\n    \"\\10\\0\\1\\3\\3\\0\\1\\3\\3\\0\\2\\3\\1\\10\\17\\3\"+\r\n    \"\\2\\10\\2\\0\\2\\3\\12\\0\\1\\3\\1\\10\\7\\3\\1\\10\"+\r\n    \"\\6\\0\\1\\3\\3\\0\\1\\3\\10\\10\\2\\3\\2\\10\\2\\3\"+\r\n    \"\\26\\10\\1\\3\\7\\10\\1\\3\\2\\10\\1\\3\\5\\10\\2\\3\"+\r\n    \"\\1\\0\\1\\10\\7\\0\\2\\3\\2\\0\\2\\3\\3\\0\\7\\3\"+\r\n    \"\\3\\0\\4\\3\\2\\10\\1\\3\\3\\10\\2\\0\\2\\3\\12\\0\"+\r\n    \"\\1\\3\\1\\10\\20\\3\\1\\0\\1\\10\\1\\3\\6\\10\\3\\3\"+\r\n    \"\\3\\10\\1\\3\\4\\10\\3\\3\\2\\10\\1\\3\\1\\10\\1\\3\"+\r\n    \"\\2\\10\\3\\3\\2\\10\\3\\3\\3\\10\\3\\3\\14\\10\\4\\3\"+\r\n    \"\\5\\0\\3\\3\\3\\0\\1\\3\\4\\0\\2\\3\\1\\10\\6\\3\"+\r\n    \"\\1\\0\\16\\3\\12\\0\\11\\3\\1\\10\\6\\3\\5\\0\\10\\10\"+\r\n    \"\\1\\3\\3\\10\\1\\3\\27\\10\\1\\3\\20\\10\\3\\3\\1\\10\"+\r\n    \"\\7\\0\\1\\3\\3\\0\\1\\3\\4\\0\\7\\3\\2\\0\\1\\3\"+\r\n    \"\\3\\10\\5\\3\\2\\10\\2\\0\\2\\3\\12\\0\\20\\3\\1\\10\"+\r\n    \"\\3\\0\\1\\3\\10\\10\\1\\3\\3\\10\\1\\3\\27\\10\\1\\3\"+\r\n    \"\\12\\10\\1\\3\\5\\10\\2\\3\\1\\0\\1\\10\\7\\0\\1\\3\"+\r\n    \"\\3\\0\\1\\3\\4\\0\\7\\3\\2\\0\\7\\3\\1\\10\\1\\3\"+\r\n    \"\\2\\10\\2\\0\\2\\3\\12\\0\\1\\3\\2\\10\\15\\3\\4\\0\"+\r\n    \"\\11\\10\\1\\3\\3\\10\\1\\3\\51\\10\\2\\0\\1\\10\\7\\0\"+\r\n    \"\\1\\3\\3\\0\\1\\3\\4\\0\\1\\10\\5\\3\\3\\10\\1\\0\"+\r\n    \"\\7\\3\\3\\10\\2\\0\\2\\3\\12\\0\\12\\3\\6\\10\\1\\3\"+\r\n    \"\\3\\0\\1\\3\\22\\10\\3\\3\\30\\10\\1\\3\\11\\10\\1\\3\"+\r\n    \"\\1\\10\\2\\3\\7\\10\\3\\3\\1\\0\\4\\3\\6\\0\\1\\3\"+\r\n    \"\\1\\0\\1\\3\\10\\0\\6\\3\\12\\0\\2\\3\\2\\0\\15\\3\"+\r\n    \"\\60\\10\\1\\0\\2\\10\\7\\0\\4\\3\\10\\10\\10\\0\\1\\3\"+\r\n    \"\\12\\0\\47\\3\\2\\10\\1\\3\\1\\10\\1\\3\\5\\10\\1\\3\"+\r\n    \"\\30\\10\\1\\3\\1\\10\\1\\3\\12\\10\\1\\0\\2\\10\\11\\0\"+\r\n    \"\\1\\10\\2\\3\\5\\10\\1\\3\\1\\10\\1\\3\\6\\0\\2\\3\"+\r\n    \"\\12\\0\\2\\3\\4\\10\\40\\3\\1\\10\\27\\3\\2\\0\\6\\3\"+\r\n    \"\\12\\0\\13\\3\\1\\0\\1\\3\\1\\0\\1\\3\\1\\0\\4\\3\"+\r\n    \"\\2\\0\\10\\10\\1\\3\\44\\10\\4\\3\\24\\0\\1\\3\\2\\0\"+\r\n    \"\\5\\10\\13\\0\\1\\3\\44\\0\\11\\3\\1\\0\\71\\3\\53\\10\"+\r\n    \"\\24\\0\\1\\10\\12\\0\\6\\3\\6\\10\\4\\0\\4\\10\\3\\0\"+\r\n    \"\\1\\10\\3\\0\\2\\10\\7\\0\\3\\10\\4\\0\\15\\10\\14\\0\"+\r\n    \"\\1\\10\\17\\0\\2\\3\\46\\10\\1\\3\\1\\10\\5\\3\\1\\10\"+\r\n    \"\\2\\3\\53\\10\\1\\3\\115\\10\\1\\3\\4\\10\\2\\3\\7\\10\"+\r\n    \"\\1\\3\\1\\10\\1\\3\\4\\10\\2\\3\\51\\10\\1\\3\\4\\10\"+\r\n    \"\\2\\3\\41\\10\\1\\3\\4\\10\\2\\3\\7\\10\\1\\3\\1\\10\"+\r\n    \"\\1\\3\\4\\10\\2\\3\\17\\10\\1\\3\\71\\10\\1\\3\\4\\10\"+\r\n    \"\\2\\3\\103\\10\\2\\3\\3\\0\\40\\3\\20\\10\\20\\3\\126\\10\"+\r\n    \"\\2\\3\\6\\10\\3\\3\\u016c\\10\\2\\3\\21\\10\\1\\3\\32\\10\"+\r\n    \"\\5\\3\\113\\10\\3\\3\\13\\10\\7\\3\\15\\10\\1\\3\\4\\10\"+\r\n    \"\\3\\0\\13\\3\\22\\10\\3\\0\\13\\3\\22\\10\\2\\0\\14\\3\"+\r\n    \"\\15\\10\\1\\3\\3\\10\\1\\3\\2\\0\\14\\3\\64\\10\\40\\0\"+\r\n    \"\\3\\3\\1\\10\\3\\3\\2\\10\\1\\0\\2\\3\\12\\0\\41\\3\"+\r\n    \"\\4\\0\\1\\3\\12\\0\\6\\3\\131\\10\\7\\3\\5\\10\\2\\0\"+\r\n    \"\\42\\10\\1\\0\\1\\10\\5\\3\\106\\10\\12\\3\\37\\10\\1\\3\"+\r\n    \"\\14\\0\\4\\3\\14\\0\\12\\3\\12\\0\\36\\10\\2\\3\\5\\10\"+\r\n    \"\\13\\3\\54\\10\\4\\3\\32\\10\\6\\3\\12\\0\\46\\3\\27\\10\"+\r\n    \"\\5\\0\\4\\3\\65\\10\\12\\0\\1\\3\\35\\0\\2\\3\\13\\0\"+\r\n    \"\\6\\3\\12\\0\\15\\3\\1\\10\\10\\3\\16\\0\\1\\3\\2\\0\"+\r\n    \"\\77\\3\\5\\0\\57\\10\\21\\0\\7\\10\\4\\3\\12\\0\\21\\3\"+\r\n    \"\\11\\0\\14\\3\\3\\0\\36\\10\\15\\0\\2\\10\\12\\0\\54\\10\"+\r\n    \"\\16\\0\\14\\3\\44\\10\\24\\0\\10\\3\\12\\0\\3\\3\\3\\10\"+\r\n    \"\\12\\0\\44\\10\\2\\3\\11\\10\\7\\3\\53\\10\\2\\3\\3\\10\"+\r\n    \"\\20\\3\\3\\0\\1\\3\\25\\0\\4\\10\\1\\0\\6\\10\\1\\0\"+\r\n    \"\\2\\10\\3\\0\\1\\10\\5\\3\\300\\10\\72\\0\\1\\3\\5\\0\"+\r\n    \"\\26\\10\\2\\3\\6\\10\\2\\3\\46\\10\\2\\3\\6\\10\\2\\3\"+\r\n    \"\\10\\10\\1\\3\\1\\10\\1\\3\\1\\10\\1\\3\\1\\10\\1\\3\"+\r\n    \"\\37\\10\\2\\3\\65\\10\\1\\3\\7\\10\\1\\3\\1\\10\\3\\3\"+\r\n    \"\\3\\10\\1\\3\\7\\10\\3\\3\\4\\10\\2\\3\\6\\10\\4\\3\"+\r\n    \"\\15\\10\\5\\3\\3\\10\\1\\3\\7\\10\\16\\3\\5\\0\\32\\3\"+\r\n    \"\\5\\0\\20\\3\\2\\10\\23\\3\\1\\10\\13\\3\\5\\0\\1\\3\"+\r\n    \"\\12\\0\\1\\3\\1\\10\\15\\3\\1\\10\\20\\3\\15\\10\\3\\3\"+\r\n    \"\\40\\10\\20\\3\\15\\0\\4\\3\\1\\0\\3\\3\\14\\0\\21\\3\"+\r\n    \"\\1\\10\\4\\3\\1\\10\\2\\3\\12\\10\\1\\3\\1\\10\\3\\3\"+\r\n    \"\\5\\10\\6\\3\\1\\10\\1\\3\\1\\10\\1\\3\\1\\10\\1\\3\"+\r\n    \"\\4\\10\\1\\3\\13\\10\\2\\3\\4\\10\\5\\3\\5\\10\\4\\3\"+\r\n    \"\\1\\10\\21\\3\\51\\10\\u0177\\3\\57\\10\\1\\3\\57\\10\\1\\3\"+\r\n    \"\\205\\10\\6\\3\\4\\10\\3\\0\\2\\10\\14\\3\\46\\10\\1\\3\"+\r\n    \"\\1\\10\\5\\3\\1\\10\\2\\3\\70\\10\\7\\3\\1\\10\\17\\3\"+\r\n    \"\\1\\0\\27\\10\\11\\3\\7\\10\\1\\3\\7\\10\\1\\3\\7\\10\"+\r\n    \"\\1\\3\\7\\10\\1\\3\\7\\10\\1\\3\\7\\10\\1\\3\\7\\10\"+\r\n    \"\\1\\3\\7\\10\\1\\3\\40\\0\\57\\3\\1\\10\\325\\3\\3\\10\"+\r\n    \"\\31\\3\\11\\10\\6\\0\\1\\3\\5\\10\\2\\3\\5\\10\\4\\3\"+\r\n    \"\\126\\10\\2\\3\\2\\0\\2\\3\\3\\10\\1\\3\\132\\10\\1\\3\"+\r\n    \"\\4\\10\\5\\3\\53\\10\\1\\3\\136\\10\\21\\3\\40\\10\\60\\3\"+\r\n    \"\\320\\10\\100\\3\\375\\10\\3\\3\\215\\10\\103\\3\\56\\10\\2\\3\"+\r\n    \"\\15\\10\\3\\3\\20\\10\\12\\0\\2\\10\\24\\3\\57\\10\\1\\0\"+\r\n    \"\\4\\3\\12\\0\\1\\3\\37\\10\\2\\0\\120\\10\\2\\0\\45\\3\"+\r\n    \"\\11\\10\\2\\3\\147\\10\\2\\3\\65\\10\\2\\3\\11\\10\\52\\3\"+\r\n    \"\\15\\10\\1\\0\\3\\10\\1\\0\\4\\10\\1\\0\\27\\10\\5\\0\"+\r\n    \"\\4\\3\\1\\0\\13\\3\\1\\10\\7\\3\\64\\10\\14\\3\\2\\0\"+\r\n    \"\\62\\10\\22\\0\\12\\3\\12\\0\\6\\3\\22\\0\\6\\10\\3\\3\"+\r\n    \"\\1\\10\\1\\3\\2\\10\\13\\0\\34\\10\\10\\0\\2\\3\\27\\10\"+\r\n    \"\\15\\0\\14\\3\\35\\10\\3\\3\\4\\0\\57\\10\\16\\0\\16\\3\"+\r\n    \"\\1\\10\\12\\0\\6\\3\\5\\10\\1\\0\\12\\10\\12\\0\\5\\10\"+\r\n    \"\\1\\3\\51\\10\\16\\0\\11\\3\\3\\10\\1\\0\\10\\10\\2\\0\"+\r\n    \"\\2\\3\\12\\0\\6\\3\\27\\10\\3\\3\\1\\10\\3\\0\\62\\10\"+\r\n    \"\\1\\0\\1\\10\\3\\0\\2\\10\\2\\0\\5\\10\\2\\0\\1\\10\"+\r\n    \"\\1\\0\\1\\10\\30\\3\\3\\10\\2\\3\\13\\10\\5\\0\\2\\3\"+\r\n    \"\\3\\10\\2\\0\\12\\3\\6\\10\\2\\3\\6\\10\\2\\3\\6\\10\"+\r\n    \"\\11\\3\\7\\10\\1\\3\\7\\10\\1\\3\\53\\10\\1\\3\\16\\10\"+\r\n    \"\\6\\3\\163\\10\\10\\0\\1\\3\\2\\0\\2\\3\\12\\0\\6\\3\"+\r\n    \"\\244\\10\\14\\3\\27\\10\\4\\3\\61\\10\\u0104\\3\\156\\10\\2\\3\"+\r\n    \"\\152\\10\\46\\3\\7\\10\\14\\3\\5\\10\\5\\3\\1\\10\\1\\0\"+\r\n    \"\\12\\10\\1\\3\\15\\10\\1\\3\\5\\10\\1\\3\\1\\10\\1\\3\"+\r\n    \"\\2\\10\\1\\3\\2\\10\\1\\3\\154\\10\\41\\3\\153\\10\\22\\3\"+\r\n    \"\\100\\10\\2\\3\\66\\10\\50\\3\\15\\10\\3\\3\\20\\0\\20\\3\"+\r\n    \"\\20\\0\\3\\3\\2\\10\\30\\3\\3\\10\\31\\3\\1\\10\\6\\3\"+\r\n    \"\\5\\10\\1\\3\\207\\10\\2\\3\\1\\0\\4\\3\\1\\10\\13\\3\"+\r\n    \"\\12\\0\\7\\3\\32\\10\\4\\3\\1\\10\\1\\3\\32\\10\\13\\3\"+\r\n    \"\\131\\10\\3\\3\\6\\10\\2\\3\\6\\10\\2\\3\\6\\10\\2\\3\"+\r\n    \"\\3\\10\\3\\3\\2\\10\\3\\3\\2\\10\\22\\3\\3\\0\\4\\3\"+\r\n    \"\\14\\10\\1\\3\\32\\10\\1\\3\\23\\10\\1\\3\\2\\10\\1\\3\"+\r\n    \"\\17\\10\\2\\3\\16\\10\\42\\3\\173\\10\\105\\3\\65\\10\\210\\3\"+\r\n    \"\\1\\0\\202\\3\\35\\10\\3\\3\\61\\10\\17\\3\\1\\0\\37\\3\"+\r\n    \"\\40\\10\\15\\3\\36\\10\\5\\3\\46\\10\\5\\0\\5\\3\\36\\10\"+\r\n    \"\\2\\3\\44\\10\\4\\3\\10\\10\\1\\3\\5\\10\\52\\3\\236\\10\"+\r\n    \"\\2\\3\\12\\0\\6\\3\\44\\10\\4\\3\\44\\10\\4\\3\\50\\10\"+\r\n    \"\\10\\3\\64\\10\\234\\3\\67\\10\\11\\3\\26\\10\\12\\3\\10\\10\"+\r\n    \"\\230\\3\\6\\10\\2\\3\\1\\10\\1\\3\\54\\10\\1\\3\\2\\10\"+\r\n    \"\\3\\3\\1\\10\\2\\3\\27\\10\\12\\3\\27\\10\\11\\3\\37\\10\"+\r\n    \"\\101\\3\\23\\10\\1\\3\\2\\10\\12\\3\\26\\10\\12\\3\\32\\10\"+\r\n    \"\\106\\3\\70\\10\\6\\3\\2\\10\\100\\3\\1\\10\\3\\0\\1\\3\"+\r\n    \"\\2\\0\\5\\3\\4\\0\\4\\10\\1\\3\\3\\10\\1\\3\\35\\10\"+\r\n    \"\\2\\3\\3\\0\\4\\3\\1\\0\\40\\3\\35\\10\\3\\3\\35\\10\"+\r\n    \"\\43\\3\\10\\10\\1\\3\\34\\10\\2\\0\\31\\3\\66\\10\\12\\3\"+\r\n    \"\\26\\10\\12\\3\\23\\10\\15\\3\\22\\10\\156\\3\\111\\10\\67\\3\"+\r\n    \"\\63\\10\\15\\3\\63\\10\\15\\3\\44\\10\\4\\0\\10\\3\\12\\0\"+\r\n    \"\\u0146\\3\\52\\10\\1\\3\\2\\0\\3\\3\\2\\10\\116\\3\\35\\10\"+\r\n    \"\\12\\3\\1\\10\\10\\3\\26\\10\\13\\0\\137\\3\\25\\10\\33\\3\"+\r\n    \"\\27\\10\\11\\3\\3\\0\\65\\10\\17\\0\\37\\3\\12\\0\\17\\3\"+\r\n    \"\\4\\0\\55\\10\\13\\0\\2\\3\\1\\0\\17\\3\\1\\0\\2\\3\"+\r\n    \"\\31\\10\\7\\3\\12\\0\\6\\3\\3\\0\\44\\10\\16\\0\\1\\3\"+\r\n    \"\\12\\0\\4\\3\\1\\10\\2\\0\\1\\10\\10\\3\\43\\10\\1\\0\"+\r\n    \"\\2\\3\\1\\10\\11\\3\\3\\0\\60\\10\\16\\0\\4\\10\\4\\3\"+\r\n    \"\\4\\0\\1\\3\\14\\0\\1\\10\\1\\3\\1\\10\\43\\3\\22\\10\"+\r\n    \"\\1\\3\\31\\10\\14\\0\\6\\3\\1\\0\\101\\3\\7\\10\\1\\3\"+\r\n    \"\\1\\10\\1\\3\\4\\10\\1\\3\\17\\10\\1\\3\\12\\10\\7\\3\"+\r\n    \"\\57\\10\\14\\0\\5\\3\\12\\0\\6\\3\\4\\0\\1\\3\\10\\10\"+\r\n    \"\\2\\3\\2\\10\\2\\3\\26\\10\\1\\3\\7\\10\\1\\3\\2\\10\"+\r\n    \"\\1\\3\\5\\10\\1\\3\\2\\0\\1\\10\\7\\0\\2\\3\\2\\0\"+\r\n    \"\\2\\3\\3\\0\\2\\3\\1\\10\\6\\3\\1\\0\\5\\3\\5\\10\"+\r\n    \"\\2\\0\\2\\3\\7\\0\\3\\3\\5\\0\\213\\3\\65\\10\\22\\0\"+\r\n    \"\\4\\10\\5\\3\\12\\0\\4\\3\\1\\0\\3\\10\\36\\3\\60\\10\"+\r\n    \"\\24\\0\\2\\10\\1\\3\\1\\10\\10\\3\\12\\0\\246\\3\\57\\10\"+\r\n    \"\\7\\0\\2\\3\\11\\0\\27\\3\\4\\10\\2\\0\\42\\3\\60\\10\"+\r\n    \"\\21\\0\\3\\3\\1\\10\\13\\3\\12\\0\\46\\3\\53\\10\\15\\0\"+\r\n    \"\\1\\10\\7\\3\\12\\0\\66\\3\\33\\10\\2\\3\\17\\0\\4\\3\"+\r\n    \"\\12\\0\\306\\3\\54\\10\\17\\0\\145\\3\\100\\10\\12\\0\\25\\3\"+\r\n    \"\\10\\10\\2\\3\\1\\10\\2\\3\\10\\10\\1\\3\\2\\10\\1\\3\"+\r\n    \"\\30\\10\\6\\0\\1\\3\\2\\0\\2\\3\\4\\0\\1\\10\\1\\0\"+\r\n    \"\\1\\10\\2\\0\\14\\3\\12\\0\\106\\3\\10\\10\\2\\3\\47\\10\"+\r\n    \"\\7\\0\\2\\3\\7\\0\\1\\10\\1\\3\\1\\10\\1\\0\\33\\3\"+\r\n    \"\\1\\10\\12\\0\\50\\10\\7\\0\\1\\10\\4\\0\\10\\3\\1\\0\"+\r\n    \"\\10\\3\\1\\10\\13\\0\\56\\10\\20\\0\\3\\3\\1\\10\\42\\3\"+\r\n    \"\\71\\10\\7\\3\\11\\10\\1\\3\\45\\10\\10\\0\\1\\3\\10\\0\"+\r\n    \"\\1\\10\\17\\3\\12\\0\\30\\3\\36\\10\\2\\3\\26\\0\\1\\3\"+\r\n    \"\\16\\0\\111\\3\\7\\10\\1\\3\\2\\10\\1\\3\\46\\10\\6\\0\"+\r\n    \"\\3\\3\\1\\0\\1\\3\\2\\0\\1\\3\\7\\0\\1\\10\\1\\0\"+\r\n    \"\\10\\3\\12\\0\\6\\3\\6\\10\\1\\3\\2\\10\\1\\3\\40\\10\"+\r\n    \"\\5\\0\\1\\3\\2\\0\\1\\3\\5\\0\\1\\10\\7\\3\\12\\0\"+\r\n    \"\\u0136\\3\\23\\10\\4\\0\\271\\3\\1\\10\\54\\3\\4\\10\\37\\3\"+\r\n    \"\\232\\10\\146\\3\\157\\10\\21\\3\\304\\10\\274\\3\\57\\10\\1\\3\"+\r\n    \"\\11\\0\\307\\3\\107\\10\\271\\3\\71\\10\\7\\3\\37\\10\\1\\3\"+\r\n    \"\\12\\0\\146\\3\\36\\10\\2\\3\\5\\0\\13\\3\\60\\10\\7\\0\"+\r\n    \"\\11\\3\\4\\10\\14\\3\\12\\0\\11\\3\\25\\10\\5\\3\\23\\10\"+\r\n    \"\\260\\3\\100\\10\\200\\3\\113\\10\\4\\3\\1\\0\\1\\10\\67\\0\"+\r\n    \"\\7\\3\\4\\0\\15\\10\\100\\3\\2\\10\\1\\3\\1\\10\\1\\0\"+\r\n    \"\\13\\3\\2\\0\\16\\3\\370\\10\\10\\3\\326\\10\\52\\3\\11\\10\"+\r\n    \"\\367\\3\\37\\10\\61\\3\\3\\10\\21\\3\\4\\10\\10\\3\\u018c\\10\"+\r\n    \"\\4\\3\\153\\10\\5\\3\\15\\10\\3\\3\\11\\10\\7\\3\\12\\10\"+\r\n    \"\\3\\3\\2\\0\\1\\3\\4\\0\\301\\3\\5\\0\\3\\3\\26\\0\"+\r\n    \"\\2\\3\\7\\0\\36\\3\\4\\0\\224\\3\\3\\0\\273\\3\\125\\10\"+\r\n    \"\\1\\3\\107\\10\\1\\3\\2\\10\\2\\3\\1\\10\\2\\3\\2\\10\"+\r\n    \"\\2\\3\\4\\10\\1\\3\\14\\10\\1\\3\\1\\10\\1\\3\\7\\10\"+\r\n    \"\\1\\3\\101\\10\\1\\3\\4\\10\\2\\3\\10\\10\\1\\3\\7\\10\"+\r\n    \"\\1\\3\\34\\10\\1\\3\\4\\10\\1\\3\\5\\10\\1\\3\\1\\10\"+\r\n    \"\\3\\3\\7\\10\\1\\3\\u0154\\10\\2\\3\\31\\10\\1\\3\\31\\10\"+\r\n    \"\\1\\3\\37\\10\\1\\3\\31\\10\\1\\3\\37\\10\\1\\3\\31\\10\"+\r\n    \"\\1\\3\\37\\10\\1\\3\\31\\10\\1\\3\\37\\10\\1\\3\\31\\10\"+\r\n    \"\\1\\3\\10\\10\\2\\3\\151\\0\\4\\3\\62\\0\\10\\3\\1\\0\"+\r\n    \"\\16\\3\\1\\0\\26\\3\\5\\0\\1\\3\\17\\0\\120\\3\\7\\0\"+\r\n    \"\\1\\3\\21\\0\\2\\3\\7\\0\\1\\3\\2\\0\\1\\3\\5\\0\"+\r\n    \"\\325\\3\\55\\10\\3\\3\\7\\0\\7\\10\\2\\3\\12\\0\\4\\3\"+\r\n    \"\\1\\10\\u0171\\3\\54\\10\\16\\0\\5\\3\\306\\10\\13\\3\\7\\0\"+\r\n    \"\\51\\3\\104\\10\\7\\0\\1\\10\\4\\3\\12\\0\\u0156\\3\\1\\10\"+\r\n    \"\\117\\3\\4\\10\\1\\3\\33\\10\\1\\3\\2\\10\\1\\3\\1\\10\"+\r\n    \"\\2\\3\\1\\10\\1\\3\\12\\10\\1\\3\\4\\10\\1\\3\\1\\10\"+\r\n    \"\\1\\3\\1\\10\\6\\3\\1\\10\\4\\3\\1\\10\\1\\3\\1\\10\"+\r\n    \"\\1\\3\\1\\10\\1\\3\\3\\10\\1\\3\\2\\10\\1\\3\\1\\10\"+\r\n    \"\\2\\3\\1\\10\\1\\3\\1\\10\\1\\3\\1\\10\\1\\3\\1\\10\"+\r\n    \"\\1\\3\\1\\10\\1\\3\\2\\10\\1\\3\\1\\10\\2\\3\\4\\10\"+\r\n    \"\\1\\3\\7\\10\\1\\3\\4\\10\\1\\3\\4\\10\\1\\3\\1\\10\"+\r\n    \"\\1\\3\\12\\10\\1\\3\\21\\10\\5\\3\\3\\10\\1\\3\\5\\10\"+\r\n    \"\\1\\3\\21\\10\\u0134\\3\\12\\0\\6\\3\\336\\10\\42\\3\\65\\10\"+\r\n    \"\\13\\3\\336\\10\\2\\3\\u0182\\10\\16\\3\\u0131\\10\\37\\3\\36\\10\"+\r\n    \"\\342\\3\\113\\10\\266\\3\\1\\0\\36\\3\\140\\0\\200\\3\\360\\0\"+\r\n    \"\\20\\3\";\r\n\r\n  private static int [] zzUnpackcmap_blocks() {\r\n    int [] result = new int[31232];\r\n    int offset = 0;\r\n    offset = zzUnpackcmap_blocks(ZZ_CMAP_BLOCKS_PACKED_0, offset, result);\r\n    return result;\r\n  }\r\n\r\n  private static int zzUnpackcmap_blocks(String packed, int offset, int [] result) {\r\n    int i = 0;       /* index in packed string  */\r\n    int j = offset;  /* index in unpacked array */\r\n    int l = packed.length();\r\n    while (i < l) {\r\n      int count = packed.charAt(i++);\r\n      int value = packed.charAt(i++);\r\n      do result[j++] = value; while (--count > 0);\r\n    }\r\n    return j;\r\n  }\r\n\r\n  /**\r\n   * Translates DFA states to action switch labels.\r\n   */\r\n  private static final int [] ZZ_ACTION = zzUnpackAction();\r\n\r\n  private static final String ZZ_ACTION_PACKED_0 =\r\n    \"\\1\\0\\1\\1\\1\\2\\1\\3\\1\\1\\1\\4\\1\\5\\1\\6\"+\r\n    \"\\2\\1\\1\\7\\1\\10\\1\\11\\1\\12\\1\\13\\1\\14\\1\\15\"+\r\n    \"\\1\\16\\1\\17\\1\\20\\1\\21\\1\\22\\1\\23\\1\\24\\13\\5\"+\r\n    \"\\1\\25\\1\\1\\1\\26\\1\\27\\1\\0\\1\\30\\1\\0\\1\\31\"+\r\n    \"\\1\\0\\1\\32\\1\\33\\1\\0\\1\\2\\1\\34\\1\\35\\1\\36\"+\r\n    \"\\1\\37\\1\\40\\1\\41\\11\\5\\1\\42\\1\\43\\7\\5\\1\\44\"+\r\n    \"\\1\\30\\1\\45\\2\\0\\3\\2\\1\\34\\10\\5\\1\\46\\1\\47\"+\r\n    \"\\10\\5\\2\\0\\1\\2\\1\\0\\1\\2\\1\\50\\1\\5\\1\\51\"+\r\n    \"\\1\\52\\1\\5\\1\\53\\3\\5\\1\\54\\3\\5\\1\\55\\1\\5\"+\r\n    \"\\1\\0\\3\\2\\1\\56\\1\\5\\1\\57\\1\\60\\1\\61\\4\\5\"+\r\n    \"\\1\\62\\1\\0\\1\\2\\1\\5\\1\\63\\1\\64\\1\\65\\1\\66\";\r\n\r\n  private static int [] zzUnpackAction() {\r\n    int [] result = new int[140];\r\n    int offset = 0;\r\n    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);\r\n    return result;\r\n  }\r\n\r\n  private static int zzUnpackAction(String packed, int offset, int [] result) {\r\n    int i = 0;       /* index in packed string  */\r\n    int j = offset;  /* index in unpacked array */\r\n    int l = packed.length();\r\n    while (i < l) {\r\n      int count = packed.charAt(i++);\r\n      int value = packed.charAt(i++);\r\n      do result[j++] = value; while (--count > 0);\r\n    }\r\n    return j;\r\n  }\r\n\r\n\r\n  /**\r\n   * Translates a state to a row index in the transition table\r\n   */\r\n  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();\r\n\r\n  private static final String ZZ_ROWMAP_PACKED_0 =\r\n    \"\\0\\0\\0\\62\\0\\144\\0\\226\\0\\310\\0\\62\\0\\372\\0\\62\"+\r\n    \"\\0\\u012c\\0\\u015e\\0\\62\\0\\62\\0\\62\\0\\u0190\\0\\62\\0\\u01c2\"+\r\n    \"\\0\\u01f4\\0\\u0226\\0\\62\\0\\62\\0\\u0258\\0\\u028a\\0\\u02bc\\0\\62\"+\r\n    \"\\0\\u02ee\\0\\u0320\\0\\u0352\\0\\u0384\\0\\u03b6\\0\\u03e8\\0\\u041a\\0\\u044c\"+\r\n    \"\\0\\u047e\\0\\u04b0\\0\\u04e2\\0\\62\\0\\u0514\\0\\62\\0\\62\\0\\310\"+\r\n    \"\\0\\u0546\\0\\u0578\\0\\62\\0\\u05aa\\0\\62\\0\\62\\0\\u05dc\\0\\u060e\"+\r\n    \"\\0\\u0640\\0\\62\\0\\62\\0\\62\\0\\62\\0\\62\\0\\u0672\\0\\u06a4\"+\r\n    \"\\0\\u06d6\\0\\u0708\\0\\u073a\\0\\u076c\\0\\u079e\\0\\u07d0\\0\\u0802\\0\\372\"+\r\n    \"\\0\\u0834\\0\\u0866\\0\\u0898\\0\\u08ca\\0\\u08fc\\0\\u092e\\0\\u0960\\0\\u0992\"+\r\n    \"\\0\\62\\0\\u0578\\0\\u09c4\\0\\u09f6\\0\\u0a28\\0\\u0a5a\\0\\u0a8c\\0\\u0abe\"+\r\n    \"\\0\\u0af0\\0\\u0b22\\0\\u0b54\\0\\u0b86\\0\\u0bb8\\0\\u0bea\\0\\u0c1c\\0\\u0c4e\"+\r\n    \"\\0\\u0c80\\0\\372\\0\\372\\0\\u0cb2\\0\\u0ce4\\0\\u0d16\\0\\u0d48\\0\\u0d7a\"+\r\n    \"\\0\\u0dac\\0\\u0dde\\0\\u0e10\\0\\u015e\\0\\u0e42\\0\\u0e74\\0\\u01f4\\0\\u0ea6\"+\r\n    \"\\0\\372\\0\\u0ed8\\0\\372\\0\\372\\0\\u0f0a\\0\\372\\0\\u0f3c\\0\\u0f6e\"+\r\n    \"\\0\\u0fa0\\0\\372\\0\\u0fd2\\0\\u1004\\0\\u1036\\0\\u1068\\0\\u109a\\0\\u10cc\"+\r\n    \"\\0\\u10fe\\0\\u1130\\0\\u1162\\0\\372\\0\\u1194\\0\\372\\0\\372\\0\\372\"+\r\n    \"\\0\\u11c6\\0\\u11f8\\0\\u122a\\0\\u125c\\0\\372\\0\\u128e\\0\\u12c0\\0\\u12f2\"+\r\n    \"\\0\\372\\0\\372\\0\\372\\0\\372\";\r\n\r\n  private static int [] zzUnpackRowMap() {\r\n    int [] result = new int[140];\r\n    int offset = 0;\r\n    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);\r\n    return result;\r\n  }\r\n\r\n  private static int zzUnpackRowMap(String packed, int offset, int [] result) {\r\n    int i = 0;  /* index in packed string  */\r\n    int j = offset;  /* index in unpacked array */\r\n    int l = packed.length() - 1;\r\n    while (i < l) {\r\n      int high = packed.charAt(i++) << 16;\r\n      result[j++] = high | packed.charAt(i++);\r\n    }\r\n    return j;\r\n  }\r\n\r\n  /**\r\n   * The transition table of the DFA\r\n   */\r\n  private static final int [] ZZ_TRANS = zzUnpacktrans();\r\n\r\n  private static final String ZZ_TRANS_PACKED_0 =\r\n    \"\\1\\2\\2\\3\\1\\2\\1\\3\\1\\4\\1\\5\\1\\6\\1\\7\"+\r\n    \"\\1\\10\\1\\11\\1\\12\\1\\13\\1\\14\\1\\15\\1\\16\\1\\17\"+\r\n    \"\\1\\20\\1\\2\\1\\21\\1\\22\\1\\23\\1\\24\\1\\25\\1\\26\"+\r\n    \"\\1\\27\\1\\2\\1\\30\\1\\7\\1\\31\\1\\32\\1\\33\\1\\34\"+\r\n    \"\\1\\35\\2\\7\\1\\36\\4\\7\\1\\37\\1\\40\\1\\41\\1\\42\"+\r\n    \"\\1\\7\\1\\43\\1\\44\\1\\45\\1\\46\\63\\0\\2\\3\\1\\0\"+\r\n    \"\\1\\3\\105\\0\\1\\47\\31\\0\\6\\50\\1\\51\\23\\50\\1\\52\"+\r\n    \"\\27\\50\\1\\7\\7\\0\\1\\7\\13\\0\\1\\7\\7\\0\\23\\7\"+\r\n    \"\\15\\0\\1\\53\\47\\0\\13\\54\\1\\0\\46\\54\\17\\0\\1\\55\"+\r\n    \"\\63\\0\\1\\56\\56\\0\\1\\57\\4\\0\\1\\60\\60\\0\\1\\61\"+\r\n    \"\\1\\0\\1\\22\\64\\0\\1\\62\\1\\63\\61\\0\\1\\64\\61\\0\"+\r\n    \"\\1\\65\\1\\66\\30\\0\\1\\7\\7\\0\\1\\7\\13\\0\\1\\7\"+\r\n    \"\\7\\0\\14\\7\\1\\67\\1\\7\\1\\70\\4\\7\\3\\0\\1\\7\"+\r\n    \"\\7\\0\\1\\7\\13\\0\\1\\7\\7\\0\\1\\71\\6\\7\\1\\72\"+\r\n    \"\\13\\7\\3\\0\\1\\7\\7\\0\\1\\7\\13\\0\\1\\7\\7\\0\"+\r\n    \"\\4\\7\\1\\73\\16\\7\\3\\0\\1\\7\\7\\0\\1\\7\\13\\0\"+\r\n    \"\\1\\7\\7\\0\\12\\7\\1\\74\\10\\7\\3\\0\\1\\7\\7\\0\"+\r\n    \"\\1\\7\\13\\0\\1\\7\\7\\0\\1\\75\\11\\7\\1\\76\\1\\7\"+\r\n    \"\\1\\77\\6\\7\\3\\0\\1\\7\\7\\0\\1\\7\\13\\0\\1\\7\"+\r\n    \"\\7\\0\\5\\7\\1\\100\\5\\7\\1\\101\\7\\7\\3\\0\\1\\7\"+\r\n    \"\\7\\0\\1\\7\\13\\0\\1\\7\\7\\0\\16\\7\\1\\102\\4\\7\"+\r\n    \"\\3\\0\\1\\7\\7\\0\\1\\7\\13\\0\\1\\7\\7\\0\\1\\103\"+\r\n    \"\\3\\7\\1\\104\\16\\7\\3\\0\\1\\7\\7\\0\\1\\7\\13\\0\"+\r\n    \"\\1\\7\\7\\0\\20\\7\\1\\105\\1\\7\\1\\106\\3\\0\\1\\7\"+\r\n    \"\\7\\0\\1\\7\\13\\0\\1\\7\\7\\0\\16\\7\\1\\107\\4\\7\"+\r\n    \"\\3\\0\\1\\7\\7\\0\\1\\7\\13\\0\\1\\7\\7\\0\\7\\7\"+\r\n    \"\\1\\110\\13\\7\\63\\0\\1\\111\\7\\0\\1\\50\\53\\0\\6\\50\"+\r\n    \"\\1\\112\\23\\50\\1\\52\\27\\50\\13\\0\\1\\113\\46\\0\\16\\114\"+\r\n    \"\\1\\115\\43\\114\\2\\60\\1\\116\\1\\60\\1\\117\\16\\60\\1\\120\"+\r\n    \"\\36\\60\\24\\0\\1\\121\\35\\0\\1\\7\\7\\0\\1\\7\\13\\0\"+\r\n    \"\\1\\7\\7\\0\\14\\7\\1\\122\\6\\7\\3\\0\\1\\7\\7\\0\"+\r\n    \"\\1\\7\\13\\0\\1\\7\\7\\0\\4\\7\\1\\123\\16\\7\\3\\0\"+\r\n    \"\\1\\7\\7\\0\\1\\7\\13\\0\\1\\7\\7\\0\\17\\7\\1\\124\"+\r\n    \"\\3\\7\\3\\0\\1\\7\\7\\0\\1\\7\\13\\0\\1\\7\\7\\0\"+\r\n    \"\\1\\125\\22\\7\\3\\0\\1\\7\\7\\0\\1\\7\\13\\0\\1\\7\"+\r\n    \"\\7\\0\\5\\7\\1\\126\\15\\7\\3\\0\\1\\7\\7\\0\\1\\7\"+\r\n    \"\\13\\0\\1\\7\\7\\0\\17\\7\\1\\127\\3\\7\\3\\0\\1\\7\"+\r\n    \"\\7\\0\\1\\7\\13\\0\\1\\7\\7\\0\\12\\7\\1\\130\\10\\7\"+\r\n    \"\\3\\0\\1\\7\\7\\0\\1\\7\\13\\0\\1\\7\\7\\0\\14\\7\"+\r\n    \"\\1\\131\\6\\7\\3\\0\\1\\7\\7\\0\\1\\7\\13\\0\\1\\7\"+\r\n    \"\\7\\0\\16\\7\\1\\132\\4\\7\\3\\0\\1\\7\\7\\0\\1\\7\"+\r\n    \"\\13\\0\\1\\7\\7\\0\\20\\7\\1\\133\\2\\7\\3\\0\\1\\7\"+\r\n    \"\\7\\0\\1\\7\\13\\0\\1\\7\\7\\0\\10\\7\\1\\134\\12\\7\"+\r\n    \"\\3\\0\\1\\7\\7\\0\\1\\7\\13\\0\\1\\7\\7\\0\\13\\7\"+\r\n    \"\\1\\135\\7\\7\\3\\0\\1\\7\\7\\0\\1\\7\\13\\0\\1\\7\"+\r\n    \"\\7\\0\\1\\136\\17\\7\\1\\137\\2\\7\\3\\0\\1\\7\\7\\0\"+\r\n    \"\\1\\7\\13\\0\\1\\7\\7\\0\\16\\7\\1\\140\\4\\7\\3\\0\"+\r\n    \"\\1\\7\\7\\0\\1\\7\\13\\0\\1\\7\\7\\0\\10\\7\\1\\141\"+\r\n    \"\\12\\7\\3\\0\\1\\7\\7\\0\\1\\7\\13\\0\\1\\7\\7\\0\"+\r\n    \"\\21\\7\\1\\142\\1\\7\\3\\0\\1\\7\\7\\0\\1\\7\\13\\0\"+\r\n    \"\\1\\7\\7\\0\\10\\7\\1\\143\\12\\7\\16\\0\\1\\144\\46\\0\"+\r\n    \"\\16\\114\\1\\145\\61\\114\\1\\145\\4\\114\\1\\146\\36\\114\\23\\0\"+\r\n    \"\\1\\147\\40\\0\\1\\116\\20\\0\\1\\147\\36\\0\\2\\60\\1\\116\"+\r\n    \"\\1\\60\\1\\117\\11\\60\\1\\150\\4\\60\\1\\120\\36\\60\\22\\0\"+\r\n    \"\\1\\61\\1\\0\\1\\121\\35\\0\\1\\7\\7\\0\\1\\7\\13\\0\"+\r\n    \"\\1\\7\\7\\0\\12\\7\\1\\151\\10\\7\\3\\0\\1\\7\\7\\0\"+\r\n    \"\\1\\7\\13\\0\\1\\7\\7\\0\\1\\152\\22\\7\\3\\0\\1\\7\"+\r\n    \"\\7\\0\\1\\7\\13\\0\\1\\7\\7\\0\\4\\7\\1\\153\\16\\7\"+\r\n    \"\\3\\0\\1\\7\\7\\0\\1\\7\\13\\0\\1\\7\\7\\0\\16\\7\"+\r\n    \"\\1\\154\\4\\7\\3\\0\\1\\7\\7\\0\\1\\7\\13\\0\\1\\7\"+\r\n    \"\\7\\0\\1\\155\\22\\7\\3\\0\\1\\7\\7\\0\\1\\7\\13\\0\"+\r\n    \"\\1\\7\\7\\0\\4\\7\\1\\156\\16\\7\\3\\0\\1\\7\\7\\0\"+\r\n    \"\\1\\7\\13\\0\\1\\7\\7\\0\\17\\7\\1\\142\\3\\7\\3\\0\"+\r\n    \"\\1\\7\\7\\0\\1\\7\\13\\0\\1\\7\\7\\0\\1\\157\\22\\7\"+\r\n    \"\\3\\0\\1\\7\\7\\0\\1\\7\\13\\0\\1\\7\\7\\0\\13\\7\"+\r\n    \"\\1\\160\\7\\7\\3\\0\\1\\7\\7\\0\\1\\7\\13\\0\\1\\7\"+\r\n    \"\\7\\0\\6\\7\\1\\161\\14\\7\\3\\0\\1\\7\\7\\0\\1\\7\"+\r\n    \"\\13\\0\\1\\7\\7\\0\\3\\7\\1\\162\\17\\7\\3\\0\\1\\7\"+\r\n    \"\\7\\0\\1\\7\\13\\0\\1\\7\\7\\0\\21\\7\\1\\163\\1\\7\"+\r\n    \"\\3\\0\\1\\7\\7\\0\\1\\7\\13\\0\\1\\7\\7\\0\\10\\7\"+\r\n    \"\\1\\164\\12\\7\\3\\0\\1\\7\\7\\0\\1\\7\\13\\0\\1\\7\"+\r\n    \"\\7\\0\\20\\7\\1\\165\\2\\7\\3\\0\\1\\7\\7\\0\\1\\7\"+\r\n    \"\\13\\0\\1\\7\\7\\0\\4\\7\\1\\166\\16\\7\\3\\0\\1\\7\"+\r\n    \"\\7\\0\\1\\7\\13\\0\\1\\7\\7\\0\\12\\7\\1\\167\\10\\7\"+\r\n    \"\\3\\0\\16\\114\\1\\145\\4\\114\\1\\116\\54\\114\\1\\145\\4\\114\"+\r\n    \"\\1\\170\\36\\114\\2\\171\\1\\146\\1\\171\\1\\172\\16\\171\\1\\173\"+\r\n    \"\\36\\171\\1\\7\\7\\0\\1\\7\\13\\0\\1\\7\\7\\0\\11\\7\"+\r\n    \"\\1\\174\\11\\7\\3\\0\\1\\7\\7\\0\\1\\7\\13\\0\\1\\7\"+\r\n    \"\\7\\0\\21\\7\\1\\175\\1\\7\\3\\0\\1\\7\\7\\0\\1\\7\"+\r\n    \"\\13\\0\\1\\7\\7\\0\\20\\7\\1\\176\\2\\7\\3\\0\\1\\7\"+\r\n    \"\\7\\0\\1\\7\\13\\0\\1\\7\\7\\0\\20\\7\\1\\177\\2\\7\"+\r\n    \"\\3\\0\\1\\7\\7\\0\\1\\7\\13\\0\\1\\7\\7\\0\\4\\7\"+\r\n    \"\\1\\200\\16\\7\\3\\0\\1\\7\\7\\0\\1\\7\\13\\0\\1\\7\"+\r\n    \"\\7\\0\\16\\7\\1\\201\\4\\7\\3\\0\\1\\7\\7\\0\\1\\7\"+\r\n    \"\\13\\0\\1\\7\\7\\0\\13\\7\\1\\202\\7\\7\\3\\0\\1\\7\"+\r\n    \"\\7\\0\\1\\7\\13\\0\\1\\7\\7\\0\\2\\7\\1\\203\\20\\7\"+\r\n    \"\\3\\0\\1\\7\\7\\0\\1\\7\\13\\0\\1\\7\\7\\0\\5\\7\"+\r\n    \"\\1\\204\\12\\7\\1\\42\\2\\7\\3\\0\\1\\7\\7\\0\\1\\7\"+\r\n    \"\\13\\0\\1\\7\\7\\0\\4\\7\\1\\205\\16\\7\\3\\0\\16\\114\"+\r\n    \"\\1\\206\\4\\114\\1\\171\\36\\114\\2\\171\\1\\146\\1\\171\\1\\172\"+\r\n    \"\\11\\171\\1\\207\\4\\171\\1\\173\\36\\171\\2\\114\\1\\146\\13\\114\"+\r\n    \"\\1\\145\\4\\114\\1\\170\\36\\114\\2\\171\\1\\146\\1\\171\\1\\172\"+\r\n    \"\\11\\171\\1\\150\\4\\171\\1\\173\\36\\171\\1\\7\\7\\0\\1\\7\"+\r\n    \"\\13\\0\\1\\7\\7\\0\\12\\7\\1\\210\\10\\7\\3\\0\\1\\7\"+\r\n    \"\\7\\0\\1\\7\\13\\0\\1\\7\\7\\0\\13\\7\\1\\211\\7\\7\"+\r\n    \"\\3\\0\\1\\7\\7\\0\\1\\7\\13\\0\\1\\7\\7\\0\\6\\7\"+\r\n    \"\\1\\212\\14\\7\\3\\0\\1\\7\\7\\0\\1\\7\\13\\0\\1\\7\"+\r\n    \"\\7\\0\\7\\7\\1\\213\\13\\7\\3\\0\\1\\7\\7\\0\\1\\7\"+\r\n    \"\\13\\0\\1\\7\\7\\0\\1\\75\\22\\7\\3\\0\\16\\114\\1\\115\"+\r\n    \"\\4\\114\\1\\146\\36\\114\\2\\171\\1\\146\\1\\171\\1\\172\\11\\171\"+\r\n    \"\\1\\207\\4\\171\\1\\120\\36\\171\\1\\7\\7\\0\\1\\7\\13\\0\"+\r\n    \"\\1\\7\\7\\0\\20\\7\\1\\214\\2\\7\\3\\0\";\r\n\r\n  private static int [] zzUnpacktrans() {\r\n    int [] result = new int[4900];\r\n    int offset = 0;\r\n    offset = zzUnpacktrans(ZZ_TRANS_PACKED_0, offset, result);\r\n    return result;\r\n  }\r\n\r\n  private static int zzUnpacktrans(String packed, int offset, int [] result) {\r\n    int i = 0;       /* index in packed string  */\r\n    int j = offset;  /* index in unpacked array */\r\n    int l = packed.length();\r\n    while (i < l) {\r\n      int count = packed.charAt(i++);\r\n      int value = packed.charAt(i++);\r\n      value--;\r\n      do result[j++] = value; while (--count > 0);\r\n    }\r\n    return j;\r\n  }\r\n\r\n\r\n  /** Error code for \"Unknown internal scanner error\". */\r\n  private static final int ZZ_UNKNOWN_ERROR = 0;\r\n  /** Error code for \"could not match input\". */\r\n  private static final int ZZ_NO_MATCH = 1;\r\n  /** Error code for \"pushback value was too large\". */\r\n  private static final int ZZ_PUSHBACK_2BIG = 2;\r\n\r\n  /**\r\n   * Error messages for {@link #ZZ_UNKNOWN_ERROR}, {@link #ZZ_NO_MATCH}, and\r\n   * {@link #ZZ_PUSHBACK_2BIG} respectively.\r\n   */\r\n  private static final String ZZ_ERROR_MSG[] = {\r\n    \"Unknown internal scanner error\",\r\n    \"Error: could not match input\",\r\n    \"Error: pushback value was too large\"\r\n  };\r\n\r\n  /**\r\n   * ZZ_ATTRIBUTE[aState] contains the attributes of state {@code aState}\r\n   */\r\n  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();\r\n\r\n  private static final String ZZ_ATTRIBUTE_PACKED_0 =\r\n    \"\\1\\0\\1\\11\\3\\1\\1\\11\\1\\1\\1\\11\\2\\1\\3\\11\"+\r\n    \"\\1\\1\\1\\11\\3\\1\\2\\11\\3\\1\\1\\11\\13\\1\\1\\11\"+\r\n    \"\\1\\1\\2\\11\\1\\0\\1\\1\\1\\0\\1\\11\\1\\0\\2\\11\"+\r\n    \"\\1\\0\\2\\1\\5\\11\\22\\1\\1\\11\\2\\1\\2\\0\\26\\1\"+\r\n    \"\\2\\0\\1\\1\\1\\0\\20\\1\\1\\0\\15\\1\\1\\0\\6\\1\";\r\n\r\n  private static int [] zzUnpackAttribute() {\r\n    int [] result = new int[140];\r\n    int offset = 0;\r\n    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);\r\n    return result;\r\n  }\r\n\r\n  private static int zzUnpackAttribute(String packed, int offset, int [] result) {\r\n    int i = 0;       /* index in packed string  */\r\n    int j = offset;  /* index in unpacked array */\r\n    int l = packed.length();\r\n    while (i < l) {\r\n      int count = packed.charAt(i++);\r\n      int value = packed.charAt(i++);\r\n      do result[j++] = value; while (--count > 0);\r\n    }\r\n    return j;\r\n  }\r\n\r\n  /** Input device. */\r\n  private java.io.Reader zzReader;\r\n\r\n  /** Current state of the DFA. */\r\n  private int zzState;\r\n\r\n  /** Current lexical state. */\r\n  private int zzLexicalState = YYINITIAL;\r\n\r\n  /**\r\n   * This buffer contains the current text to be matched and is the source of the {@link #yytext()}\r\n   * string.\r\n   */\r\n  private char zzBuffer[] = new char[Math.min(ZZ_BUFFERSIZE, zzMaxBufferLen())];\r\n\r\n  /** Text position at the last accepting state. */\r\n  private int zzMarkedPos;\r\n\r\n  /** Current text position in the buffer. */\r\n  private int zzCurrentPos;\r\n\r\n  /** Marks the beginning of the {@link #yytext()} string in the buffer. */\r\n  private int zzStartRead;\r\n\r\n  /** Marks the last character in the buffer, that has been read from input. */\r\n  private int zzEndRead;\r\n\r\n  /**\r\n   * Whether the scanner is at the end of file.\r\n   * @see #yyatEOF\r\n   */\r\n  private boolean zzAtEOF;\r\n\r\n  /**\r\n   * The number of occupied positions in {@link #zzBuffer} beyond {@link #zzEndRead}.\r\n   *\r\n   * <p>When a lead/high surrogate has been read from the input stream into the final\r\n   * {@link #zzBuffer} position, this will have a value of 1; otherwise, it will have a value of 0.\r\n   */\r\n  private int zzFinalHighSurrogate = 0;\r\n\r\n  /** Number of newlines encountered up to the start of the matched text. */\r\n  @SuppressWarnings(\"unused\")\r\n  private int yyline;\r\n\r\n  /** Number of characters from the last newline up to the start of the matched text. */\r\n  @SuppressWarnings(\"unused\")\r\n  private int yycolumn;\r\n\r\n  /** Number of characters up to the start of the matched text. */\r\n  @SuppressWarnings(\"unused\")\r\n  private long yychar;\r\n\r\n  /** Whether the scanner is currently at the beginning of a line. */\r\n  @SuppressWarnings(\"unused\")\r\n  private boolean zzAtBOL = true;\r\n\r\n  /** Whether the user-EOF-code has already been executed. */\r\n  private boolean zzEOFDone;\r\n\r\n  /* user code: */\r\n    StringBuffer string = new StringBuffer();\r\n\r\n    private Symbol symbol(int type) {\r\n        return new Symbol(type, yyline, yycolumn);\r\n    }\r\n    private Symbol symbol(int type, Object value) {\r\n        return new Symbol(type, yyline, yycolumn, value);\r\n    }\r\n\r\n\r\n  /**\r\n   * Creates a new scanner\r\n   *\r\n   * @param   in  the java.io.Reader to read input from.\r\n   */\r\n  public Lexer(java.io.Reader in) {\r\n    this.zzReader = in;\r\n  }\r\n\r\n\r\n  /** Returns the maximum size of the scanner buffer, which limits the size of tokens. */\r\n  private int zzMaxBufferLen() {\r\n    return Integer.MAX_VALUE;\r\n  }\r\n\r\n  /**  Whether the scanner buffer can grow to accommodate a larger token. */\r\n  private boolean zzCanGrow() {\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Translates raw input code points to DFA table row\r\n   */\r\n  private static int zzCMap(int input) {\r\n    int offset = input & 255;\r\n    return offset == input ? ZZ_CMAP_BLOCKS[offset] : ZZ_CMAP_BLOCKS[ZZ_CMAP_TOP[input >> 8] | offset];\r\n  }\r\n\r\n  /**\r\n   * Refills the input buffer.\r\n   *\r\n   * @return {@code false} iff there was new input.\r\n   * @exception java.io.IOException  if any I/O-Error occurs\r\n   */\r\n  private boolean zzRefill() throws java.io.IOException {\r\n\r\n    /* first: make room (if you can) */\r\n    if (zzStartRead > 0) {\r\n      zzEndRead += zzFinalHighSurrogate;\r\n      zzFinalHighSurrogate = 0;\r\n      System.arraycopy(zzBuffer, zzStartRead,\r\n                       zzBuffer, 0,\r\n                       zzEndRead - zzStartRead);\r\n\r\n      /* translate stored positions */\r\n      zzEndRead -= zzStartRead;\r\n      zzCurrentPos -= zzStartRead;\r\n      zzMarkedPos -= zzStartRead;\r\n      zzStartRead = 0;\r\n    }\r\n\r\n    /* is the buffer big enough? */\r\n    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate && zzCanGrow()) {\r\n      /* if not, and it can grow: blow it up */\r\n      char newBuffer[] = new char[Math.min(zzBuffer.length * 2, zzMaxBufferLen())];\r\n      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);\r\n      zzBuffer = newBuffer;\r\n      zzEndRead += zzFinalHighSurrogate;\r\n      zzFinalHighSurrogate = 0;\r\n    }\r\n\r\n    /* fill the buffer with new input */\r\n    int requested = zzBuffer.length - zzEndRead;\r\n    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);\r\n\r\n    /* not supposed to occur according to specification of java.io.Reader */\r\n    if (numRead == 0) {\r\n      if (requested == 0) {\r\n        throw new java.io.EOFException(\"Scan buffer limit reached [\"+zzBuffer.length+\"]\");\r\n      }\r\n      else {\r\n        throw new java.io.IOException(\r\n            \"Reader returned 0 characters. See JFlex examples/zero-reader for a workaround.\");\r\n      }\r\n    }\r\n    if (numRead > 0) {\r\n      zzEndRead += numRead;\r\n      if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {\r\n        if (numRead == requested) { // We requested too few chars to encode a full Unicode character\r\n          --zzEndRead;\r\n          zzFinalHighSurrogate = 1;\r\n        } else {                    // There is room in the buffer for at least one more char\r\n          int c = zzReader.read();  // Expecting to read a paired low surrogate char\r\n          if (c == -1) {\r\n            return true;\r\n          } else {\r\n            zzBuffer[zzEndRead++] = (char)c;\r\n          }\r\n        }\r\n      }\r\n      /* potentially more input available */\r\n      return false;\r\n    }\r\n\r\n    /* numRead < 0 ==> end of stream */\r\n    return true;\r\n  }\r\n\r\n\r\n  /**\r\n   * Closes the input reader.\r\n   *\r\n   * @throws java.io.IOException if the reader could not be closed.\r\n   */\r\n  public final void yyclose() throws java.io.IOException {\r\n    zzAtEOF = true; // indicate end of file\r\n    zzEndRead = zzStartRead; // invalidate buffer\r\n\r\n    if (zzReader != null) {\r\n      zzReader.close();\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Resets the scanner to read from a new input stream.\r\n   *\r\n   * <p>Does not close the old reader.\r\n   *\r\n   * <p>All internal variables are reset, the old input stream <b>cannot</b> be reused (internal\r\n   * buffer is discarded and lost). Lexical state is set to {@code ZZ_INITIAL}.\r\n   *\r\n   * <p>Internal scan buffer is resized down to its initial length, if it has grown.\r\n   *\r\n   * @param reader The new input stream.\r\n   */\r\n  public final void yyreset(java.io.Reader reader) {\r\n    zzReader = reader;\r\n    zzEOFDone = false;\r\n    yyResetPosition();\r\n    zzLexicalState = YYINITIAL;\r\n    int initBufferSize = Math.min(ZZ_BUFFERSIZE, zzMaxBufferLen());\r\n    if (zzBuffer.length > initBufferSize) {\r\n      zzBuffer = new char[initBufferSize];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Resets the input position.\r\n   */\r\n  private final void yyResetPosition() {\r\n      zzAtBOL  = true;\r\n      zzAtEOF  = false;\r\n      zzCurrentPos = 0;\r\n      zzMarkedPos = 0;\r\n      zzStartRead = 0;\r\n      zzEndRead = 0;\r\n      zzFinalHighSurrogate = 0;\r\n      yyline = 0;\r\n      yycolumn = 0;\r\n      yychar = 0L;\r\n  }\r\n\r\n\r\n  /**\r\n   * Returns whether the scanner has reached the end of the reader it reads from.\r\n   *\r\n   * @return whether the scanner has reached EOF.\r\n   */\r\n  public final boolean yyatEOF() {\r\n    return zzAtEOF;\r\n  }\r\n\r\n\r\n  /**\r\n   * Returns the current lexical state.\r\n   *\r\n   * @return the current lexical state.\r\n   */\r\n  public final int yystate() {\r\n    return zzLexicalState;\r\n  }\r\n\r\n\r\n  /**\r\n   * Enters a new lexical state.\r\n   *\r\n   * @param newState the new lexical state\r\n   */\r\n  public final void yybegin(int newState) {\r\n    zzLexicalState = newState;\r\n  }\r\n\r\n\r\n  /**\r\n   * Returns the text matched by the current regular expression.\r\n   *\r\n   * @return the matched text.\r\n   */\r\n  public final String yytext() {\r\n    return new String(zzBuffer, zzStartRead, zzMarkedPos-zzStartRead);\r\n  }\r\n\r\n\r\n  /**\r\n   * Returns the character at the given position from the matched text.\r\n   *\r\n   * <p>It is equivalent to {@code yytext().charAt(pos)}, but faster.\r\n   *\r\n   * @param position the position of the character to fetch. A value from 0 to {@code yylength()-1}.\r\n   *\r\n   * @return the character at {@code position}.\r\n   */\r\n  public final char yycharat(int position) {\r\n    return zzBuffer[zzStartRead + position];\r\n  }\r\n\r\n\r\n  /**\r\n   * How many characters were matched.\r\n   *\r\n   * @return the length of the matched text region.\r\n   */\r\n  public final int yylength() {\r\n    return zzMarkedPos-zzStartRead;\r\n  }\r\n\r\n\r\n  /**\r\n   * Reports an error that occurred while scanning.\r\n   *\r\n   * <p>In a well-formed scanner (no or only correct usage of {@code yypushback(int)} and a\r\n   * match-all fallback rule) this method will only be called with things that\r\n   * \"Can't Possibly Happen\".\r\n   *\r\n   * <p>If this method is called, something is seriously wrong (e.g. a JFlex bug producing a faulty\r\n   * scanner etc.).\r\n   *\r\n   * <p>Usual syntax/scanner level error handling should be done in error fallback rules.\r\n   *\r\n   * @param errorCode the code of the error message to display.\r\n   */\r\n  private static void zzScanError(int errorCode) {\r\n    String message;\r\n    try {\r\n      message = ZZ_ERROR_MSG[errorCode];\r\n    } catch (ArrayIndexOutOfBoundsException e) {\r\n      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];\r\n    }\r\n\r\n    throw new Error(message);\r\n  }\r\n\r\n\r\n  /**\r\n   * Pushes the specified amount of characters back into the input stream.\r\n   *\r\n   * <p>They will be read again by then next call of the scanning method.\r\n   *\r\n   * @param number the number of characters to be read again. This number must not be greater than\r\n   *     {@link #yylength()}.\r\n   */\r\n  public void yypushback(int number)  {\r\n    if ( number > yylength() )\r\n      zzScanError(ZZ_PUSHBACK_2BIG);\r\n\r\n    zzMarkedPos -= number;\r\n  }\r\n\r\n\r\n  /**\r\n   * Contains user EOF-code, which will be executed exactly once,\r\n   * when the end of file is reached\r\n   */\r\n  private void zzDoEOF() throws java.io.IOException {\r\n    if (!zzEOFDone) {\r\n      zzEOFDone = true;\r\n    \r\n  yyclose();    }\r\n  }\r\n\r\n\r\n\r\n\r\n  /**\r\n   * Resumes scanning until the next regular expression is matched, the end of input is encountered\r\n   * or an I/O-Error occurs.\r\n   *\r\n   * @return the next token.\r\n   * @exception java.io.IOException if any I/O-Error occurs.\r\n   */\r\n  @Override  public java_cup.runtime.Symbol next_token() throws java.io.IOException\r\n  {\r\n    int zzInput;\r\n    int zzAction;\r\n\r\n    // cached fields:\r\n    int zzCurrentPosL;\r\n    int zzMarkedPosL;\r\n    int zzEndReadL = zzEndRead;\r\n    char[] zzBufferL = zzBuffer;\r\n\r\n    int [] zzTransL = ZZ_TRANS;\r\n    int [] zzRowMapL = ZZ_ROWMAP;\r\n    int [] zzAttrL = ZZ_ATTRIBUTE;\r\n\r\n    while (true) {\r\n      zzMarkedPosL = zzMarkedPos;\r\n\r\n      zzAction = -1;\r\n\r\n      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;\r\n\r\n      zzState = ZZ_LEXSTATE[zzLexicalState];\r\n\r\n      // set up zzAction for empty match case:\r\n      int zzAttributes = zzAttrL[zzState];\r\n      if ( (zzAttributes & 1) == 1 ) {\r\n        zzAction = zzState;\r\n      }\r\n\r\n\r\n      zzForAction: {\r\n        while (true) {\r\n\r\n          if (zzCurrentPosL < zzEndReadL) {\r\n            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);\r\n            zzCurrentPosL += Character.charCount(zzInput);\r\n          }\r\n          else if (zzAtEOF) {\r\n            zzInput = YYEOF;\r\n            break zzForAction;\r\n          }\r\n          else {\r\n            // store back cached positions\r\n            zzCurrentPos  = zzCurrentPosL;\r\n            zzMarkedPos   = zzMarkedPosL;\r\n            boolean eof = zzRefill();\r\n            // get translated positions and possibly new buffer\r\n            zzCurrentPosL  = zzCurrentPos;\r\n            zzMarkedPosL   = zzMarkedPos;\r\n            zzBufferL      = zzBuffer;\r\n            zzEndReadL     = zzEndRead;\r\n            if (eof) {\r\n              zzInput = YYEOF;\r\n              break zzForAction;\r\n            }\r\n            else {\r\n              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);\r\n              zzCurrentPosL += Character.charCount(zzInput);\r\n            }\r\n          }\r\n          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMap(zzInput) ];\r\n          if (zzNext == -1) break zzForAction;\r\n          zzState = zzNext;\r\n\r\n          zzAttributes = zzAttrL[zzState];\r\n          if ( (zzAttributes & 1) == 1 ) {\r\n            zzAction = zzState;\r\n            zzMarkedPosL = zzCurrentPosL;\r\n            if ( (zzAttributes & 8) == 8 ) break zzForAction;\r\n          }\r\n\r\n        }\r\n      }\r\n\r\n      // store back cached position\r\n      zzMarkedPos = zzMarkedPosL;\r\n\r\n      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {\r\n        zzAtEOF = true;\r\n            zzDoEOF();\r\n          { return new java_cup.runtime.Symbol(sym.EOF); }\r\n      }\r\n      else {\r\n        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {\r\n          case 1:\r\n            { return symbol(sym.ERROR_RECOVERY, yytext());\r\n            }\r\n          // fall through\r\n          case 55: break;\r\n          case 2:\r\n            { /* ignore */\r\n            }\r\n          // fall through\r\n          case 56: break;\r\n          case 3:\r\n            { return symbol(sym.NOT, yytext());\r\n            }\r\n          // fall through\r\n          case 57: break;\r\n          case 4:\r\n            { return symbol(sym.SEPARATOR, yytext());\r\n            }\r\n          // fall through\r\n          case 58: break;\r\n          case 5:\r\n            { return symbol(sym.IDENTIFIER, yytext());\r\n            }\r\n          // fall through\r\n          case 59: break;\r\n          case 6:\r\n            { return symbol(sym.MODULE, yytext());\r\n            }\r\n          // fall through\r\n          case 60: break;\r\n          case 7:\r\n            { return symbol(sym.LPAREN, yytext());\r\n            }\r\n          // fall through\r\n          case 61: break;\r\n          case 8:\r\n            { return symbol(sym.RPAREN, yytext());\r\n            }\r\n          // fall through\r\n          case 62: break;\r\n          case 9:\r\n            { return symbol(sym.TIMES, yytext());\r\n            }\r\n          // fall through\r\n          case 63: break;\r\n          case 10:\r\n            { return symbol(sym.PLUS, yytext());\r\n            }\r\n          // fall through\r\n          case 64: break;\r\n          case 11:\r\n            { return symbol(sym.COMMA, yytext());\r\n            }\r\n          // fall through\r\n          case 65: break;\r\n          case 12:\r\n            { return symbol(sym.MINUS, yytext());\r\n            }\r\n          // fall through\r\n          case 66: break;\r\n          case 13:\r\n            { return symbol(sym.DIVIDE, yytext());\r\n            }\r\n          // fall through\r\n          case 67: break;\r\n          case 14:\r\n            { return symbol(sym.INTEGER, Integer.valueOf(yytext()));\r\n            }\r\n          // fall through\r\n          case 68: break;\r\n          case 15:\r\n            { return symbol(sym.DOTS, yytext());\r\n            }\r\n          // fall through\r\n          case 69: break;\r\n          case 16:\r\n            { return symbol(sym.ENDLINE, yytext());\r\n            }\r\n          // fall through\r\n          case 70: break;\r\n          case 17:\r\n            { return symbol(sym.LESS, yytext());\r\n            }\r\n          // fall through\r\n          case 71: break;\r\n          case 18:\r\n            { return symbol(sym.ASSIGN, yytext());\r\n            }\r\n          // fall through\r\n          case 72: break;\r\n          case 19:\r\n            { return symbol(sym.GREATER, yytext());\r\n            }\r\n          // fall through\r\n          case 73: break;\r\n          case 20:\r\n            { return symbol(sym.POWER, yytext());\r\n            }\r\n          // fall through\r\n          case 74: break;\r\n          case 21:\r\n            { return symbol(sym.BLOCKSTART, yytext());\r\n            }\r\n          // fall through\r\n          case 75: break;\r\n          case 22:\r\n            { return symbol(sym.BLOCKEND, yytext());\r\n            }\r\n          // fall through\r\n          case 76: break;\r\n          case 23:\r\n            { return symbol(sym.DIFFERENT, yytext());\r\n            }\r\n          // fall through\r\n          case 77: break;\r\n          case 24:\r\n            { return symbol(sym.STRING, yytext());\r\n            }\r\n          // fall through\r\n          case 78: break;\r\n          case 25:\r\n            { return symbol(sym.AND, yytext());\r\n            }\r\n          // fall through\r\n          case 79: break;\r\n          case 26:\r\n            { return symbol(sym.INCREMENT, yytext());\r\n            }\r\n          // fall through\r\n          case 80: break;\r\n          case 27:\r\n            { return symbol(sym.DECREMENT, yytext());\r\n            }\r\n          // fall through\r\n          case 81: break;\r\n          case 28:\r\n            { return symbol(sym.FLOAT, Float.valueOf(yytext()));\r\n            }\r\n          // fall through\r\n          case 82: break;\r\n          case 29:\r\n            { return symbol(sym.PRINTSYMBOL, yytext());\r\n            }\r\n          // fall through\r\n          case 83: break;\r\n          case 30:\r\n            { return symbol(sym.LESSEQUAL, yytext());\r\n            }\r\n          // fall through\r\n          case 84: break;\r\n          case 31:\r\n            { return symbol(sym.EQUALS, yytext());\r\n            }\r\n          // fall through\r\n          case 85: break;\r\n          case 32:\r\n            { return symbol(sym.GREATEREQUAL, yytext());\r\n            }\r\n          // fall through\r\n          case 86: break;\r\n          case 33:\r\n            { return symbol(sym.READSYMBOL, yytext());\r\n            }\r\n          // fall through\r\n          case 87: break;\r\n          case 34:\r\n            { return symbol(sym.IF, yytext());\r\n            }\r\n          // fall through\r\n          case 88: break;\r\n          case 35:\r\n            { return symbol(sym.IN, yytext());\r\n            }\r\n          // fall through\r\n          case 89: break;\r\n          case 36:\r\n            { return symbol(sym.OR, yytext());\r\n            }\r\n          // fall through\r\n          case 90: break;\r\n          case 37:\r\n            { return symbol(sym.CHAR, yytext());\r\n            }\r\n          // fall through\r\n          case 91: break;\r\n          case 38:\r\n            { return symbol(sym.FOR, yytext());\r\n            }\r\n          // fall through\r\n          case 92: break;\r\n          case 39:\r\n            { return symbol(sym.INTEGERTYPE, yytext());\r\n            }\r\n          // fall through\r\n          case 93: break;\r\n          case 40:\r\n            { return symbol(sym.BOOLEANTYPE, yytext());\r\n            }\r\n          // fall through\r\n          case 94: break;\r\n          case 41:\r\n            { return symbol(sym.CASE, yytext());\r\n            }\r\n          // fall through\r\n          case 95: break;\r\n          case 42:\r\n            { return symbol(sym.CHARTYPE, yytext());\r\n            }\r\n          // fall through\r\n          case 96: break;\r\n          case 43:\r\n            { return symbol(sym.ELSE, yytext());\r\n            }\r\n          // fall through\r\n          case 97: break;\r\n          case 44:\r\n            { return symbol(sym.READ, yytext());\r\n            }\r\n          // fall through\r\n          case 98: break;\r\n          case 45:\r\n            { return symbol(sym.BOOLEAN, Boolean.valueOf(yytext()));\r\n            }\r\n          // fall through\r\n          case 99: break;\r\n          case 46:\r\n            { return symbol(sym.BREAK, yytext());\r\n            }\r\n          // fall through\r\n          case 100: break;\r\n          case 47:\r\n            { return symbol(sym.FLOATTYPE, yytext());\r\n            }\r\n          // fall through\r\n          case 101: break;\r\n          case 48:\r\n            { return symbol(sym.PRINT, yytext());\r\n            }\r\n          // fall through\r\n          case 102: break;\r\n          case 49:\r\n            { return symbol(sym.RANGE, yytext());\r\n            }\r\n          // fall through\r\n          case 103: break;\r\n          case 50:\r\n            { return symbol(sym.WHILE, yytext());\r\n            }\r\n          // fall through\r\n          case 104: break;\r\n          case 51:\r\n            { return symbol(sym.RETURN, yytext());\r\n            }\r\n          // fall through\r\n          case 105: break;\r\n          case 52:\r\n            { return symbol(sym.STRINGTYPE, yytext());\r\n            }\r\n          // fall through\r\n          case 106: break;\r\n          case 53:\r\n            { return symbol(sym.SWITCH, yytext());\r\n            }\r\n          // fall through\r\n          case 107: break;\r\n          case 54:\r\n            { return symbol(sym.DEFAULT, yytext());\r\n            }\r\n          // fall through\r\n          case 108: break;\r\n          default:\r\n            zzScanError(ZZ_NO_MATCH);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/generated-sources/jflex/com/compiladores/Lexer.java b/target/generated-sources/jflex/com/compiladores/Lexer.java
--- a/target/generated-sources/jflex/com/compiladores/Lexer.java	(revision 5d8f528cfec518665bb61578ae69ea155a5fe7c0)
+++ b/target/generated-sources/jflex/com/compiladores/Lexer.java	(date 1698536428884)
@@ -40,23 +40,23 @@
     "\1\u1000\1\u0100\1\u1100\1\u1200\1\u1300\1\u0100\1\u1400\1\u1500"+
     "\1\u1600\1\u1700\1\u1800\1\u1900\1\u1a00\1\u1b00\1\u0100\1\u1c00"+
     "\1\u1d00\1\u1e00\12\u1f00\1\u2000\1\u2100\1\u2200\1\u1f00\1\u2300"+
-    "\1\u2400\2\u1f00\31\u0100\1\u2500\121\u0100\1\u2600\4\u0100\1\u2700"+
-    "\1\u0100\1\u2800\1\u2900\1\u2a00\1\u2b00\1\u2c00\1\u2d00\53\u0100"+
-    "\1\u2e00\10\u2f00\31\u1f00\1\u0100\1\u3000\1\u3100\1\u0100\1\u3200"+
-    "\1\u3300\1\u3400\1\u3500\1\u3600\1\u3700\1\u3800\1\u3900\1\u3a00"+
-    "\1\u0100\1\u3b00\1\u3c00\1\u3d00\1\u3e00\1\u3f00\1\u4000\1\u4100"+
-    "\1\u4200\1\u4300\1\u4400\1\u4500\1\u4600\1\u4700\1\u4800\1\u4900"+
-    "\1\u4a00\1\u4b00\1\u4c00\1\u4d00\1\u4e00\1\u1f00\1\u4f00\1\u5000"+
-    "\1\u5100\1\u5200\3\u0100\1\u5300\1\u5400\1\u5500\12\u1f00\4\u0100"+
-    "\1\u5600\17\u1f00\2\u0100\1\u5700\41\u1f00\2\u0100\1\u5800\1\u5900"+
-    "\2\u1f00\1\u5a00\1\u5b00\27\u0100\1\u5c00\4\u0100\1\u5d00\1\u5e00"+
-    "\42\u1f00\1\u0100\1\u5f00\1\u6000\11\u1f00\1\u6100\24\u1f00\1\u6200"+
-    "\1\u6300\1\u1f00\1\u6400\1\u6500\1\u6600\1\u6700\2\u1f00\1\u6800"+
-    "\5\u1f00\1\u6900\1\u6a00\1\u6b00\5\u1f00\1\u6c00\1\u6d00\2\u1f00"+
-    "\1\u6e00\1\u1f00\1\u6f00\14\u1f00\1\u7000\4\u1f00\246\u0100\1\u7100"+
-    "\20\u0100\1\u7200\1\u7300\25\u0100\1\u7400\34\u0100\1\u7500\14\u1f00"+
-    "\2\u0100\1\u7600\5\u1f00\23\u0100\1\u7700\u0aec\u1f00\1\u7800\1\u7900"+
-    "\u02fe\u1f00";
+    "\1\u2400\2\u1f00\31\u0100\1\u2500\126\u0100\1\u2600\1\u0100\1\u2700"+
+    "\1\u2800\1\u2900\1\u2a00\1\u2b00\1\u2c00\53\u0100\1\u2d00\10\u2e00"+
+    "\31\u1f00\1\u0100\1\u2f00\1\u3000\1\u0100\1\u3100\1\u3200\1\u3300"+
+    "\1\u3400\1\u3500\1\u3600\1\u3700\1\u3800\1\u3900\1\u0100\1\u3a00"+
+    "\1\u3b00\1\u3c00\1\u3d00\1\u3e00\1\u3f00\1\u4000\1\u4100\1\u4200"+
+    "\1\u4300\1\u4400\1\u4500\1\u4600\1\u4700\1\u4800\1\u4900\1\u4a00"+
+    "\1\u4b00\1\u4c00\1\u4d00\1\u1f00\1\u4e00\1\u4f00\1\u5000\1\u5100"+
+    "\3\u0100\1\u5200\1\u5300\1\u5400\11\u1f00\1\u5500\4\u0100\1\u5600"+
+    "\17\u1f00\2\u0100\1\u5700\41\u1f00\2\u0100\1\u5800\1\u5900\2\u1f00"+
+    "\1\u5a00\1\u5b00\27\u0100\1\u5c00\4\u0100\1\u5d00\1\u5e00\41\u1f00"+
+    "\1\u5f00\1\u0100\1\u6000\1\u6100\11\u1f00\1\u6200\22\u1f00\1\u6300"+
+    "\1\u1f00\1\u6400\1\u6500\1\u1f00\1\u6600\1\u6700\1\u6800\1\u6900"+
+    "\2\u1f00\1\u6a00\4\u1f00\1\u6b00\1\u6c00\1\u6d00\1\u6e00\4\u1f00"+
+    "\1\u6f00\1\u7000\1\u7100\2\u1f00\1\u7200\1\u1f00\1\u7300\14\u1f00"+
+    "\1\u7400\4\u1f00\246\u0100\1\u7500\20\u0100\1\u7600\1\u7700\25\u0100"+
+    "\1\u7800\34\u0100\1\u7900\14\u1f00\2\u0100\1\u7a00\5\u1f00\23\u0100"+
+    "\1\u7b00\u0aec\u1f00\1\u7c00\1\u7d00\u02fe\u1f00";
 
   private static int [] zzUnpackcmap_top() {
     int [] result = new int[4352];
@@ -108,213 +108,220 @@
     "\1\0\1\10\1\0\36\10\33\0\2\3\131\10\13\0"+
     "\1\10\16\3\12\0\41\10\11\0\2\10\4\3\1\10"+
     "\2\3\1\0\30\10\4\0\1\10\11\0\1\10\3\0"+
-    "\1\10\5\0\22\3\31\10\3\0\4\3\13\10\65\3"+
-    "\25\10\1\3\22\10\13\3\61\0\66\10\3\0\1\10"+
-    "\22\0\1\10\7\0\12\10\2\0\2\3\12\0\1\3"+
-    "\20\10\3\0\1\3\10\10\2\3\2\10\2\3\26\10"+
-    "\1\3\7\10\1\3\1\10\3\3\4\10\2\3\1\0"+
-    "\1\10\7\0\2\3\2\0\2\3\3\0\1\10\10\3"+
-    "\1\0\4\3\2\10\1\3\3\10\2\0\2\3\12\0"+
-    "\4\10\7\3\2\10\1\3\1\0\2\3\3\0\1\3"+
-    "\6\10\4\3\2\10\2\3\26\10\1\3\7\10\1\3"+
-    "\2\10\1\3\2\10\1\3\2\10\2\3\1\0\1\3"+
-    "\5\0\4\3\2\0\2\3\3\0\3\3\1\0\7\3"+
-    "\4\10\1\3\1\10\7\3\14\0\3\10\1\0\13\3"+
-    "\3\0\1\3\11\10\1\3\3\10\1\3\26\10\1\3"+
-    "\7\10\1\3\2\10\1\3\5\10\2\3\1\0\1\10"+
-    "\10\0\1\3\3\0\1\3\3\0\2\3\1\10\17\3"+
-    "\2\10\2\0\2\3\12\0\1\3\1\10\7\3\1\10"+
-    "\6\0\1\3\3\0\1\3\10\10\2\3\2\10\2\3"+
-    "\26\10\1\3\7\10\1\3\2\10\1\3\5\10\2\3"+
-    "\1\0\1\10\7\0\2\3\2\0\2\3\3\0\7\3"+
-    "\3\0\4\3\2\10\1\3\3\10\2\0\2\3\12\0"+
-    "\1\3\1\10\20\3\1\0\1\10\1\3\6\10\3\3"+
-    "\3\10\1\3\4\10\3\3\2\10\1\3\1\10\1\3"+
-    "\2\10\3\3\2\10\3\3\3\10\3\3\14\10\4\3"+
-    "\5\0\3\3\3\0\1\3\4\0\2\3\1\10\6\3"+
-    "\1\0\16\3\12\0\11\3\1\10\6\3\5\0\10\10"+
-    "\1\3\3\10\1\3\27\10\1\3\20\10\3\3\1\10"+
-    "\7\0\1\3\3\0\1\3\4\0\7\3\2\0\1\3"+
-    "\3\10\5\3\2\10\2\0\2\3\12\0\20\3\1\10"+
-    "\3\0\1\3\10\10\1\3\3\10\1\3\27\10\1\3"+
-    "\12\10\1\3\5\10\2\3\1\0\1\10\7\0\1\3"+
-    "\3\0\1\3\4\0\7\3\2\0\7\3\1\10\1\3"+
-    "\2\10\2\0\2\3\12\0\1\3\2\10\15\3\4\0"+
-    "\11\10\1\3\3\10\1\3\51\10\2\0\1\10\7\0"+
-    "\1\3\3\0\1\3\4\0\1\10\5\3\3\10\1\0"+
-    "\7\3\3\10\2\0\2\3\12\0\12\3\6\10\1\3"+
-    "\3\0\1\3\22\10\3\3\30\10\1\3\11\10\1\3"+
-    "\1\10\2\3\7\10\3\3\1\0\4\3\6\0\1\3"+
-    "\1\0\1\3\10\0\6\3\12\0\2\3\2\0\15\3"+
-    "\60\10\1\0\2\10\7\0\4\3\10\10\10\0\1\3"+
-    "\12\0\47\3\2\10\1\3\1\10\1\3\5\10\1\3"+
-    "\30\10\1\3\1\10\1\3\12\10\1\0\2\10\11\0"+
-    "\1\10\2\3\5\10\1\3\1\10\1\3\6\0\2\3"+
-    "\12\0\2\3\4\10\40\3\1\10\27\3\2\0\6\3"+
-    "\12\0\13\3\1\0\1\3\1\0\1\3\1\0\4\3"+
-    "\2\0\10\10\1\3\44\10\4\3\24\0\1\3\2\0"+
-    "\5\10\13\0\1\3\44\0\11\3\1\0\71\3\53\10"+
-    "\24\0\1\10\12\0\6\3\6\10\4\0\4\10\3\0"+
-    "\1\10\3\0\2\10\7\0\3\10\4\0\15\10\14\0"+
-    "\1\10\17\0\2\3\46\10\1\3\1\10\5\3\1\10"+
-    "\2\3\53\10\1\3\115\10\1\3\4\10\2\3\7\10"+
-    "\1\3\1\10\1\3\4\10\2\3\51\10\1\3\4\10"+
-    "\2\3\41\10\1\3\4\10\2\3\7\10\1\3\1\10"+
-    "\1\3\4\10\2\3\17\10\1\3\71\10\1\3\4\10"+
-    "\2\3\103\10\2\3\3\0\40\3\20\10\20\3\126\10"+
-    "\2\3\6\10\3\3\u016c\10\2\3\21\10\1\3\32\10"+
-    "\5\3\113\10\3\3\13\10\7\3\15\10\1\3\4\10"+
-    "\3\0\13\3\22\10\3\0\13\3\22\10\2\0\14\3"+
-    "\15\10\1\3\3\10\1\3\2\0\14\3\64\10\40\0"+
-    "\3\3\1\10\3\3\2\10\1\0\2\3\12\0\41\3"+
-    "\4\0\1\3\12\0\6\3\131\10\7\3\5\10\2\0"+
-    "\42\10\1\0\1\10\5\3\106\10\12\3\37\10\1\3"+
-    "\14\0\4\3\14\0\12\3\12\0\36\10\2\3\5\10"+
-    "\13\3\54\10\4\3\32\10\6\3\12\0\46\3\27\10"+
-    "\5\0\4\3\65\10\12\0\1\3\35\0\2\3\13\0"+
-    "\6\3\12\0\15\3\1\10\10\3\16\0\1\3\2\0"+
-    "\77\3\5\0\57\10\21\0\7\10\4\3\12\0\21\3"+
-    "\11\0\14\3\3\0\36\10\15\0\2\10\12\0\54\10"+
-    "\16\0\14\3\44\10\24\0\10\3\12\0\3\3\3\10"+
-    "\12\0\44\10\2\3\11\10\7\3\53\10\2\3\3\10"+
-    "\20\3\3\0\1\3\25\0\4\10\1\0\6\10\1\0"+
-    "\2\10\3\0\1\10\5\3\300\10\72\0\1\3\5\0"+
-    "\26\10\2\3\6\10\2\3\46\10\2\3\6\10\2\3"+
-    "\10\10\1\3\1\10\1\3\1\10\1\3\1\10\1\3"+
-    "\37\10\2\3\65\10\1\3\7\10\1\3\1\10\3\3"+
-    "\3\10\1\3\7\10\3\3\4\10\2\3\6\10\4\3"+
-    "\15\10\5\3\3\10\1\3\7\10\16\3\5\0\32\3"+
-    "\5\0\20\3\2\10\23\3\1\10\13\3\5\0\1\3"+
-    "\12\0\1\3\1\10\15\3\1\10\20\3\15\10\3\3"+
-    "\40\10\20\3\15\0\4\3\1\0\3\3\14\0\21\3"+
-    "\1\10\4\3\1\10\2\3\12\10\1\3\1\10\3\3"+
-    "\5\10\6\3\1\10\1\3\1\10\1\3\1\10\1\3"+
-    "\4\10\1\3\13\10\2\3\4\10\5\3\5\10\4\3"+
-    "\1\10\21\3\51\10\u0177\3\57\10\1\3\57\10\1\3"+
-    "\205\10\6\3\4\10\3\0\2\10\14\3\46\10\1\3"+
-    "\1\10\5\3\1\10\2\3\70\10\7\3\1\10\17\3"+
-    "\1\0\27\10\11\3\7\10\1\3\7\10\1\3\7\10"+
-    "\1\3\7\10\1\3\7\10\1\3\7\10\1\3\7\10"+
-    "\1\3\7\10\1\3\40\0\57\3\1\10\325\3\3\10"+
-    "\31\3\11\10\6\0\1\3\5\10\2\3\5\10\4\3"+
-    "\126\10\2\3\2\0\2\3\3\10\1\3\132\10\1\3"+
-    "\4\10\5\3\53\10\1\3\136\10\21\3\40\10\60\3"+
-    "\320\10\100\3\375\10\3\3\215\10\103\3\56\10\2\3"+
-    "\15\10\3\3\20\10\12\0\2\10\24\3\57\10\1\0"+
-    "\4\3\12\0\1\3\37\10\2\0\120\10\2\0\45\3"+
-    "\11\10\2\3\147\10\2\3\65\10\2\3\11\10\52\3"+
-    "\15\10\1\0\3\10\1\0\4\10\1\0\27\10\5\0"+
-    "\4\3\1\0\13\3\1\10\7\3\64\10\14\3\2\0"+
-    "\62\10\22\0\12\3\12\0\6\3\22\0\6\10\3\3"+
-    "\1\10\1\3\2\10\13\0\34\10\10\0\2\3\27\10"+
-    "\15\0\14\3\35\10\3\3\4\0\57\10\16\0\16\3"+
-    "\1\10\12\0\6\3\5\10\1\0\12\10\12\0\5\10"+
-    "\1\3\51\10\16\0\11\3\3\10\1\0\10\10\2\0"+
-    "\2\3\12\0\6\3\27\10\3\3\1\10\3\0\62\10"+
-    "\1\0\1\10\3\0\2\10\2\0\5\10\2\0\1\10"+
-    "\1\0\1\10\30\3\3\10\2\3\13\10\5\0\2\3"+
-    "\3\10\2\0\12\3\6\10\2\3\6\10\2\3\6\10"+
-    "\11\3\7\10\1\3\7\10\1\3\53\10\1\3\16\10"+
-    "\6\3\163\10\10\0\1\3\2\0\2\3\12\0\6\3"+
-    "\244\10\14\3\27\10\4\3\61\10\u0104\3\156\10\2\3"+
-    "\152\10\46\3\7\10\14\3\5\10\5\3\1\10\1\0"+
-    "\12\10\1\3\15\10\1\3\5\10\1\3\1\10\1\3"+
-    "\2\10\1\3\2\10\1\3\154\10\41\3\153\10\22\3"+
-    "\100\10\2\3\66\10\50\3\15\10\3\3\20\0\20\3"+
-    "\20\0\3\3\2\10\30\3\3\10\31\3\1\10\6\3"+
-    "\5\10\1\3\207\10\2\3\1\0\4\3\1\10\13\3"+
-    "\12\0\7\3\32\10\4\3\1\10\1\3\32\10\13\3"+
-    "\131\10\3\3\6\10\2\3\6\10\2\3\6\10\2\3"+
-    "\3\10\3\3\2\10\3\3\2\10\22\3\3\0\4\3"+
-    "\14\10\1\3\32\10\1\3\23\10\1\3\2\10\1\3"+
-    "\17\10\2\3\16\10\42\3\173\10\105\3\65\10\210\3"+
-    "\1\0\202\3\35\10\3\3\61\10\17\3\1\0\37\3"+
-    "\40\10\15\3\36\10\5\3\46\10\5\0\5\3\36\10"+
-    "\2\3\44\10\4\3\10\10\1\3\5\10\52\3\236\10"+
-    "\2\3\12\0\6\3\44\10\4\3\44\10\4\3\50\10"+
-    "\10\3\64\10\234\3\67\10\11\3\26\10\12\3\10\10"+
-    "\230\3\6\10\2\3\1\10\1\3\54\10\1\3\2\10"+
-    "\3\3\1\10\2\3\27\10\12\3\27\10\11\3\37\10"+
-    "\101\3\23\10\1\3\2\10\12\3\26\10\12\3\32\10"+
-    "\106\3\70\10\6\3\2\10\100\3\1\10\3\0\1\3"+
-    "\2\0\5\3\4\0\4\10\1\3\3\10\1\3\35\10"+
-    "\2\3\3\0\4\3\1\0\40\3\35\10\3\3\35\10"+
-    "\43\3\10\10\1\3\34\10\2\0\31\3\66\10\12\3"+
-    "\26\10\12\3\23\10\15\3\22\10\156\3\111\10\67\3"+
-    "\63\10\15\3\63\10\15\3\44\10\4\0\10\3\12\0"+
-    "\u0146\3\52\10\1\3\2\0\3\3\2\10\116\3\35\10"+
-    "\12\3\1\10\10\3\26\10\13\0\137\3\25\10\33\3"+
-    "\27\10\11\3\3\0\65\10\17\0\37\3\12\0\17\3"+
-    "\4\0\55\10\13\0\2\3\1\0\17\3\1\0\2\3"+
-    "\31\10\7\3\12\0\6\3\3\0\44\10\16\0\1\3"+
-    "\12\0\4\3\1\10\2\0\1\10\10\3\43\10\1\0"+
-    "\2\3\1\10\11\3\3\0\60\10\16\0\4\10\4\3"+
-    "\4\0\1\3\14\0\1\10\1\3\1\10\43\3\22\10"+
-    "\1\3\31\10\14\0\6\3\1\0\101\3\7\10\1\3"+
-    "\1\10\1\3\4\10\1\3\17\10\1\3\12\10\7\3"+
-    "\57\10\14\0\5\3\12\0\6\3\4\0\1\3\10\10"+
-    "\2\3\2\10\2\3\26\10\1\3\7\10\1\3\2\10"+
-    "\1\3\5\10\1\3\2\0\1\10\7\0\2\3\2\0"+
-    "\2\3\3\0\2\3\1\10\6\3\1\0\5\3\5\10"+
-    "\2\0\2\3\7\0\3\3\5\0\213\3\65\10\22\0"+
-    "\4\10\5\3\12\0\4\3\1\0\3\10\36\3\60\10"+
-    "\24\0\2\10\1\3\1\10\10\3\12\0\246\3\57\10"+
-    "\7\0\2\3\11\0\27\3\4\10\2\0\42\3\60\10"+
-    "\21\0\3\3\1\10\13\3\12\0\46\3\53\10\15\0"+
-    "\1\10\7\3\12\0\66\3\33\10\2\3\17\0\4\3"+
-    "\12\0\306\3\54\10\17\0\145\3\100\10\12\0\25\3"+
-    "\10\10\2\3\1\10\2\3\10\10\1\3\2\10\1\3"+
-    "\30\10\6\0\1\3\2\0\2\3\4\0\1\10\1\0"+
-    "\1\10\2\0\14\3\12\0\106\3\10\10\2\3\47\10"+
-    "\7\0\2\3\7\0\1\10\1\3\1\10\1\0\33\3"+
-    "\1\10\12\0\50\10\7\0\1\10\4\0\10\3\1\0"+
-    "\10\3\1\10\13\0\56\10\20\0\3\3\1\10\42\3"+
-    "\71\10\7\3\11\10\1\3\45\10\10\0\1\3\10\0"+
-    "\1\10\17\3\12\0\30\3\36\10\2\3\26\0\1\3"+
-    "\16\0\111\3\7\10\1\3\2\10\1\3\46\10\6\0"+
-    "\3\3\1\0\1\3\2\0\1\3\7\0\1\10\1\0"+
-    "\10\3\12\0\6\3\6\10\1\3\2\10\1\3\40\10"+
-    "\5\0\1\3\2\0\1\3\5\0\1\10\7\3\12\0"+
-    "\u0136\3\23\10\4\0\271\3\1\10\54\3\4\10\37\3"+
-    "\232\10\146\3\157\10\21\3\304\10\274\3\57\10\1\3"+
-    "\11\0\307\3\107\10\271\3\71\10\7\3\37\10\1\3"+
-    "\12\0\146\3\36\10\2\3\5\0\13\3\60\10\7\0"+
-    "\11\3\4\10\14\3\12\0\11\3\25\10\5\3\23\10"+
-    "\260\3\100\10\200\3\113\10\4\3\1\0\1\10\67\0"+
-    "\7\3\4\0\15\10\100\3\2\10\1\3\1\10\1\0"+
-    "\13\3\2\0\16\3\370\10\10\3\326\10\52\3\11\10"+
-    "\367\3\37\10\61\3\3\10\21\3\4\10\10\3\u018c\10"+
-    "\4\3\153\10\5\3\15\10\3\3\11\10\7\3\12\10"+
-    "\3\3\2\0\1\3\4\0\301\3\5\0\3\3\26\0"+
-    "\2\3\7\0\36\3\4\0\224\3\3\0\273\3\125\10"+
-    "\1\3\107\10\1\3\2\10\2\3\1\10\2\3\2\10"+
-    "\2\3\4\10\1\3\14\10\1\3\1\10\1\3\7\10"+
-    "\1\3\101\10\1\3\4\10\2\3\10\10\1\3\7\10"+
-    "\1\3\34\10\1\3\4\10\1\3\5\10\1\3\1\10"+
-    "\3\3\7\10\1\3\u0154\10\2\3\31\10\1\3\31\10"+
-    "\1\3\37\10\1\3\31\10\1\3\37\10\1\3\31\10"+
-    "\1\3\37\10\1\3\31\10\1\3\37\10\1\3\31\10"+
-    "\1\3\10\10\2\3\151\0\4\3\62\0\10\3\1\0"+
-    "\16\3\1\0\26\3\5\0\1\3\17\0\120\3\7\0"+
-    "\1\3\21\0\2\3\7\0\1\3\2\0\1\3\5\0"+
-    "\325\3\55\10\3\3\7\0\7\10\2\3\12\0\4\3"+
-    "\1\10\u0171\3\54\10\16\0\5\3\306\10\13\3\7\0"+
-    "\51\3\104\10\7\0\1\10\4\3\12\0\u0156\3\1\10"+
-    "\117\3\4\10\1\3\33\10\1\3\2\10\1\3\1\10"+
-    "\2\3\1\10\1\3\12\10\1\3\4\10\1\3\1\10"+
-    "\1\3\1\10\6\3\1\10\4\3\1\10\1\3\1\10"+
-    "\1\3\1\10\1\3\3\10\1\3\2\10\1\3\1\10"+
-    "\2\3\1\10\1\3\1\10\1\3\1\10\1\3\1\10"+
-    "\1\3\1\10\1\3\2\10\1\3\1\10\2\3\4\10"+
-    "\1\3\7\10\1\3\4\10\1\3\4\10\1\3\1\10"+
-    "\1\3\12\10\1\3\21\10\5\3\3\10\1\3\5\10"+
-    "\1\3\21\10\u0134\3\12\0\6\3\336\10\42\3\65\10"+
-    "\13\3\336\10\2\3\u0182\10\16\3\u0131\10\37\3\36\10"+
-    "\342\3\113\10\266\3\1\0\36\3\140\0\200\3\360\0"+
-    "\20\3";
+    "\1\10\5\0\22\3\31\10\3\0\4\3\13\10\5\3"+
+    "\30\10\1\3\6\10\1\3\2\0\6\3\10\0\52\10"+
+    "\72\0\66\10\3\0\1\10\22\0\1\10\7\0\12\10"+
+    "\2\0\2\3\12\0\1\3\20\10\3\0\1\3\10\10"+
+    "\2\3\2\10\2\3\26\10\1\3\7\10\1\3\1\10"+
+    "\3\3\4\10\2\3\1\0\1\10\7\0\2\3\2\0"+
+    "\2\3\3\0\1\10\10\3\1\0\4\3\2\10\1\3"+
+    "\3\10\2\0\2\3\12\0\4\10\7\3\2\10\1\3"+
+    "\1\0\2\3\3\0\1\3\6\10\4\3\2\10\2\3"+
+    "\26\10\1\3\7\10\1\3\2\10\1\3\2\10\1\3"+
+    "\2\10\2\3\1\0\1\3\5\0\4\3\2\0\2\3"+
+    "\3\0\3\3\1\0\7\3\4\10\1\3\1\10\7\3"+
+    "\14\0\3\10\1\0\13\3\3\0\1\3\11\10\1\3"+
+    "\3\10\1\3\26\10\1\3\7\10\1\3\2\10\1\3"+
+    "\5\10\2\3\1\0\1\10\10\0\1\3\3\0\1\3"+
+    "\3\0\2\3\1\10\17\3\2\10\2\0\2\3\12\0"+
+    "\1\3\1\10\7\3\1\10\6\0\1\3\3\0\1\3"+
+    "\10\10\2\3\2\10\2\3\26\10\1\3\7\10\1\3"+
+    "\2\10\1\3\5\10\2\3\1\0\1\10\7\0\2\3"+
+    "\2\0\2\3\3\0\7\3\3\0\4\3\2\10\1\3"+
+    "\3\10\2\0\2\3\12\0\1\3\1\10\20\3\1\0"+
+    "\1\10\1\3\6\10\3\3\3\10\1\3\4\10\3\3"+
+    "\2\10\1\3\1\10\1\3\2\10\3\3\2\10\3\3"+
+    "\3\10\3\3\14\10\4\3\5\0\3\3\3\0\1\3"+
+    "\4\0\2\3\1\10\6\3\1\0\16\3\12\0\11\3"+
+    "\1\10\6\3\5\0\10\10\1\3\3\10\1\3\27\10"+
+    "\1\3\20\10\2\3\1\0\1\10\7\0\1\3\3\0"+
+    "\1\3\4\0\7\3\2\0\1\3\3\10\2\3\1\10"+
+    "\2\3\2\10\2\0\2\3\12\0\20\3\1\10\3\0"+
+    "\1\3\10\10\1\3\3\10\1\3\27\10\1\3\12\10"+
+    "\1\3\5\10\2\3\1\0\1\10\7\0\1\3\3\0"+
+    "\1\3\4\0\7\3\2\0\6\3\2\10\1\3\2\10"+
+    "\2\0\2\3\12\0\1\3\2\10\15\3\4\0\11\10"+
+    "\1\3\3\10\1\3\51\10\2\0\1\10\7\0\1\3"+
+    "\3\0\1\3\4\0\1\10\5\3\3\10\1\0\7\3"+
+    "\3\10\2\0\2\3\12\0\12\3\6\10\1\3\3\0"+
+    "\1\3\22\10\3\3\30\10\1\3\11\10\1\3\1\10"+
+    "\2\3\7\10\3\3\1\0\4\3\6\0\1\3\1\0"+
+    "\1\3\10\0\6\3\12\0\2\3\2\0\15\3\60\10"+
+    "\1\0\2\10\7\0\4\3\10\10\10\0\1\3\12\0"+
+    "\47\3\2\10\1\3\1\10\1\3\5\10\1\3\30\10"+
+    "\1\3\1\10\1\3\12\10\1\0\2\10\11\0\1\10"+
+    "\2\3\5\10\1\3\1\10\1\3\6\0\2\3\12\0"+
+    "\2\3\4\10\40\3\1\10\27\3\2\0\6\3\12\0"+
+    "\13\3\1\0\1\3\1\0\1\3\1\0\4\3\2\0"+
+    "\10\10\1\3\44\10\4\3\24\0\1\3\2\0\5\10"+
+    "\13\0\1\3\44\0\11\3\1\0\71\3\53\10\24\0"+
+    "\1\10\12\0\6\3\6\10\4\0\4\10\3\0\1\10"+
+    "\3\0\2\10\7\0\3\10\4\0\15\10\14\0\1\10"+
+    "\17\0\2\3\46\10\1\3\1\10\5\3\1\10\2\3"+
+    "\53\10\1\3\115\10\1\3\4\10\2\3\7\10\1\3"+
+    "\1\10\1\3\4\10\2\3\51\10\1\3\4\10\2\3"+
+    "\41\10\1\3\4\10\2\3\7\10\1\3\1\10\1\3"+
+    "\4\10\2\3\17\10\1\3\71\10\1\3\4\10\2\3"+
+    "\103\10\2\3\3\0\40\3\20\10\20\3\126\10\2\3"+
+    "\6\10\3\3\u016c\10\2\3\21\10\1\3\32\10\5\3"+
+    "\113\10\3\3\13\10\7\3\22\10\4\0\11\3\23\10"+
+    "\3\0\13\3\22\10\2\0\14\3\15\10\1\3\3\10"+
+    "\1\3\2\0\14\3\64\10\40\0\3\3\1\10\3\3"+
+    "\2\10\1\0\2\3\12\0\41\3\17\0\6\3\131\10"+
+    "\7\3\5\10\2\0\42\10\1\0\1\10\5\3\106\10"+
+    "\12\3\37\10\1\3\14\0\4\3\14\0\12\3\12\0"+
+    "\36\10\2\3\5\10\13\3\54\10\4\3\32\10\6\3"+
+    "\12\0\46\3\27\10\5\0\4\3\65\10\12\0\1\3"+
+    "\35\0\2\3\13\0\6\3\12\0\15\3\1\10\10\3"+
+    "\16\0\1\3\20\0\61\3\5\0\57\10\21\0\10\10"+
+    "\3\3\12\0\21\3\11\0\14\3\3\0\36\10\15\0"+
+    "\2\10\12\0\54\10\16\0\14\3\44\10\24\0\10\3"+
+    "\12\0\3\3\3\10\12\0\44\10\2\3\11\10\7\3"+
+    "\53\10\2\3\3\10\20\3\3\0\1\3\25\0\4\10"+
+    "\1\0\6\10\1\0\2\10\3\0\1\10\5\3\300\10"+
+    "\100\0\26\10\2\3\6\10\2\3\46\10\2\3\6\10"+
+    "\2\3\10\10\1\3\1\10\1\3\1\10\1\3\1\10"+
+    "\1\3\37\10\2\3\65\10\1\3\7\10\1\3\1\10"+
+    "\3\3\3\10\1\3\7\10\3\3\4\10\2\3\6\10"+
+    "\4\3\15\10\5\3\3\10\1\3\7\10\16\3\5\0"+
+    "\32\3\5\0\20\3\2\10\23\3\1\10\13\3\5\0"+
+    "\1\3\12\0\1\3\1\10\15\3\1\10\20\3\15\10"+
+    "\3\3\41\10\17\3\15\0\4\3\1\0\3\3\14\0"+
+    "\21\3\1\10\4\3\1\10\2\3\12\10\1\3\1\10"+
+    "\3\3\5\10\6\3\1\10\1\3\1\10\1\3\1\10"+
+    "\1\3\4\10\1\3\13\10\2\3\4\10\5\3\5\10"+
+    "\4\3\1\10\21\3\51\10\u0177\3\345\10\6\3\4\10"+
+    "\3\0\2\10\14\3\46\10\1\3\1\10\5\3\1\10"+
+    "\2\3\70\10\7\3\1\10\17\3\1\0\27\10\11\3"+
+    "\7\10\1\3\7\10\1\3\7\10\1\3\7\10\1\3"+
+    "\7\10\1\3\7\10\1\3\7\10\1\3\7\10\1\3"+
+    "\40\0\57\3\1\10\325\3\3\10\31\3\11\10\6\0"+
+    "\1\3\5\10\2\3\5\10\4\3\126\10\2\3\2\0"+
+    "\2\3\3\10\1\3\132\10\1\3\4\10\5\3\53\10"+
+    "\1\3\136\10\21\3\40\10\60\3\320\10\100\3\215\10"+
+    "\103\3\56\10\2\3\15\10\3\3\20\10\12\0\2\10"+
+    "\24\3\57\10\1\0\4\3\12\0\1\3\37\10\2\0"+
+    "\120\10\2\0\45\3\11\10\2\3\147\10\2\3\100\10"+
+    "\5\3\2\10\1\3\1\10\1\3\5\10\30\3\20\10"+
+    "\1\0\3\10\1\0\4\10\1\0\27\10\5\0\4\3"+
+    "\1\0\13\3\1\10\7\3\64\10\14\3\2\0\62\10"+
+    "\22\0\12\3\12\0\6\3\22\0\6\10\3\3\1\10"+
+    "\1\3\2\10\13\0\34\10\10\0\2\3\27\10\15\0"+
+    "\14\3\35\10\3\3\4\0\57\10\16\0\16\3\1\10"+
+    "\12\0\6\3\5\10\1\0\12\10\12\0\5\10\1\3"+
+    "\51\10\16\0\11\3\3\10\1\0\10\10\2\0\2\3"+
+    "\12\0\6\3\27\10\3\3\1\10\3\0\62\10\1\0"+
+    "\1\10\3\0\2\10\2\0\5\10\2\0\1\10\1\0"+
+    "\1\10\30\3\3\10\2\3\13\10\5\0\2\3\3\10"+
+    "\2\0\12\3\6\10\2\3\6\10\2\3\6\10\11\3"+
+    "\7\10\1\3\7\10\1\3\53\10\1\3\16\10\6\3"+
+    "\163\10\10\0\1\3\2\0\2\3\12\0\6\3\244\10"+
+    "\14\3\27\10\4\3\61\10\u0104\3\156\10\2\3\152\10"+
+    "\46\3\7\10\14\3\5\10\5\3\1\10\1\0\12\10"+
+    "\1\3\15\10\1\3\5\10\1\3\1\10\1\3\2\10"+
+    "\1\3\2\10\1\3\154\10\41\3\153\10\22\3\100\10"+
+    "\2\3\66\10\50\3\15\10\3\3\20\0\20\3\20\0"+
+    "\3\3\2\10\30\3\3\10\31\3\1\10\6\3\5\10"+
+    "\1\3\207\10\2\3\1\0\4\3\1\10\13\3\12\0"+
+    "\7\3\32\10\4\3\1\10\1\3\32\10\13\3\131\10"+
+    "\3\3\6\10\2\3\6\10\2\3\6\10\2\3\3\10"+
+    "\3\3\2\10\3\3\2\10\22\3\3\0\4\3\14\10"+
+    "\1\3\32\10\1\3\23\10\1\3\2\10\1\3\17\10"+
+    "\2\3\16\10\42\3\173\10\105\3\65\10\210\3\1\0"+
+    "\202\3\35\10\3\3\61\10\17\3\1\0\37\3\40\10"+
+    "\15\3\36\10\5\3\46\10\5\0\5\3\36\10\2\3"+
+    "\44\10\4\3\10\10\1\3\5\10\52\3\236\10\2\3"+
+    "\12\0\6\3\44\10\4\3\44\10\4\3\50\10\10\3"+
+    "\64\10\14\3\13\10\1\3\17\10\1\3\7\10\1\3"+
+    "\2\10\1\3\13\10\1\3\17\10\1\3\7\10\1\3"+
+    "\2\10\103\3\67\10\11\3\26\10\12\3\10\10\30\3"+
+    "\6\10\1\3\52\10\1\3\11\10\105\3\6\10\2\3"+
+    "\1\10\1\3\54\10\1\3\2\10\3\3\1\10\2\3"+
+    "\27\10\12\3\27\10\11\3\37\10\101\3\23\10\1\3"+
+    "\2\10\12\3\26\10\12\3\32\10\106\3\70\10\6\3"+
+    "\2\10\100\3\1\10\3\0\1\3\2\0\5\3\4\0"+
+    "\4\10\1\3\3\10\1\3\35\10\2\3\3\0\4\3"+
+    "\1\0\40\3\35\10\3\3\35\10\43\3\10\10\1\3"+
+    "\34\10\2\0\31\3\66\10\12\3\26\10\12\3\23\10"+
+    "\15\3\22\10\156\3\111\10\67\3\63\10\15\3\63\10"+
+    "\15\3\44\10\4\0\10\3\12\0\u0146\3\52\10\1\3"+
+    "\2\0\3\3\2\10\116\3\35\10\12\3\1\10\10\3"+
+    "\26\10\13\0\37\3\22\10\4\0\52\3\25\10\33\3"+
+    "\27\10\11\3\3\0\65\10\17\0\37\3\13\0\2\10"+
+    "\2\0\1\10\11\3\4\0\55\10\13\0\2\3\1\0"+
+    "\4\3\1\0\12\3\1\0\2\3\31\10\7\3\12\0"+
+    "\6\3\3\0\44\10\16\0\1\3\12\0\4\3\1\10"+
+    "\2\0\1\10\10\3\43\10\1\0\2\3\1\10\11\3"+
+    "\3\0\60\10\16\0\4\10\4\3\4\0\1\3\14\0"+
+    "\1\10\1\3\1\10\43\3\22\10\1\3\31\10\14\0"+
+    "\6\3\1\0\101\3\7\10\1\3\1\10\1\3\4\10"+
+    "\1\3\17\10\1\3\12\10\7\3\57\10\14\0\5\3"+
+    "\12\0\6\3\4\0\1\3\10\10\2\3\2\10\2\3"+
+    "\26\10\1\3\7\10\1\3\2\10\1\3\5\10\1\3"+
+    "\2\0\1\10\7\0\2\3\2\0\2\3\3\0\2\3"+
+    "\1\10\6\3\1\0\5\3\5\10\2\0\2\3\7\0"+
+    "\3\3\5\0\213\3\65\10\22\0\4\10\5\3\12\0"+
+    "\4\3\1\0\3\10\36\3\60\10\24\0\2\10\1\3"+
+    "\1\10\10\3\12\0\246\3\57\10\7\0\2\3\11\0"+
+    "\27\3\4\10\2\0\42\3\60\10\21\0\3\3\1\10"+
+    "\13\3\12\0\46\3\53\10\15\0\1\10\7\3\12\0"+
+    "\66\3\33\10\2\3\17\0\4\3\12\0\6\3\7\10"+
+    "\271\3\54\10\17\0\145\3\100\10\12\0\25\3\10\10"+
+    "\2\3\1\10\2\3\10\10\1\3\2\10\1\3\30\10"+
+    "\6\0\1\3\2\0\2\3\4\0\1\10\1\0\1\10"+
+    "\2\0\14\3\12\0\106\3\10\10\2\3\47\10\7\0"+
+    "\2\3\7\0\1\10\1\3\1\10\1\0\33\3\1\10"+
+    "\12\0\50\10\7\0\1\10\4\0\10\3\1\0\10\3"+
+    "\1\10\13\0\56\10\20\0\3\3\1\10\22\3\111\10"+
+    "\7\3\11\10\1\3\45\10\10\0\1\3\10\0\1\10"+
+    "\17\3\12\0\30\3\36\10\2\3\26\0\1\3\16\0"+
+    "\111\3\7\10\1\3\2\10\1\3\46\10\6\0\3\3"+
+    "\1\0\1\3\2\0\1\3\7\0\1\10\1\0\10\3"+
+    "\12\0\6\3\6\10\1\3\2\10\1\3\40\10\5\0"+
+    "\1\3\2\0\1\3\5\0\1\10\7\3\12\0\u0136\3"+
+    "\23\10\4\0\271\3\1\10\54\3\4\10\37\3\232\10"+
+    "\146\3\157\10\21\3\304\10\u014c\3\141\10\17\3\57\10"+
+    "\1\3\11\0\307\3\107\10\271\3\71\10\7\3\37\10"+
+    "\1\3\12\0\6\3\117\10\1\3\12\0\6\3\36\10"+
+    "\2\3\5\0\13\3\60\10\7\0\11\3\4\10\14\3"+
+    "\12\0\11\3\25\10\5\3\23\10\260\3\100\10\200\3"+
+    "\113\10\4\3\1\0\1\10\67\0\7\3\4\0\15\10"+
+    "\100\3\2\10\1\3\1\10\1\0\13\3\2\0\16\3"+
+    "\370\10\10\3\326\10\52\3\11\10\u01e7\3\4\10\1\3"+
+    "\7\10\1\3\2\10\1\3\43\10\55\3\3\10\21\3"+
+    "\4\10\10\3\u018c\10\4\3\153\10\5\3\15\10\3\3"+
+    "\11\10\7\3\12\10\3\3\2\0\1\3\4\0\134\3"+
+    "\56\0\2\3\27\0\u011e\3\5\0\3\3\26\0\2\3"+
+    "\7\0\36\3\4\0\224\3\3\0\273\3\125\10\1\3"+
+    "\107\10\1\3\2\10\2\3\1\10\2\3\2\10\2\3"+
+    "\4\10\1\3\14\10\1\3\1\10\1\3\7\10\1\3"+
+    "\101\10\1\3\4\10\2\3\10\10\1\3\7\10\1\3"+
+    "\34\10\1\3\4\10\1\3\5\10\1\3\1\10\3\3"+
+    "\7\10\1\3\u0154\10\2\3\31\10\1\3\31\10\1\3"+
+    "\37\10\1\3\31\10\1\3\37\10\1\3\31\10\1\3"+
+    "\37\10\1\3\31\10\1\3\37\10\1\3\31\10\1\3"+
+    "\10\10\2\3\151\0\4\3\62\0\10\3\1\0\16\3"+
+    "\1\0\26\3\5\0\1\3\17\0\120\3\37\10\341\3"+
+    "\7\0\1\3\21\0\2\3\7\0\1\3\2\0\1\3"+
+    "\5\0\325\3\55\10\3\3\7\0\7\10\2\3\12\0"+
+    "\4\3\1\10\u0141\3\36\10\1\0\21\3\54\10\16\0"+
+    "\5\3\1\10\340\3\7\10\1\3\4\10\1\3\2\10"+
+    "\1\3\17\10\1\3\305\10\13\3\7\0\51\3\104\10"+
+    "\7\0\1\10\4\3\12\0\u0156\3\1\10\117\3\4\10"+
+    "\1\3\33\10\1\3\2\10\1\3\1\10\2\3\1\10"+
+    "\1\3\12\10\1\3\4\10\1\3\1\10\1\3\1\10"+
+    "\6\3\1\10\4\3\1\10\1\3\1\10\1\3\1\10"+
+    "\1\3\3\10\1\3\2\10\1\3\1\10\2\3\1\10"+
+    "\1\3\1\10\1\3\1\10\1\3\1\10\1\3\1\10"+
+    "\1\3\2\10\1\3\1\10\2\3\4\10\1\3\7\10"+
+    "\1\3\4\10\1\3\4\10\1\3\1\10\1\3\12\10"+
+    "\1\3\21\10\5\3\3\10\1\3\5\10\1\3\21\10"+
+    "\u0134\3\12\0\6\3\340\10\40\3\71\10\7\3\336\10"+
+    "\2\3\u0182\10\16\3\u0131\10\37\3\36\10\342\3\113\10"+
+    "\266\3\1\0\36\3\140\0\200\3\360\0\20\3";
 
   private static int [] zzUnpackcmap_blocks() {
-    int [] result = new int[31232];
+    int [] result = new int[32256];
     int offset = 0;
     offset = zzUnpackcmap_blocks(ZZ_CMAP_BLOCKS_PACKED_0, offset, result);
     return result;
